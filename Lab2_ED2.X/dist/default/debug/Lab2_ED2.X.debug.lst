

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Jul 27 17:47:05 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Generated 22/03/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461     0000                     	;# 
   462     0001                     	;# 
   463     0002                     	;# 
   464     0003                     	;# 
   465     0004                     	;# 
   466     0005                     	;# 
   467     0006                     	;# 
   468     0007                     	;# 
   469     0008                     	;# 
   470     0009                     	;# 
   471     000A                     	;# 
   472     000B                     	;# 
   473     000C                     	;# 
   474     000D                     	;# 
   475     000E                     	;# 
   476     000E                     	;# 
   477     000F                     	;# 
   478     0010                     	;# 
   479     0011                     	;# 
   480     0012                     	;# 
   481     0013                     	;# 
   482     0014                     	;# 
   483     0015                     	;# 
   484     0015                     	;# 
   485     0016                     	;# 
   486     0017                     	;# 
   487     0018                     	;# 
   488     0019                     	;# 
   489     001A                     	;# 
   490     001B                     	;# 
   491     001B                     	;# 
   492     001C                     	;# 
   493     001D                     	;# 
   494     001E                     	;# 
   495     001F                     	;# 
   496     0081                     	;# 
   497     0085                     	;# 
   498     0086                     	;# 
   499     0087                     	;# 
   500     0088                     	;# 
   501     0089                     	;# 
   502     008C                     	;# 
   503     008D                     	;# 
   504     008E                     	;# 
   505     008F                     	;# 
   506     0090                     	;# 
   507     0091                     	;# 
   508     0092                     	;# 
   509     0093                     	;# 
   510     0093                     	;# 
   511     0093                     	;# 
   512     0094                     	;# 
   513     0095                     	;# 
   514     0096                     	;# 
   515     0097                     	;# 
   516     0098                     	;# 
   517     0099                     	;# 
   518     009A                     	;# 
   519     009B                     	;# 
   520     009C                     	;# 
   521     009D                     	;# 
   522     009E                     	;# 
   523     009F                     	;# 
   524     0105                     	;# 
   525     0107                     	;# 
   526     0108                     	;# 
   527     0109                     	;# 
   528     010C                     	;# 
   529     010C                     	;# 
   530     010D                     	;# 
   531     010E                     	;# 
   532     010F                     	;# 
   533     0185                     	;# 
   534     0187                     	;# 
   535     0188                     	;# 
   536     0189                     	;# 
   537     018C                     	;# 
   538     018D                     	;# 
   539     0019                     _TXREG	set	25
   540     0007                     _PORTC	set	7
   541     0009                     _PORTE	set	9
   542     0008                     _PORTD	set	8
   543     0006                     _PORTB	set	6
   544     0005                     _PORTA	set	5
   545     0001                     _TMR0	set	1
   546     001E                     _ADRESH	set	30
   547     001F                     _ADCON0bits	set	31
   548     0064                     _TXIF	set	100
   549     00C4                     _CREN	set	196
   550     00C7                     _SPEN	set	199
   551     0031                     _RB1	set	49
   552     0030                     _RB0	set	48
   553     0058                     _RBIF	set	88
   554     005A                     _T0IF	set	90
   555     0049                     _RE1	set	73
   556     0048                     _RE0	set	72
   557     0047                     _RD7	set	71
   558     0046                     _RD6	set	70
   559     0045                     _RD5	set	69
   560     0044                     _RD4	set	68
   561     0043                     _RD3	set	67
   562     0042                     _RD2	set	66
   563     0041                     _RD1	set	65
   564     0040                     _RD0	set	64
   565     00F8                     _ADON	set	248
   566     005F                     _GIE	set	95
   567     005B                     _RBIE	set	91
   568     0098                     _TXSTAbits	set	152
   569     009A                     _SPBRGH	set	154
   570     0099                     _SPBRG	set	153
   571     0081                     _OPTION_REGbits	set	129
   572     008F                     _OSCCONbits	set	143
   573     0087                     _TRISC	set	135
   574     0089                     _TRISE	set	137
   575     0088                     _TRISD	set	136
   576     0085                     _TRISA	set	133
   577     009E                     _ADRESL	set	158
   578     0096                     _IOCB	set	150
   579     0095                     _WPUB	set	149
   580     0086                     _TRISB	set	134
   581     04C5                     _TXEN	set	1221
   582     04C4                     _SYNC	set	1220
   583     0478                     _SCS	set	1144
   584     04FD                     _VCFG1	set	1277
   585     04FC                     _VCFG0	set	1276
   586     04FF                     _ADFM	set	1279
   587     040F                     _nRBPU	set	1039
   588     0189                     _ANSELH	set	393
   589     0188                     _ANSEL	set	392
   590                           
   591                           	psect	strings
   592     04E3                     __pstrings:
   593     04E3                     stringtab:
   594     04E3                     __stringtab:
   595                           
   596                           ;	String table - string pointers are 1 byte each
   597     04E3  1BFF               	btfsc	btemp+1,7
   598     04E4  2CED               	ljmp	stringcode
   599     04E5  1383               	bcf	3,7
   600     04E6  187F               	btfsc	btemp+1,0
   601     04E7  1783               	bsf	3,7
   602     04E8  0800               	movf	0,w
   603     04E9  0A84               	incf	4,f
   604     04EA  1903               	skipnz
   605     04EB  0AFF               	incf	btemp+1,f
   606     04EC  0008               	return
   607     04ED                     stringcode:
   608     04ED                     stringdir:
   609     04ED  3004               	movlw	high stringdir
   610     04EE  008A               	movwf	10
   611     04EF  0804               	movf	4,w
   612     04F0  0A84               	incf	4,f
   613     04F1  0782               	addwf	2,f
   614     04F2                     __stringbase:
   615     04F2  3400               	retlw	0
   616     04F3                     __end_of__stringtab:
   617     04F3                     STR_2:
   618     04F3  3456               	retlw	86	;'V'
   619     04F4  344F               	retlw	79	;'O'
   620     04F5  344C               	retlw	76	;'L'
   621     04F6  3454               	retlw	84	;'T'
   622     04F7  343A               	retlw	58	;':'
   623     04F8  3420               	retlw	32	;' '
   624     04F9  3400               	retlw	0
   625     04FA                     STR_1:
   626     04FA  3450               	retlw	80	;'P'
   627     04FB  344F               	retlw	79	;'O'
   628     04FC  3454               	retlw	84	;'T'
   629     04FD  343A               	retlw	58	;':'
   630     04FE  3420               	retlw	32	;' '
   631     04FF  3400               	retlw	0
   632                           
   633                           	psect	cinit
   634     0011                     start_initialization:	
   635                           ; #config settings
   636                           
   637     0011                     __initialization:
   638                           
   639                           ; Clear objects allocated to COMMON
   640     0011  01FA               	clrf	__pbssCOMMON& (0+127)
   641                           
   642                           ; Clear objects allocated to BANK0
   643     0012  1283               	bcf	3,5	;RP0=0, select bank0
   644     0013  1303               	bcf	3,6	;RP1=0, select bank0
   645     0014  01B6               	clrf	__pbssBANK0& (0+127)
   646     0015  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   647     0016  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   648     0017  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   649     0018  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   650     0019  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   651     001A  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   652     001B  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   653     001C                     end_of_initialization:	
   654                           ;End of C runtime variable initialization code
   655                           
   656     001C                     __end_of__initialization:
   657     001C  0183               	clrf	3
   658     001D  120A  118A  2CA0   	ljmp	_main	;jump to C main() function
   659                           
   660                           	psect	bssCOMMON
   661     007A                     __pbssCOMMON:
   662     007A                     _pot_val:
   663     007A                     	ds	1
   664                           
   665                           	psect	bssBANK0
   666     0036                     __pbssBANK0:
   667     0036                     _pot_volt:
   668     0036                     	ds	2
   669     0038                     _volt:
   670     0038                     	ds	3
   671     003B                     _pot:
   672     003B                     	ds	3
   673                           
   674                           	psect	cstackCOMMON
   675     0070                     __pcstackCOMMON:
   676     0070                     ?_ioc_portB:
   677     0070                     ??_ioc_portB:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?_setup:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     ?_output_LCD:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     ?_iocb_init:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     ?_Lcd_Port:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     ?_Lcd_Cmd:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     ?_Lcd_Clear:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     ?_Lcd_Init:	
   699                           ; 1 bytes @ 0x0
   700                           
   701     0070                     ?_Lcd_Write_Char:	
   702                           ; 1 bytes @ 0x0
   703                           
   704     0070                     ?_isr:	
   705                           ; 1 bytes @ 0x0
   706                           
   707     0070                     ??_isr:	
   708                           ; 1 bytes @ 0x0
   709                           
   710     0070                     ?_main:	
   711                           ; 1 bytes @ 0x0
   712                           
   713                           
   714                           ; 2 bytes @ 0x0
   715     0070                     	ds	3
   716     0073                     ??_iocb_init:
   717     0073                     ?_adc_init:	
   718                           ; 1 bytes @ 0x3
   719                           
   720     0073                     ??_Lcd_Port:	
   721                           ; 1 bytes @ 0x3
   722                           
   723     0073                     ?_adc_read:	
   724                           ; 1 bytes @ 0x3
   725                           
   726     0073                     ?___wmul:	
   727                           ; 2 bytes @ 0x3
   728                           
   729     0073                     ?___awdiv:	
   730                           ; 2 bytes @ 0x3
   731                           
   732     0073                     ?___awmod:	
   733                           ; 2 bytes @ 0x3
   734                           
   735     0073                     ?___lwmod:	
   736                           ; 2 bytes @ 0x3
   737                           
   738     0073                     iocb_init@pinesB:	
   739                           ; 2 bytes @ 0x3
   740                           
   741     0073                     adc_init@R:	
   742                           ; 1 bytes @ 0x3
   743                           
   744     0073                     Lcd_Port@a:	
   745                           ; 1 bytes @ 0x3
   746                           
   747     0073                     ___wmul@multiplier:	
   748                           ; 1 bytes @ 0x3
   749                           
   750     0073                     ___awdiv@divisor:	
   751                           ; 2 bytes @ 0x3
   752                           
   753     0073                     ___awmod@divisor:	
   754                           ; 2 bytes @ 0x3
   755                           
   756     0073                     ___lwmod@divisor:	
   757                           ; 2 bytes @ 0x3
   758                           
   759                           
   760                           ; 2 bytes @ 0x3
   761     0073                     	ds	1
   762     0074                     ??_Lcd_Cmd:
   763     0074                     ??_Lcd_Write_Char:	
   764                           ; 1 bytes @ 0x4
   765                           
   766     0074                     adc_init@clock:	
   767                           ; 1 bytes @ 0x4
   768                           
   769                           
   770                           ; 1 bytes @ 0x4
   771     0074                     	ds	1
   772     0075                     ??_adc_read:
   773     0075                     adc_init@channel:	
   774                           ; 1 bytes @ 0x5
   775                           
   776     0075                     Lcd_Write_Char@a:	
   777                           ; 1 bytes @ 0x5
   778                           
   779     0075                     ___wmul@multiplicand:	
   780                           ; 1 bytes @ 0x5
   781                           
   782     0075                     ___awdiv@dividend:	
   783                           ; 2 bytes @ 0x5
   784                           
   785     0075                     ___awmod@dividend:	
   786                           ; 2 bytes @ 0x5
   787                           
   788     0075                     ___lwmod@dividend:	
   789                           ; 2 bytes @ 0x5
   790                           
   791                           
   792                           ; 2 bytes @ 0x5
   793     0075                     	ds	1
   794     0076                     ??_adc_init:
   795     0076                     ?_Lcd_Write_String:	
   796                           ; 1 bytes @ 0x6
   797                           
   798     0076                     Lcd_Cmd@a:	
   799                           ; 1 bytes @ 0x6
   800                           
   801     0076                     Lcd_Write_String@a:	
   802                           ; 1 bytes @ 0x6
   803                           
   804                           
   805                           ; 2 bytes @ 0x6
   806     0076                     	ds	1
   807     0077                     ??_Lcd_Clear:
   808     0077                     ?_Lcd_Set_Cursor:	
   809                           ; 1 bytes @ 0x7
   810                           
   811     0077                     ??_Lcd_Init:	
   812                           ; 1 bytes @ 0x7
   813                           
   814     0077                     ??___wmul:	
   815                           ; 1 bytes @ 0x7
   816                           
   817     0077                     ??___awdiv:	
   818                           ; 1 bytes @ 0x7
   819                           
   820     0077                     ??___awmod:	
   821                           ; 1 bytes @ 0x7
   822                           
   823     0077                     ??___lwmod:	
   824                           ; 1 bytes @ 0x7
   825                           
   826     0077                     Lcd_Set_Cursor@b:	
   827                           ; 1 bytes @ 0x7
   828                           
   829     0077                     ___awmod@counter:	
   830                           ; 1 bytes @ 0x7
   831                           
   832     0077                     ___lwmod@counter:	
   833                           ; 1 bytes @ 0x7
   834                           
   835     0077                     ___wmul@product:	
   836                           ; 1 bytes @ 0x7
   837                           
   838                           
   839                           ; 2 bytes @ 0x7
   840     0077                     	ds	1
   841     0078                     ??_Lcd_Set_Cursor:
   842     0078                     adc_init@J:	
   843                           ; 1 bytes @ 0x8
   844                           
   845     0078                     Lcd_Set_Cursor@a:	
   846                           ; 1 bytes @ 0x8
   847                           
   848     0078                     ___awmod@sign:	
   849                           ; 1 bytes @ 0x8
   850                           
   851     0078                     Lcd_Write_String@i:	
   852                           ; 1 bytes @ 0x8
   853                           
   854                           
   855                           ; 2 bytes @ 0x8
   856     0078                     	ds	1
   857     0079                     ??_setup:
   858     0079                     ??_map:	
   859                           ; 1 bytes @ 0x9
   860                           
   861     0079                     ??_separar_digitos16:	
   862                           ; 1 bytes @ 0x9
   863                           
   864     0079                     ??___lwdiv:	
   865                           ; 1 bytes @ 0x9
   866                           
   867     0079                     Lcd_Set_Cursor@temp:	
   868                           ; 1 bytes @ 0x9
   869                           
   870                           
   871                           ; 1 bytes @ 0x9
   872     0079                     	ds	1
   873     007A                     ??_output_LCD:
   874                           
   875                           	psect	cstackBANK0
   876     0020                     __pcstackBANK0:	
   877                           ; 1 bytes @ 0xA
   878                           
   879     0020                     ??_Lcd_Write_String:
   880     0020                     ?___lwdiv:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0020                     ___awdiv@counter:	
   884                           ; 2 bytes @ 0x0
   885                           
   886     0020                     ___lwdiv@divisor:	
   887                           ; 1 bytes @ 0x0
   888                           
   889                           
   890                           ; 2 bytes @ 0x0
   891     0020                     	ds	1
   892     0021                     ___awdiv@sign:
   893                           
   894                           ; 1 bytes @ 0x1
   895     0021                     	ds	1
   896     0022                     ___awdiv@quotient:
   897     0022                     ___lwdiv@dividend:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 2 bytes @ 0x2
   902     0022                     	ds	2
   903     0024                     ?_separar_digitos8:
   904     0024                     separar_digitos8@dig8:	
   905                           ; 1 bytes @ 0x4
   906                           
   907     0024                     ___lwdiv@counter:	
   908                           ; 1 bytes @ 0x4
   909                           
   910                           
   911                           ; 1 bytes @ 0x4
   912     0024                     	ds	1
   913     0025                     ??_separar_digitos8:
   914     0025                     ___lwdiv@quotient:	
   915                           ; 1 bytes @ 0x5
   916                           
   917                           
   918                           ; 2 bytes @ 0x5
   919     0025                     	ds	2
   920     0027                     ?_separar_digitos16:
   921     0027                     ?_map:	
   922                           ; 1 bytes @ 0x7
   923                           
   924     0027                     separar_digitos8@div2:	
   925                           ; 2 bytes @ 0x7
   926                           
   927     0027                     separar_digitos16@num:	
   928                           ; 1 bytes @ 0x7
   929                           
   930     0027                     map@val:	
   931                           ; 2 bytes @ 0x7
   932                           
   933                           
   934                           ; 2 bytes @ 0x7
   935     0027                     	ds	1
   936     0028                     separar_digitos8@centenas:
   937                           
   938                           ; 1 bytes @ 0x8
   939     0028                     	ds	1
   940     0029                     separar_digitos8@decenas:
   941     0029                     separar_digitos16@dig16:	
   942                           ; 1 bytes @ 0x9
   943                           
   944     0029                     map@min1:	
   945                           ; 1 bytes @ 0x9
   946                           
   947                           
   948                           ; 2 bytes @ 0x9
   949     0029                     	ds	1
   950     002A                     separar_digitos8@unidades:
   951     002A                     separar_digitos16@div2:	
   952                           ; 1 bytes @ 0xA
   953                           
   954                           
   955                           ; 2 bytes @ 0xA
   956     002A                     	ds	1
   957     002B                     separar_digitos8@num:
   958     002B                     map@max1:	
   959                           ; 1 bytes @ 0xB
   960                           
   961                           
   962                           ; 2 bytes @ 0xB
   963     002B                     	ds	1
   964     002C                     separar_digitos8@div1:
   965     002C                     separar_digitos16@centenas:	
   966                           ; 1 bytes @ 0xC
   967                           
   968                           
   969                           ; 2 bytes @ 0xC
   970     002C                     	ds	1
   971     002D                     map@min2:
   972                           
   973                           ; 2 bytes @ 0xD
   974     002D                     	ds	1
   975     002E                     separar_digitos16@decenas:
   976                           
   977                           ; 2 bytes @ 0xE
   978     002E                     	ds	1
   979     002F                     map@max2:
   980                           
   981                           ; 2 bytes @ 0xF
   982     002F                     	ds	1
   983     0030                     separar_digitos16@unidades:
   984                           
   985                           ; 2 bytes @ 0x10
   986     0030                     	ds	1
   987     0031                     map@res:
   988                           
   989                           ; 2 bytes @ 0x11
   990     0031                     	ds	1
   991     0032                     separar_digitos16@div1:
   992                           
   993                           ; 2 bytes @ 0x12
   994     0032                     	ds	2
   995     0034                     ??_main:
   996                           
   997                           ; 1 bytes @ 0x14
   998     0034                     	ds	2
   999                           
  1000                           	psect	maintext
  1001     04A0                     __pmaintext:	
  1002 ;;
  1003 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1004 ;;
  1005 ;; *************** function _main *****************
  1006 ;; Defined at:
  1007 ;;		line 78 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  2  217[None  ] int 
  1014 ;; Registers used:
  1015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1016 ;; Tracked objects:
  1017 ;;		On entry : B00/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1021 ;;      Params:         0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0
  1023 ;;      Temps:          0       2       0       0       0
  1024 ;;      Totals:         0       2       0       0       0
  1025 ;;Total ram usage:        2 bytes
  1026 ;; Hardware stack levels required when called: 6
  1027 ;; This function calls:
  1028 ;;		_adc_read
  1029 ;;		_output_LCD
  1030 ;;		_setup
  1031 ;; This function is called by:
  1032 ;;		Startup code after reset
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036     04A0                     _main:	
  1037                           ;psect for function _main
  1038                           
  1039     04A0                     l1897:	
  1040                           ;incstack = 0
  1041                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1042                           
  1043                           
  1044                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 79:     OPTION_REGbits.PS = 0b000;
  1045     04A0  120A  118A  2342  120A  118A  	fcall	_setup
  1046     04A5                     l1899:
  1047                           
  1048                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 83: 
  1049     04A5  3082               	movlw	130
  1050     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1051     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1052     04A8  00B5               	movwf	??_main+1
  1053     04A9  30DD               	movlw	221
  1054     04AA  00B4               	movwf	??_main
  1055     04AB                     u1527:
  1056     04AB  0BB4               	decfsz	??_main,f
  1057     04AC  2CAB               	goto	u1527
  1058     04AD  0BB5               	decfsz	??_main+1,f
  1059     04AE  2CAB               	goto	u1527
  1060     04AF                     l1901:
  1061                           
  1062                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 84: 
  1063     04AF  120A  118A  2570  120A  118A  	fcall	_adc_read
  1064     04B4  0874               	movf	?_adc_read+1,w
  1065     04B5  00FA               	movwf	_pot_val
  1066     04B6                     l1903:
  1067                           
  1068                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 85:     Lcd_Init();
  1069     04B6  087A               	movf	_pot_val,w
  1070     04B7  1283               	bcf	3,5	;RP0=0, select bank0
  1071     04B8  1303               	bcf	3,6	;RP1=0, select bank0
  1072     04B9  0085               	movwf	5	;volatile
  1073     04BA                     l1905:
  1074                           
  1075                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 87: 
  1076     04BA  120A  118A  2020  120A  118A  	fcall	_output_LCD
  1077     04BF  2CA5               	goto	l1899
  1078     04C0  120A  118A  280E   	ljmp	start
  1079     04C3                     __end_of_main:
  1080                           
  1081                           	psect	text1
  1082     0342                     __ptext1:	
  1083 ;; *************** function _setup *****************
  1084 ;; Defined at:
  1085 ;;		line 91 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 5
  1106 ;; This function calls:
  1107 ;;		_Lcd_Init
  1108 ;;		_adc_init
  1109 ;;		_iocb_init
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115     0342                     _setup:	
  1116                           ;psect for function _setup
  1117                           
  1118     0342                     l1829:	
  1119                           ;incstack = 0
  1120                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1121                           
  1122                           
  1123                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 93:     separar_digitos8(pot_val, pot);
  1124     0342  1683               	bsf	3,5	;RP0=1, select bank3
  1125     0343  1703               	bsf	3,6	;RP1=1, select bank3
  1126     0344  0188               	clrf	8	;volatile
  1127     0345                     l1831:
  1128                           
  1129                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 94: 
  1130     0345  3020               	movlw	32
  1131     0346  0089               	movwf	9	;volatile
  1132     0347                     l1833:
  1133                           
  1134                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 95:     Lcd_Write_String(pot);
  1135     0347  1683               	bsf	3,5	;RP0=1, select bank1
  1136     0348  1303               	bcf	3,6	;RP1=0, select bank1
  1137     0349  0185               	clrf	5	;volatile
  1138     034A                     l1835:
  1139                           
  1140                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 96: 
  1141     034A  1283               	bcf	3,5	;RP0=0, select bank0
  1142     034B  1303               	bcf	3,6	;RP1=0, select bank0
  1143     034C  0185               	clrf	5	;volatile
  1144     034D                     l1837:
  1145                           
  1146                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 97:     pot_volt = map(132,0,255,0,500);
  1147     034D  1683               	bsf	3,5	;RP0=1, select bank1
  1148     034E  1303               	bcf	3,6	;RP1=0, select bank1
  1149     034F  0186               	clrf	6	;volatile
  1150     0350                     l1839:
  1151                           
  1152                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 98:     separar_digitos16(pot_volt, volt);
  1153     0350  1283               	bcf	3,5	;RP0=0, select bank0
  1154     0351  1303               	bcf	3,6	;RP1=0, select bank0
  1155     0352  0186               	clrf	6	;volatile
  1156     0353                     l1841:
  1157                           
  1158                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 99:     Lcd_Set_Cursor(2,4);
  1159     0353  1683               	bsf	3,5	;RP0=1, select bank1
  1160     0354  1303               	bcf	3,6	;RP1=0, select bank1
  1161     0355  0188               	clrf	8	;volatile
  1162     0356                     l1843:
  1163                           
  1164                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 100:     Lcd_Write_String("VOLT: ");
  1165     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0358  0188               	clrf	8	;volatile
  1168     0359                     l1845:
  1169                           
  1170                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 101: 
  1171     0359  1683               	bsf	3,5	;RP0=1, select bank1
  1172     035A  1303               	bcf	3,6	;RP1=0, select bank1
  1173     035B  0189               	clrf	9	;volatile
  1174     035C                     l1847:
  1175                           
  1176                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 102:     Lcd_Write_Char(volt[0]);
  1177     035C  1283               	bcf	3,5	;RP0=0, select bank0
  1178     035D  1303               	bcf	3,6	;RP1=0, select bank0
  1179     035E  0189               	clrf	9	;volatile
  1180     035F                     l1849:
  1181                           
  1182                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 103:     Lcd_Write_Char(volt[1]);
  1183     035F  1683               	bsf	3,5	;RP0=1, select bank1
  1184     0360  1303               	bcf	3,6	;RP1=0, select bank1
  1185     0361  0187               	clrf	7	;volatile
  1186     0362                     l1851:
  1187                           
  1188                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 104:     Lcd_Write_Char('.');
  1189     0362  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0363  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0364  0187               	clrf	7	;volatile
  1192     0365                     l1853:
  1193                           
  1194                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 107: }
  1195     0365  3070               	movlw	112
  1196     0366  1683               	bsf	3,5	;RP0=1, select bank1
  1197     0367  1303               	bcf	3,6	;RP1=0, select bank1
  1198     0368  048F               	iorwf	15,f	;volatile
  1199     0369                     l1855:
  1200                           
  1201                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 108: 
  1202     0369  140F               	bsf	15,0	;volatile
  1203     036A                     l1857:
  1204                           
  1205                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 110: void separar_digitos8(uint8_t num, char dig8
      +                          []){
  1206     036A  3023               	movlw	35
  1207     036B  120A  118A  254C  120A  118A  	fcall	_iocb_init
  1208     0370                     l1859:
  1209                           
  1210                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 111:     uint8_t div1,div2,div3,centenas,decenas,
      +                          unidades;
  1211     0370  01F3               	clrf	adc_init@R
  1212     0371  3008               	movlw	8
  1213     0372  00F4               	movwf	adc_init@clock
  1214     0373  300D               	movlw	13
  1215     0374  00F5               	movwf	adc_init@channel
  1216     0375  3000               	movlw	0
  1217     0376  120A  118A  21FE  120A  118A  	fcall	_adc_init
  1218     037B                     l1861:
  1219                           
  1220                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 114:     div2 = div1 / 10;
  1221     037B  178B               	bsf	11,7	;volatile
  1222     037C                     l1863:
  1223                           
  1224                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 116: 
  1225     037C  30F8               	movlw	-8
  1226     037D  1683               	bsf	3,5	;RP0=1, select bank1
  1227     037E  1303               	bcf	3,6	;RP1=0, select bank1
  1228     037F  0581               	andwf	1,f	;volatile
  1229     0380                     l1865:
  1230                           
  1231                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 122: }
  1232     0380  120A  118A  22B1  120A  118A  	fcall	_Lcd_Init
  1233     0385                     l224:
  1234     0385  0008               	return
  1235     0386                     __end_of_setup:
  1236                           
  1237                           	psect	text2
  1238     054C                     __ptext2:	
  1239 ;; *************** function _iocb_init *****************
  1240 ;; Defined at:
  1241 ;;		line 4 in file "iocb_init.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  pinesB          1    wreg     unsigned char 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  pinesB          1    3[COMMON] unsigned char 
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      void 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0, btemp+1
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1255 ;;      Params:         0       0       0       0       0
  1256 ;;      Locals:         1       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0
  1258 ;;      Totals:         1       0       0       0       0
  1259 ;;Total ram usage:        1 bytes
  1260 ;; Hardware stack levels used: 1
  1261 ;; Hardware stack levels required when called: 2
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_setup
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269     054C                     _iocb_init:	
  1270                           ;psect for function _iocb_init
  1271                           
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in _iocb_init: [wreg+status,2+status,0+btemp+1]
  1275                           ;iocb_init@pinesB stored from wreg
  1276     054C  00F3               	movwf	iocb_init@pinesB
  1277     054D                     l1041:
  1278                           
  1279                           ;iocb_init.c: 5:     TRISB |= pinesB;
  1280     054D  0873               	movf	iocb_init@pinesB,w	;volatile
  1281     054E  00FF               	movwf	btemp+1
  1282     054F  087F               	movf	btemp+1,w
  1283     0550  1683               	bsf	3,5	;RP0=1, select bank1
  1284     0551  1303               	bcf	3,6	;RP1=0, select bank1
  1285     0552  0486               	iorwf	6,f	;volatile
  1286     0553                     l1043:
  1287                           
  1288                           ;iocb_init.c: 6:     nRBPU = 0;
  1289     0553  1381               	bcf	1,7	;volatile
  1290                           
  1291                           ;iocb_init.c: 7:     WPUB |= pinesB;
  1292     0554  0873               	movf	iocb_init@pinesB,w	;volatile
  1293     0555  00FF               	movwf	btemp+1
  1294     0556  087F               	movf	btemp+1,w
  1295     0557  0495               	iorwf	21,f	;volatile
  1296     0558                     l1045:
  1297                           
  1298                           ;iocb_init.c: 8:     RBIE = 1;
  1299     0558  158B               	bsf	11,3	;volatile
  1300                           
  1301                           ;iocb_init.c: 9:     IOCB |= pinesB;
  1302     0559  0873               	movf	iocb_init@pinesB,w	;volatile
  1303     055A  00FF               	movwf	btemp+1
  1304     055B  087F               	movf	btemp+1,w
  1305     055C  0496               	iorwf	22,f	;volatile
  1306     055D                     l1047:
  1307                           
  1308                           ;iocb_init.c: 10:     GIE = 1;
  1309     055D  178B               	bsf	11,7	;volatile
  1310     055E                     l15:
  1311     055E  0008               	return
  1312     055F                     __end_of_iocb_init:
  1313                           
  1314                           	psect	text3
  1315     01FE                     __ptext3:	
  1316 ;; *************** function _adc_init *****************
  1317 ;; Defined at:
  1318 ;;		line 4 in file "ADC_lib.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  J               1    wreg     unsigned char 
  1321 ;;  R               1    3[COMMON] unsigned char 
  1322 ;;  clock           1    4[COMMON] unsigned char 
  1323 ;;  channel         1    5[COMMON] unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  J               1    8[COMMON] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         3       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0
  1338 ;;      Totals:         6       0       0       0       0
  1339 ;;Total ram usage:        6 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 2
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_setup
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     01FE                     _adc_init:	
  1350                           ;psect for function _adc_init
  1351                           
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1355                           ;adc_init@J stored from wreg
  1356     01FE  00F8               	movwf	adc_init@J
  1357     01FF                     l1469:
  1358                           
  1359                           ;ADC_lib.c: 13:     ADFM = J;
  1360     01FF  1878               	btfsc	adc_init@J,0
  1361     0200  2A02               	goto	u1061
  1362     0201  2A06               	goto	u1060
  1363     0202                     u1061:
  1364     0202  1683               	bsf	3,5	;RP0=1, select bank1
  1365     0203  1303               	bcf	3,6	;RP1=0, select bank1
  1366     0204  179F               	bsf	31,7	;volatile
  1367     0205  2A09               	goto	u1074
  1368     0206                     u1060:
  1369     0206  1683               	bsf	3,5	;RP0=1, select bank1
  1370     0207  1303               	bcf	3,6	;RP1=0, select bank1
  1371     0208  139F               	bcf	31,7	;volatile
  1372     0209                     u1074:
  1373                           
  1374                           ;ADC_lib.c: 14:     VCFG0 = R;
  1375     0209  1873               	btfsc	adc_init@R,0
  1376     020A  2A0C               	goto	u1081
  1377     020B  2A10               	goto	u1080
  1378     020C                     u1081:
  1379     020C  1683               	bsf	3,5	;RP0=1, select bank1
  1380     020D  1303               	bcf	3,6	;RP1=0, select bank1
  1381     020E  161F               	bsf	31,4	;volatile
  1382     020F  2A13               	goto	u1094
  1383     0210                     u1080:
  1384     0210  1683               	bsf	3,5	;RP0=1, select bank1
  1385     0211  1303               	bcf	3,6	;RP1=0, select bank1
  1386     0212  121F               	bcf	31,4	;volatile
  1387     0213                     u1094:
  1388                           
  1389                           ;ADC_lib.c: 15:     VCFG1 = R;
  1390     0213  1873               	btfsc	adc_init@R,0
  1391     0214  2A16               	goto	u1101
  1392     0215  2A1A               	goto	u1100
  1393     0216                     u1101:
  1394     0216  1683               	bsf	3,5	;RP0=1, select bank1
  1395     0217  1303               	bcf	3,6	;RP1=0, select bank1
  1396     0218  169F               	bsf	31,5	;volatile
  1397     0219  2A1D               	goto	u1114
  1398     021A                     u1100:
  1399     021A  1683               	bsf	3,5	;RP0=1, select bank1
  1400     021B  1303               	bcf	3,6	;RP1=0, select bank1
  1401     021C  129F               	bcf	31,5	;volatile
  1402     021D                     u1114:
  1403                           
  1404                           ;ADC_lib.c: 17:     switch(clock){
  1405     021D  2A36               	goto	l1481
  1406     021E                     l1471:
  1407                           
  1408                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
  1409     021E  303F               	movlw	-193
  1410     021F  1283               	bcf	3,5	;RP0=0, select bank0
  1411     0220  1303               	bcf	3,6	;RP1=0, select bank0
  1412     0221  059F               	andwf	31,f	;volatile
  1413                           
  1414                           ;ADC_lib.c: 21:             break;
  1415     0222  2A4C               	goto	l1483
  1416     0223                     l1473:
  1417                           
  1418                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
  1419     0223  1283               	bcf	3,5	;RP0=0, select bank0
  1420     0224  1303               	bcf	3,6	;RP1=0, select bank0
  1421     0225  081F               	movf	31,w	;volatile
  1422     0226  393F               	andlw	-193
  1423     0227  3840               	iorlw	64
  1424     0228  009F               	movwf	31	;volatile
  1425                           
  1426                           ;ADC_lib.c: 25:             break;
  1427     0229  2A4C               	goto	l1483
  1428     022A                     l1475:
  1429                           
  1430                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
  1431     022A  1283               	bcf	3,5	;RP0=0, select bank0
  1432     022B  1303               	bcf	3,6	;RP1=0, select bank0
  1433     022C  081F               	movf	31,w	;volatile
  1434     022D  393F               	andlw	-193
  1435     022E  3880               	iorlw	128
  1436     022F  009F               	movwf	31	;volatile
  1437                           
  1438                           ;ADC_lib.c: 29:             break;
  1439     0230  2A4C               	goto	l1483
  1440     0231                     l1477:
  1441                           
  1442                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1443     0231  30C0               	movlw	192
  1444     0232  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0233  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0234  049F               	iorwf	31,f	;volatile
  1447                           
  1448                           ;ADC_lib.c: 33:             break;
  1449     0235  2A4C               	goto	l1483
  1450     0236                     l1481:
  1451     0236  0874               	movf	adc_init@clock,w
  1452     0237  00F6               	movwf	??_adc_init
  1453     0238  01F7               	clrf	??_adc_init+1
  1454                           
  1455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1456                           ; Switch size 1, requested type "simple"
  1457                           ; Number of cases is 1, Range of values is 0 to 0
  1458                           ; switch strategies available:
  1459                           ; Name         Instructions Cycles
  1460                           ; simple_byte            4     3 (average)
  1461                           ; direct_byte           11     8 (fixed)
  1462                           ; jumptable            260     6 (fixed)
  1463                           ;	Chosen strategy is simple_byte
  1464     0239  0877               	movf	??_adc_init+1,w
  1465     023A  3A00               	xorlw	0	; case 0
  1466     023B  1903               	skipnz
  1467     023C  2A3E               	goto	l1927
  1468     023D  2A4C               	goto	l1483
  1469     023E                     l1927:
  1470                           
  1471                           ; Switch size 1, requested type "simple"
  1472                           ; Number of cases is 4, Range of values is 1 to 20
  1473                           ; switch strategies available:
  1474                           ; Name         Instructions Cycles
  1475                           ; simple_byte           13     7 (average)
  1476                           ; direct_byte           71    11 (fixed)
  1477                           ; jumptable            263     9 (fixed)
  1478                           ;	Chosen strategy is simple_byte
  1479     023E  0876               	movf	??_adc_init,w
  1480     023F  3A01               	xorlw	1	; case 1
  1481     0240  1903               	skipnz
  1482     0241  2A1E               	goto	l1471
  1483     0242  3A05               	xorlw	5	; case 4
  1484     0243  1903               	skipnz
  1485     0244  2A23               	goto	l1473
  1486     0245  3A0C               	xorlw	12	; case 8
  1487     0246  1903               	skipnz
  1488     0247  2A2A               	goto	l1475
  1489     0248  3A1C               	xorlw	28	; case 20
  1490     0249  1903               	skipnz
  1491     024A  2A31               	goto	l1477
  1492     024B  2A4C               	goto	l1483
  1493     024C                     l1483:
  1494                           
  1495                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1496     024C  0875               	movf	adc_init@channel,w
  1497     024D  00F6               	movwf	??_adc_init
  1498     024E  0DF6               	rlf	??_adc_init,f
  1499     024F  0DF6               	rlf	??_adc_init,f
  1500     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1501     0251  081F               	movf	31,w	;volatile
  1502     0252  0676               	xorwf	??_adc_init,w
  1503     0253  39C3               	andlw	-61
  1504     0254  0676               	xorwf	??_adc_init,w
  1505     0255  009F               	movwf	31	;volatile
  1506     0256                     l1485:
  1507                           
  1508                           ;ADC_lib.c: 38:     ADON = 1;
  1509     0256  141F               	bsf	31,0	;volatile
  1510     0257                     l38:
  1511     0257  0008               	return
  1512     0258                     __end_of_adc_init:
  1513                           
  1514                           	psect	text4
  1515     02B1                     __ptext4:	
  1516 ;; *************** function _Lcd_Init *****************
  1517 ;; Defined at:
  1518 ;;		line 79 in file "LCD.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0
  1534 ;;      Temps:          2       0       0       0       0
  1535 ;;      Totals:         2       0       0       0       0
  1536 ;;Total ram usage:        2 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 4
  1539 ;; This function calls:
  1540 ;;		_Lcd_Cmd
  1541 ;;		_Lcd_Port
  1542 ;; This function is called by:
  1543 ;;		_setup
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547     02B1                     _Lcd_Init:	
  1548                           ;psect for function _Lcd_Init
  1549                           
  1550     02B1                     l1787:	
  1551                           ;incstack = 0
  1552                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1553                           
  1554                           
  1555                           ;LCD.c: 80:     RE0 = 0;
  1556     02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1557     02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1558     02B3  1009               	bcf	9,0	;volatile
  1559     02B4                     l1789:
  1560                           
  1561                           ;LCD.c: 81:     Lcd_Port(0x00);
  1562     02B4  3000               	movlw	0
  1563     02B5  120A  118A  23CA  120A  118A  	fcall	_Lcd_Port
  1564     02BA                     l1791:
  1565                           
  1566                           ;LCD.c: 83:     _delay((unsigned long)((50)*(8000000/4000.0)));
  1567     02BA  3082               	movlw	130
  1568     02BB  00F8               	movwf	??_Lcd_Init+1
  1569     02BC  30DD               	movlw	221
  1570     02BD  00F7               	movwf	??_Lcd_Init
  1571     02BE                     u1537:
  1572     02BE  0BF7               	decfsz	??_Lcd_Init,f
  1573     02BF  2ABE               	goto	u1537
  1574     02C0  0BF8               	decfsz	??_Lcd_Init+1,f
  1575     02C1  2ABE               	goto	u1537
  1576     02C2  2AC3               	nop2
  1577     02C3                     l1793:
  1578                           
  1579                           ;LCD.c: 84:     Lcd_Cmd(0x30);
  1580     02C3  3030               	movlw	48
  1581     02C4  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1582                           
  1583                           ;LCD.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1584     02C9  300D               	movlw	13
  1585     02CA  00F8               	movwf	??_Lcd_Init+1
  1586     02CB  30FB               	movlw	251
  1587     02CC  00F7               	movwf	??_Lcd_Init
  1588     02CD                     u1547:
  1589     02CD  0BF7               	decfsz	??_Lcd_Init,f
  1590     02CE  2ACD               	goto	u1547
  1591     02CF  0BF8               	decfsz	??_Lcd_Init+1,f
  1592     02D0  2ACD               	goto	u1547
  1593     02D1  2AD2               	nop2
  1594     02D2                     l1795:
  1595                           
  1596                           ;LCD.c: 86:     Lcd_Cmd(0x30);
  1597     02D2  3030               	movlw	48
  1598     02D3  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1599     02D8                     l1797:
  1600                           
  1601                           ;LCD.c: 87:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1602     02D8  3042               	movlw	66
  1603     02D9  00F7               	movwf	??_Lcd_Init
  1604     02DA                     u1557:
  1605     02DA  0BF7               	decfsz	??_Lcd_Init,f
  1606     02DB  2ADA               	goto	u1557
  1607     02DC  0000               	nop
  1608                           
  1609                           ;LCD.c: 88:     Lcd_Cmd(0x30);
  1610     02DD  3030               	movlw	48
  1611     02DE  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1612                           
  1613                           ;LCD.c: 90:     Lcd_Cmd(0x38);
  1614     02E3  3038               	movlw	56
  1615     02E4  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1616                           
  1617                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  1618     02E9  300C               	movlw	12
  1619     02EA  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1620                           
  1621                           ;LCD.c: 92:     Lcd_Cmd(0x01);
  1622     02EF  3001               	movlw	1
  1623     02F0  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1624                           
  1625                           ;LCD.c: 93:     Lcd_Cmd(0x06);
  1626     02F5  3006               	movlw	6
  1627     02F6  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  1628     02FB                     l106:
  1629     02FB  0008               	return
  1630     02FC                     __end_of_Lcd_Init:
  1631                           
  1632                           	psect	text5
  1633     0020                     __ptext5:	
  1634 ;; *************** function _output_LCD *****************
  1635 ;; Defined at:
  1636 ;;		line 125 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       0       0       0       0
  1651 ;;      Locals:         0       0       0       0       0
  1652 ;;      Temps:          0       0       0       0       0
  1653 ;;      Totals:         0       0       0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 5
  1657 ;; This function calls:
  1658 ;;		_Lcd_Clear
  1659 ;;		_Lcd_Set_Cursor
  1660 ;;		_Lcd_Write_Char
  1661 ;;		_Lcd_Write_String
  1662 ;;		_map
  1663 ;;		_separar_digitos16
  1664 ;;		_separar_digitos8
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670     0020                     _output_LCD:	
  1671                           ;psect for function _output_LCD
  1672                           
  1673     0020                     l1867:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _output_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1676                           
  1677                           
  1678                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 126:     div1 = num / 10;
  1679     0020  120A  118A  257E  120A  118A  	fcall	_Lcd_Clear
  1680                           
  1681                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 127:     unidades = num % 10;
  1682     0025  3005               	movlw	5
  1683     0026  00F7               	movwf	Lcd_Set_Cursor@b
  1684     0027  3001               	movlw	1
  1685     0028  120A  118A  24C3  120A  118A  	fcall	_Lcd_Set_Cursor
  1686     002D                     l1869:
  1687                           
  1688                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 128:     div2 = div1 / 10;
  1689     002D  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1690     002E  00F6               	movwf	Lcd_Write_String@a
  1691     002F  3080               	movlw	128
  1692     0030  00F7               	movwf	Lcd_Write_String@a+1
  1693     0031  120A  118A  2386  120A  118A  	fcall	_Lcd_Write_String
  1694     0036                     l1871:
  1695                           
  1696                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 130: 
  1697     0036  303B               	movlw	(low (_pot| 0))& (0+255)
  1698     0037  1283               	bcf	3,5	;RP0=0, select bank0
  1699     0038  1303               	bcf	3,6	;RP1=0, select bank0
  1700     0039  00A4               	movwf	separar_digitos8@dig8
  1701     003A  087A               	movf	_pot_val,w
  1702     003B  120A  118A  20A9  120A  118A  	fcall	_separar_digitos8
  1703     0040                     l1873:
  1704                           
  1705                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 132: 
  1706     0040  303B               	movlw	(low (_pot| 0))& (0+255)
  1707     0041  00F6               	movwf	Lcd_Write_String@a
  1708     0042  3000               	movlw	0
  1709     0043  00F7               	movwf	Lcd_Write_String@a+1
  1710     0044  120A  118A  2386  120A  118A  	fcall	_Lcd_Write_String
  1711     0049                     l1875:
  1712                           
  1713                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 134:     dig16[1] = decenas + 0x30;
  1714     0049  3084               	movlw	132
  1715     004A  1283               	bcf	3,5	;RP0=0, select bank0
  1716     004B  1303               	bcf	3,6	;RP1=0, select bank0
  1717     004C  00A7               	movwf	map@val
  1718     004D  3000               	movlw	0
  1719     004E  00A8               	movwf	map@val+1
  1720     004F  3000               	movlw	0
  1721     0050  00A9               	movwf	map@min1
  1722     0051  00AA               	movwf	map@min1+1
  1723     0052  30FF               	movlw	255
  1724     0053  00AB               	movwf	map@max1
  1725     0054  3000               	movlw	0
  1726     0055  00AC               	movwf	map@max1+1
  1727     0056  3000               	movlw	0
  1728     0057  00AD               	movwf	map@min2
  1729     0058  00AE               	movwf	map@min2+1
  1730     0059  30F4               	movlw	244
  1731     005A  00AF               	movwf	map@max2
  1732     005B  3001               	movlw	1
  1733     005C  00B0               	movwf	map@max2+1
  1734     005D  120A  118A  2442  120A  118A  	fcall	_map
  1735     0062  1283               	bcf	3,5	;RP0=0, select bank0
  1736     0063  1303               	bcf	3,6	;RP1=0, select bank0
  1737     0064  0828               	movf	?_map+1,w
  1738     0065  00B7               	movwf	_pot_volt+1
  1739     0066  0827               	movf	?_map,w
  1740     0067  00B6               	movwf	_pot_volt
  1741     0068                     l1877:
  1742                           
  1743                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 135:     dig16[0] = centenas + 0x30;
  1744     0068  0837               	movf	_pot_volt+1,w
  1745     0069  00A8               	movwf	separar_digitos16@num+1
  1746     006A  0836               	movf	_pot_volt,w
  1747     006B  00A7               	movwf	separar_digitos16@num
  1748     006C  3038               	movlw	(low (_volt| 0))& (0+255)
  1749     006D  00A9               	movwf	separar_digitos16@dig16
  1750     006E  120A  118A  2122  120A  118A  	fcall	_separar_digitos16
  1751     0073                     l1879:
  1752                           
  1753                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 136: }
  1754     0073  3004               	movlw	4
  1755     0074  00F7               	movwf	Lcd_Set_Cursor@b
  1756     0075  3002               	movlw	2
  1757     0076  120A  118A  24C3  120A  118A  	fcall	_Lcd_Set_Cursor
  1758     007B                     l1881:
  1759                           
  1760                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 137: 
  1761     007B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1762     007C  00F6               	movwf	Lcd_Write_String@a
  1763     007D  3080               	movlw	128
  1764     007E  00F7               	movwf	Lcd_Write_String@a+1
  1765     007F  120A  118A  2386  120A  118A  	fcall	_Lcd_Write_String
  1766     0084                     l1883:
  1767                           
  1768                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 139:     uint16_t res;
  1769     0084  1283               	bcf	3,5	;RP0=0, select bank0
  1770     0085  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0086  0838               	movf	_volt,w
  1772     0087  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  1773     008C                     l1885:
  1774                           
  1775                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 140:     res = ((val-min1)*(max2-min2)/(max1-min1
      +                          ))+min2;
  1776     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1777     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1778     008E  0839               	movf	_volt+1,w
  1779     008F  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  1780     0094                     l1887:
  1781                           
  1782                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 141:     return res;
  1783     0094  302E               	movlw	46
  1784     0095  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  1785     009A                     l1889:
  1786                           
  1787                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 142: }
  1788     009A  1283               	bcf	3,5	;RP0=0, select bank0
  1789     009B  1303               	bcf	3,6	;RP1=0, select bank0
  1790     009C  083A               	movf	_volt+2,w
  1791     009D  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  1792     00A2                     l1891:
  1793     00A2  3056               	movlw	86
  1794     00A3  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  1795     00A8                     l227:
  1796     00A8  0008               	return
  1797     00A9                     __end_of_output_LCD:
  1798                           
  1799                           	psect	text6
  1800     00A9                     __ptext6:	
  1801 ;; *************** function _separar_digitos8 *****************
  1802 ;; Defined at:
  1803 ;;		line 147 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;  num             1    wreg     unsigned char 
  1806 ;;  dig8            1    4[BANK0 ] PTR unsigned char 
  1807 ;;		 -> pot(3), 
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;  num             1   11[BANK0 ] unsigned char 
  1810 ;;  div1            1   12[BANK0 ] unsigned char 
  1811 ;;  unidades        1   10[BANK0 ] unsigned char 
  1812 ;;  decenas         1    9[BANK0 ] unsigned char 
  1813 ;;  centenas        1    8[BANK0 ] unsigned char 
  1814 ;;  div2            1    7[BANK0 ] unsigned char 
  1815 ;;  div3            1    0        unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       1       0       0       0
  1826 ;;      Locals:         0       6       0       0       0
  1827 ;;      Temps:          0       2       0       0       0
  1828 ;;      Totals:         0       9       0       0       0
  1829 ;;Total ram usage:        9 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 3
  1832 ;; This function calls:
  1833 ;;		___awdiv
  1834 ;;		___awmod
  1835 ;; This function is called by:
  1836 ;;		_output_LCD
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     00A9                     _separar_digitos8:	
  1841                           ;psect for function _separar_digitos8
  1842                           
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1846                           ;separar_digitos8@num stored from wreg
  1847     00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1848     00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1849     00AB  00AB               	movwf	separar_digitos8@num
  1850     00AC                     l1807:
  1851     00AC  300A               	movlw	10
  1852     00AD  00F3               	movwf	___awdiv@divisor
  1853     00AE  3000               	movlw	0
  1854     00AF  00F4               	movwf	___awdiv@divisor+1
  1855     00B0  082B               	movf	separar_digitos8@num,w
  1856     00B1  00A5               	movwf	??_separar_digitos8
  1857     00B2  01A6               	clrf	??_separar_digitos8+1
  1858     00B3  0825               	movf	??_separar_digitos8,w
  1859     00B4  00F5               	movwf	___awdiv@dividend
  1860     00B5  0826               	movf	??_separar_digitos8+1,w
  1861     00B6  00F6               	movwf	___awdiv@dividend+1
  1862     00B7  120A  118A  2195  120A  118A  	fcall	___awdiv
  1863     00BC  0873               	movf	?___awdiv,w
  1864     00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1865     00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1866     00BF  00AC               	movwf	separar_digitos8@div1
  1867     00C0  300A               	movlw	10
  1868     00C1  00F3               	movwf	___awmod@divisor
  1869     00C2  3000               	movlw	0
  1870     00C3  00F4               	movwf	___awmod@divisor+1
  1871     00C4  082B               	movf	separar_digitos8@num,w
  1872     00C5  00A5               	movwf	??_separar_digitos8
  1873     00C6  01A6               	clrf	??_separar_digitos8+1
  1874     00C7  0825               	movf	??_separar_digitos8,w
  1875     00C8  00F5               	movwf	___awmod@dividend
  1876     00C9  0826               	movf	??_separar_digitos8+1,w
  1877     00CA  00F6               	movwf	___awmod@dividend+1
  1878     00CB  120A  118A  2258  120A  118A  	fcall	___awmod
  1879     00D0  0873               	movf	?___awmod,w
  1880     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1881     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1882     00D3  00AA               	movwf	separar_digitos8@unidades
  1883     00D4  300A               	movlw	10
  1884     00D5  00F3               	movwf	___awdiv@divisor
  1885     00D6  3000               	movlw	0
  1886     00D7  00F4               	movwf	___awdiv@divisor+1
  1887     00D8  082C               	movf	separar_digitos8@div1,w
  1888     00D9  00A5               	movwf	??_separar_digitos8
  1889     00DA  01A6               	clrf	??_separar_digitos8+1
  1890     00DB  0825               	movf	??_separar_digitos8,w
  1891     00DC  00F5               	movwf	___awdiv@dividend
  1892     00DD  0826               	movf	??_separar_digitos8+1,w
  1893     00DE  00F6               	movwf	___awdiv@dividend+1
  1894     00DF  120A  118A  2195  120A  118A  	fcall	___awdiv
  1895     00E4  0873               	movf	?___awdiv,w
  1896     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1897     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1898     00E7  00A7               	movwf	separar_digitos8@div2
  1899     00E8  300A               	movlw	10
  1900     00E9  00F3               	movwf	___awmod@divisor
  1901     00EA  3000               	movlw	0
  1902     00EB  00F4               	movwf	___awmod@divisor+1
  1903     00EC  082C               	movf	separar_digitos8@div1,w
  1904     00ED  00A5               	movwf	??_separar_digitos8
  1905     00EE  01A6               	clrf	??_separar_digitos8+1
  1906     00EF  0825               	movf	??_separar_digitos8,w
  1907     00F0  00F5               	movwf	___awmod@dividend
  1908     00F1  0826               	movf	??_separar_digitos8+1,w
  1909     00F2  00F6               	movwf	___awmod@dividend+1
  1910     00F3  120A  118A  2258  120A  118A  	fcall	___awmod
  1911     00F8  0873               	movf	?___awmod,w
  1912     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1913     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1914     00FB  00A9               	movwf	separar_digitos8@decenas
  1915     00FC  300A               	movlw	10
  1916     00FD  00F3               	movwf	___awmod@divisor
  1917     00FE  3000               	movlw	0
  1918     00FF  00F4               	movwf	___awmod@divisor+1
  1919     0100  0827               	movf	separar_digitos8@div2,w
  1920     0101  00A5               	movwf	??_separar_digitos8
  1921     0102  01A6               	clrf	??_separar_digitos8+1
  1922     0103  0825               	movf	??_separar_digitos8,w
  1923     0104  00F5               	movwf	___awmod@dividend
  1924     0105  0826               	movf	??_separar_digitos8+1,w
  1925     0106  00F6               	movwf	___awmod@dividend+1
  1926     0107  120A  118A  2258  120A  118A  	fcall	___awmod
  1927     010C  0873               	movf	?___awmod,w
  1928     010D  1283               	bcf	3,5	;RP0=0, select bank0
  1929     010E  1303               	bcf	3,6	;RP1=0, select bank0
  1930     010F  00A8               	movwf	separar_digitos8@centenas
  1931     0110                     l1809:
  1932     0110  0824               	movf	separar_digitos8@dig8,w
  1933     0111  3E02               	addlw	2
  1934     0112  0084               	movwf	4
  1935     0113  082A               	movf	separar_digitos8@unidades,w
  1936     0114  3E30               	addlw	48
  1937     0115  1383               	bcf	3,7	;select IRP bank0
  1938     0116  0080               	movwf	0
  1939     0117                     l1811:
  1940     0117  0A24               	incf	separar_digitos8@dig8,w
  1941     0118  0084               	movwf	4
  1942     0119  0829               	movf	separar_digitos8@decenas,w
  1943     011A  3E30               	addlw	48
  1944     011B  0080               	movwf	0
  1945     011C                     l1813:
  1946     011C  0824               	movf	separar_digitos8@dig8,w
  1947     011D  0084               	movwf	4
  1948     011E  0828               	movf	separar_digitos8@centenas,w
  1949     011F  3E30               	addlw	48
  1950     0120  0080               	movwf	0
  1951     0121                     l230:
  1952     0121  0008               	return
  1953     0122                     __end_of_separar_digitos8:
  1954                           
  1955                           	psect	text7
  1956     0258                     __ptext7:	
  1957 ;; *************** function ___awmod *****************
  1958 ;; Defined at:
  1959 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  divisor         2    3[COMMON] int 
  1962 ;;  dividend        2    5[COMMON] int 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  sign            1    8[COMMON] unsigned char 
  1965 ;;  counter         1    7[COMMON] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2    3[COMMON] int 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, btemp+1
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         4       0       0       0       0
  1976 ;;      Locals:         2       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         6       0       0       0       0
  1979 ;;Total ram usage:        6 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 2
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_separar_digitos8
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989     0258                     ___awmod:	
  1990                           ;psect for function ___awmod
  1991                           
  1992     0258                     l1383:	
  1993                           ;incstack = 0
  1994                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1995                           
  1996     0258  01F8               	clrf	___awmod@sign
  1997     0259                     l1385:
  1998     0259  1FF6               	btfss	___awmod@dividend+1,7
  1999     025A  2A5C               	goto	u841
  2000     025B  2A5D               	goto	u840
  2001     025C                     u841:
  2002     025C  2A64               	goto	l1391
  2003     025D                     u840:
  2004     025D                     l1387:
  2005     025D  09F5               	comf	___awmod@dividend,f
  2006     025E  09F6               	comf	___awmod@dividend+1,f
  2007     025F  0AF5               	incf	___awmod@dividend,f
  2008     0260  1903               	skipnz
  2009     0261  0AF6               	incf	___awmod@dividend+1,f
  2010     0262                     l1389:
  2011     0262  01F8               	clrf	___awmod@sign
  2012     0263  0AF8               	incf	___awmod@sign,f
  2013     0264                     l1391:
  2014     0264  1FF4               	btfss	___awmod@divisor+1,7
  2015     0265  2A67               	goto	u851
  2016     0266  2A68               	goto	u850
  2017     0267                     u851:
  2018     0267  2A6D               	goto	l1395
  2019     0268                     u850:
  2020     0268                     l1393:
  2021     0268  09F3               	comf	___awmod@divisor,f
  2022     0269  09F4               	comf	___awmod@divisor+1,f
  2023     026A  0AF3               	incf	___awmod@divisor,f
  2024     026B  1903               	skipnz
  2025     026C  0AF4               	incf	___awmod@divisor+1,f
  2026     026D                     l1395:
  2027     026D  0873               	movf	___awmod@divisor,w
  2028     026E  0474               	iorwf	___awmod@divisor+1,w
  2029     026F  1903               	btfsc	3,2
  2030     0270  2A72               	goto	u861
  2031     0271  2A73               	goto	u860
  2032     0272                     u861:
  2033     0272  2AA2               	goto	l1413
  2034     0273                     u860:
  2035     0273                     l1397:
  2036     0273  01F7               	clrf	___awmod@counter
  2037     0274  0AF7               	incf	___awmod@counter,f
  2038     0275  2A81               	goto	l1403
  2039     0276                     l1399:
  2040     0276  3001               	movlw	1
  2041     0277                     u875:
  2042     0277  1003               	clrc
  2043     0278  0DF3               	rlf	___awmod@divisor,f
  2044     0279  0DF4               	rlf	___awmod@divisor+1,f
  2045     027A  3EFF               	addlw	-1
  2046     027B  1D03               	skipz
  2047     027C  2A77               	goto	u875
  2048     027D                     l1401:
  2049     027D  3001               	movlw	1
  2050     027E  00FF               	movwf	btemp+1
  2051     027F  087F               	movf	btemp+1,w
  2052     0280  07F7               	addwf	___awmod@counter,f
  2053     0281                     l1403:
  2054     0281  1FF4               	btfss	___awmod@divisor+1,7
  2055     0282  2A84               	goto	u881
  2056     0283  2A85               	goto	u880
  2057     0284                     u881:
  2058     0284  2A76               	goto	l1399
  2059     0285                     u880:
  2060     0285                     l1405:
  2061     0285  0874               	movf	___awmod@divisor+1,w
  2062     0286  0276               	subwf	___awmod@dividend+1,w
  2063     0287  1D03               	skipz
  2064     0288  2A8B               	goto	u895
  2065     0289  0873               	movf	___awmod@divisor,w
  2066     028A  0275               	subwf	___awmod@dividend,w
  2067     028B                     u895:
  2068     028B  1C03               	skipc
  2069     028C  2A8E               	goto	u891
  2070     028D  2A8F               	goto	u890
  2071     028E                     u891:
  2072     028E  2A95               	goto	l1409
  2073     028F                     u890:
  2074     028F                     l1407:
  2075     028F  0873               	movf	___awmod@divisor,w
  2076     0290  02F5               	subwf	___awmod@dividend,f
  2077     0291  0874               	movf	___awmod@divisor+1,w
  2078     0292  1C03               	skipc
  2079     0293  03F6               	decf	___awmod@dividend+1,f
  2080     0294  02F6               	subwf	___awmod@dividend+1,f
  2081     0295                     l1409:
  2082     0295  3001               	movlw	1
  2083     0296                     u905:
  2084     0296  1003               	clrc
  2085     0297  0CF4               	rrf	___awmod@divisor+1,f
  2086     0298  0CF3               	rrf	___awmod@divisor,f
  2087     0299  3EFF               	addlw	-1
  2088     029A  1D03               	skipz
  2089     029B  2A96               	goto	u905
  2090     029C                     l1411:
  2091     029C  3001               	movlw	1
  2092     029D  02F7               	subwf	___awmod@counter,f
  2093     029E  1D03               	btfss	3,2
  2094     029F  2AA1               	goto	u911
  2095     02A0  2AA2               	goto	u910
  2096     02A1                     u911:
  2097     02A1  2A85               	goto	l1405
  2098     02A2                     u910:
  2099     02A2                     l1413:
  2100     02A2  0878               	movf	___awmod@sign,w
  2101     02A3  1903               	btfsc	3,2
  2102     02A4  2AA6               	goto	u921
  2103     02A5  2AA7               	goto	u920
  2104     02A6                     u921:
  2105     02A6  2AAC               	goto	l1417
  2106     02A7                     u920:
  2107     02A7                     l1415:
  2108     02A7  09F5               	comf	___awmod@dividend,f
  2109     02A8  09F6               	comf	___awmod@dividend+1,f
  2110     02A9  0AF5               	incf	___awmod@dividend,f
  2111     02AA  1903               	skipnz
  2112     02AB  0AF6               	incf	___awmod@dividend+1,f
  2113     02AC                     l1417:
  2114     02AC  0876               	movf	___awmod@dividend+1,w
  2115     02AD  00F4               	movwf	?___awmod+1
  2116     02AE  0875               	movf	___awmod@dividend,w
  2117     02AF  00F3               	movwf	?___awmod
  2118     02B0                     l519:
  2119     02B0  0008               	return
  2120     02B1                     __end_of___awmod:
  2121                           
  2122                           	psect	text8
  2123     0195                     __ptext8:	
  2124 ;; *************** function ___awdiv *****************
  2125 ;; Defined at:
  2126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  divisor         2    3[COMMON] int 
  2129 ;;  dividend        2    5[COMMON] int 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  quotient        2    2[BANK0 ] int 
  2132 ;;  sign            1    1[BANK0 ] unsigned char 
  2133 ;;  counter         1    0[BANK0 ] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2    3[COMMON] int 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, btemp+1
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         4       0       0       0       0
  2144 ;;      Locals:         0       4       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         4       4       0       0       0
  2147 ;;Total ram usage:        8 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 2
  2150 ;; This function calls:
  2151 ;;		Nothing
  2152 ;; This function is called by:
  2153 ;;		_separar_digitos8
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     0195                     ___awdiv:	
  2158                           ;psect for function ___awdiv
  2159                           
  2160     0195                     l1703:	
  2161                           ;incstack = 0
  2162                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2163                           
  2164     0195  1283               	bcf	3,5	;RP0=0, select bank0
  2165     0196  1303               	bcf	3,6	;RP1=0, select bank0
  2166     0197  01A1               	clrf	___awdiv@sign
  2167     0198                     l1705:
  2168     0198  1FF4               	btfss	___awdiv@divisor+1,7
  2169     0199  299B               	goto	u1301
  2170     019A  299C               	goto	u1300
  2171     019B                     u1301:
  2172     019B  29A3               	goto	l1711
  2173     019C                     u1300:
  2174     019C                     l1707:
  2175     019C  09F3               	comf	___awdiv@divisor,f
  2176     019D  09F4               	comf	___awdiv@divisor+1,f
  2177     019E  0AF3               	incf	___awdiv@divisor,f
  2178     019F  1903               	skipnz
  2179     01A0  0AF4               	incf	___awdiv@divisor+1,f
  2180     01A1                     l1709:
  2181     01A1  01A1               	clrf	___awdiv@sign
  2182     01A2  0AA1               	incf	___awdiv@sign,f
  2183     01A3                     l1711:
  2184     01A3  1FF6               	btfss	___awdiv@dividend+1,7
  2185     01A4  29A6               	goto	u1311
  2186     01A5  29A7               	goto	u1310
  2187     01A6                     u1311:
  2188     01A6  29B0               	goto	l1717
  2189     01A7                     u1310:
  2190     01A7                     l1713:
  2191     01A7  09F5               	comf	___awdiv@dividend,f
  2192     01A8  09F6               	comf	___awdiv@dividend+1,f
  2193     01A9  0AF5               	incf	___awdiv@dividend,f
  2194     01AA  1903               	skipnz
  2195     01AB  0AF6               	incf	___awdiv@dividend+1,f
  2196     01AC                     l1715:
  2197     01AC  3001               	movlw	1
  2198     01AD  00FF               	movwf	btemp+1
  2199     01AE  087F               	movf	btemp+1,w
  2200     01AF  06A1               	xorwf	___awdiv@sign,f
  2201     01B0                     l1717:
  2202     01B0  01A2               	clrf	___awdiv@quotient
  2203     01B1  01A3               	clrf	___awdiv@quotient+1
  2204     01B2                     l1719:
  2205     01B2  0873               	movf	___awdiv@divisor,w
  2206     01B3  0474               	iorwf	___awdiv@divisor+1,w
  2207     01B4  1903               	btfsc	3,2
  2208     01B5  29B7               	goto	u1321
  2209     01B6  29B8               	goto	u1320
  2210     01B7                     u1321:
  2211     01B7  29EF               	goto	l1739
  2212     01B8                     u1320:
  2213     01B8                     l1721:
  2214     01B8  01A0               	clrf	___awdiv@counter
  2215     01B9  0AA0               	incf	___awdiv@counter,f
  2216     01BA  29C6               	goto	l1727
  2217     01BB                     l1723:
  2218     01BB  3001               	movlw	1
  2219     01BC                     u1335:
  2220     01BC  1003               	clrc
  2221     01BD  0DF3               	rlf	___awdiv@divisor,f
  2222     01BE  0DF4               	rlf	___awdiv@divisor+1,f
  2223     01BF  3EFF               	addlw	-1
  2224     01C0  1D03               	skipz
  2225     01C1  29BC               	goto	u1335
  2226     01C2                     l1725:
  2227     01C2  3001               	movlw	1
  2228     01C3  00FF               	movwf	btemp+1
  2229     01C4  087F               	movf	btemp+1,w
  2230     01C5  07A0               	addwf	___awdiv@counter,f
  2231     01C6                     l1727:
  2232     01C6  1FF4               	btfss	___awdiv@divisor+1,7
  2233     01C7  29C9               	goto	u1341
  2234     01C8  29CA               	goto	u1340
  2235     01C9                     u1341:
  2236     01C9  29BB               	goto	l1723
  2237     01CA                     u1340:
  2238     01CA                     l1729:
  2239     01CA  3001               	movlw	1
  2240     01CB                     u1355:
  2241     01CB  1003               	clrc
  2242     01CC  0DA2               	rlf	___awdiv@quotient,f
  2243     01CD  0DA3               	rlf	___awdiv@quotient+1,f
  2244     01CE  3EFF               	addlw	-1
  2245     01CF  1D03               	skipz
  2246     01D0  29CB               	goto	u1355
  2247     01D1  0874               	movf	___awdiv@divisor+1,w
  2248     01D2  0276               	subwf	___awdiv@dividend+1,w
  2249     01D3  1D03               	skipz
  2250     01D4  29D7               	goto	u1365
  2251     01D5  0873               	movf	___awdiv@divisor,w
  2252     01D6  0275               	subwf	___awdiv@dividend,w
  2253     01D7                     u1365:
  2254     01D7  1C03               	skipc
  2255     01D8  29DA               	goto	u1361
  2256     01D9  29DB               	goto	u1360
  2257     01DA                     u1361:
  2258     01DA  29E2               	goto	l1735
  2259     01DB                     u1360:
  2260     01DB                     l1731:
  2261     01DB  0873               	movf	___awdiv@divisor,w
  2262     01DC  02F5               	subwf	___awdiv@dividend,f
  2263     01DD  0874               	movf	___awdiv@divisor+1,w
  2264     01DE  1C03               	skipc
  2265     01DF  03F6               	decf	___awdiv@dividend+1,f
  2266     01E0  02F6               	subwf	___awdiv@dividend+1,f
  2267     01E1                     l1733:
  2268     01E1  1422               	bsf	___awdiv@quotient,0
  2269     01E2                     l1735:
  2270     01E2  3001               	movlw	1
  2271     01E3                     u1375:
  2272     01E3  1003               	clrc
  2273     01E4  0CF4               	rrf	___awdiv@divisor+1,f
  2274     01E5  0CF3               	rrf	___awdiv@divisor,f
  2275     01E6  3EFF               	addlw	-1
  2276     01E7  1D03               	skipz
  2277     01E8  29E3               	goto	u1375
  2278     01E9                     l1737:
  2279     01E9  3001               	movlw	1
  2280     01EA  02A0               	subwf	___awdiv@counter,f
  2281     01EB  1D03               	btfss	3,2
  2282     01EC  29EE               	goto	u1381
  2283     01ED  29EF               	goto	u1380
  2284     01EE                     u1381:
  2285     01EE  29CA               	goto	l1729
  2286     01EF                     u1380:
  2287     01EF                     l1739:
  2288     01EF  0821               	movf	___awdiv@sign,w
  2289     01F0  1903               	btfsc	3,2
  2290     01F1  29F3               	goto	u1391
  2291     01F2  29F4               	goto	u1390
  2292     01F3                     u1391:
  2293     01F3  29F9               	goto	l1743
  2294     01F4                     u1390:
  2295     01F4                     l1741:
  2296     01F4  09A2               	comf	___awdiv@quotient,f
  2297     01F5  09A3               	comf	___awdiv@quotient+1,f
  2298     01F6  0AA2               	incf	___awdiv@quotient,f
  2299     01F7  1903               	skipnz
  2300     01F8  0AA3               	incf	___awdiv@quotient+1,f
  2301     01F9                     l1743:
  2302     01F9  0823               	movf	___awdiv@quotient+1,w
  2303     01FA  00F4               	movwf	?___awdiv+1
  2304     01FB  0822               	movf	___awdiv@quotient,w
  2305     01FC  00F3               	movwf	?___awdiv
  2306     01FD                     l506:
  2307     01FD  0008               	return
  2308     01FE                     __end_of___awdiv:
  2309                           
  2310                           	psect	text9
  2311     0122                     __ptext9:	
  2312 ;; *************** function _separar_digitos16 *****************
  2313 ;; Defined at:
  2314 ;;		line 161 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  num             2    7[BANK0 ] unsigned int 
  2317 ;;  dig16           1    9[BANK0 ] PTR unsigned char 
  2318 ;;		 -> volt(3), 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  div1            2   18[BANK0 ] unsigned int 
  2321 ;;  unidades        2   16[BANK0 ] unsigned int 
  2322 ;;  decenas         2   14[BANK0 ] unsigned int 
  2323 ;;  centenas        2   12[BANK0 ] unsigned int 
  2324 ;;  div2            2   10[BANK0 ] unsigned int 
  2325 ;;  div3            2    0        unsigned int 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       3       0       0       0
  2336 ;;      Locals:         0      10       0       0       0
  2337 ;;      Temps:          0       0       0       0       0
  2338 ;;      Totals:         0      13       0       0       0
  2339 ;;Total ram usage:       13 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 3
  2342 ;; This function calls:
  2343 ;;		___lwdiv
  2344 ;;		___lwmod
  2345 ;; This function is called by:
  2346 ;;		_output_LCD
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350     0122                     _separar_digitos16:	
  2351                           ;psect for function _separar_digitos16
  2352                           
  2353     0122                     l1821:	
  2354                           ;incstack = 0
  2355                           ; Regs used in _separar_digitos16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2356                           
  2357     0122  300A               	movlw	10
  2358     0123  1283               	bcf	3,5	;RP0=0, select bank0
  2359     0124  1303               	bcf	3,6	;RP1=0, select bank0
  2360     0125  00A0               	movwf	___lwdiv@divisor
  2361     0126  3000               	movlw	0
  2362     0127  00A1               	movwf	___lwdiv@divisor+1
  2363     0128  0828               	movf	separar_digitos16@num+1,w
  2364     0129  00A3               	movwf	___lwdiv@dividend+1
  2365     012A  0827               	movf	separar_digitos16@num,w
  2366     012B  00A2               	movwf	___lwdiv@dividend
  2367     012C  120A  118A  22FC  120A  118A  	fcall	___lwdiv
  2368     0131  1283               	bcf	3,5	;RP0=0, select bank0
  2369     0132  1303               	bcf	3,6	;RP1=0, select bank0
  2370     0133  0821               	movf	?___lwdiv+1,w
  2371     0134  00B3               	movwf	separar_digitos16@div1+1
  2372     0135  0820               	movf	?___lwdiv,w
  2373     0136  00B2               	movwf	separar_digitos16@div1
  2374     0137  300A               	movlw	10
  2375     0138  00F3               	movwf	___lwmod@divisor
  2376     0139  3000               	movlw	0
  2377     013A  00F4               	movwf	___lwmod@divisor+1
  2378     013B  0828               	movf	separar_digitos16@num+1,w
  2379     013C  00F6               	movwf	___lwmod@dividend+1
  2380     013D  0827               	movf	separar_digitos16@num,w
  2381     013E  00F5               	movwf	___lwmod@dividend
  2382     013F  120A  118A  2408  120A  118A  	fcall	___lwmod
  2383     0144  0874               	movf	?___lwmod+1,w
  2384     0145  1283               	bcf	3,5	;RP0=0, select bank0
  2385     0146  1303               	bcf	3,6	;RP1=0, select bank0
  2386     0147  00B1               	movwf	separar_digitos16@unidades+1
  2387     0148  0873               	movf	?___lwmod,w
  2388     0149  00B0               	movwf	separar_digitos16@unidades
  2389     014A  300A               	movlw	10
  2390     014B  00A0               	movwf	___lwdiv@divisor
  2391     014C  3000               	movlw	0
  2392     014D  00A1               	movwf	___lwdiv@divisor+1
  2393     014E  0833               	movf	separar_digitos16@div1+1,w
  2394     014F  00A3               	movwf	___lwdiv@dividend+1
  2395     0150  0832               	movf	separar_digitos16@div1,w
  2396     0151  00A2               	movwf	___lwdiv@dividend
  2397     0152  120A  118A  22FC  120A  118A  	fcall	___lwdiv
  2398     0157  1283               	bcf	3,5	;RP0=0, select bank0
  2399     0158  1303               	bcf	3,6	;RP1=0, select bank0
  2400     0159  0821               	movf	?___lwdiv+1,w
  2401     015A  00AB               	movwf	separar_digitos16@div2+1
  2402     015B  0820               	movf	?___lwdiv,w
  2403     015C  00AA               	movwf	separar_digitos16@div2
  2404     015D  300A               	movlw	10
  2405     015E  00F3               	movwf	___lwmod@divisor
  2406     015F  3000               	movlw	0
  2407     0160  00F4               	movwf	___lwmod@divisor+1
  2408     0161  0833               	movf	separar_digitos16@div1+1,w
  2409     0162  00F6               	movwf	___lwmod@dividend+1
  2410     0163  0832               	movf	separar_digitos16@div1,w
  2411     0164  00F5               	movwf	___lwmod@dividend
  2412     0165  120A  118A  2408  120A  118A  	fcall	___lwmod
  2413     016A  0874               	movf	?___lwmod+1,w
  2414     016B  1283               	bcf	3,5	;RP0=0, select bank0
  2415     016C  1303               	bcf	3,6	;RP1=0, select bank0
  2416     016D  00AF               	movwf	separar_digitos16@decenas+1
  2417     016E  0873               	movf	?___lwmod,w
  2418     016F  00AE               	movwf	separar_digitos16@decenas
  2419     0170  300A               	movlw	10
  2420     0171  00F3               	movwf	___lwmod@divisor
  2421     0172  3000               	movlw	0
  2422     0173  00F4               	movwf	___lwmod@divisor+1
  2423     0174  082B               	movf	separar_digitos16@div2+1,w
  2424     0175  00F6               	movwf	___lwmod@dividend+1
  2425     0176  082A               	movf	separar_digitos16@div2,w
  2426     0177  00F5               	movwf	___lwmod@dividend
  2427     0178  120A  118A  2408  120A  118A  	fcall	___lwmod
  2428     017D  0874               	movf	?___lwmod+1,w
  2429     017E  1283               	bcf	3,5	;RP0=0, select bank0
  2430     017F  1303               	bcf	3,6	;RP1=0, select bank0
  2431     0180  00AD               	movwf	separar_digitos16@centenas+1
  2432     0181  0873               	movf	?___lwmod,w
  2433     0182  00AC               	movwf	separar_digitos16@centenas
  2434     0183                     l1823:
  2435     0183  0829               	movf	separar_digitos16@dig16,w
  2436     0184  3E02               	addlw	2
  2437     0185  0084               	movwf	4
  2438     0186  0830               	movf	separar_digitos16@unidades,w
  2439     0187  3E30               	addlw	48
  2440     0188  1383               	bcf	3,7	;select IRP bank0
  2441     0189  0080               	movwf	0
  2442     018A                     l1825:
  2443     018A  0A29               	incf	separar_digitos16@dig16,w
  2444     018B  0084               	movwf	4
  2445     018C  082E               	movf	separar_digitos16@decenas,w
  2446     018D  3E30               	addlw	48
  2447     018E  0080               	movwf	0
  2448     018F                     l1827:
  2449     018F  0829               	movf	separar_digitos16@dig16,w
  2450     0190  0084               	movwf	4
  2451     0191  082C               	movf	separar_digitos16@centenas,w
  2452     0192  3E30               	addlw	48
  2453     0193  0080               	movwf	0
  2454     0194                     l233:
  2455     0194  0008               	return
  2456     0195                     __end_of_separar_digitos16:
  2457                           
  2458                           	psect	text10
  2459     0408                     __ptext10:	
  2460 ;; *************** function ___lwmod *****************
  2461 ;; Defined at:
  2462 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;  divisor         2    3[COMMON] unsigned int 
  2465 ;;  dividend        2    5[COMMON] unsigned int 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  counter         1    7[COMMON] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  2    3[COMMON] unsigned int 
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, btemp+1
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         4       0       0       0       0
  2478 ;;      Locals:         1       0       0       0       0
  2479 ;;      Temps:          0       0       0       0       0
  2480 ;;      Totals:         5       0       0       0       0
  2481 ;;Total ram usage:        5 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_separar_digitos16
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491     0408                     ___lwmod:	
  2492                           ;psect for function ___lwmod
  2493                           
  2494     0408                     l1447:	
  2495                           ;incstack = 0
  2496                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2497                           
  2498     0408  0873               	movf	___lwmod@divisor,w
  2499     0409  0474               	iorwf	___lwmod@divisor+1,w
  2500     040A  1903               	btfsc	3,2
  2501     040B  2C0D               	goto	u1001
  2502     040C  2C0E               	goto	u1000
  2503     040D                     u1001:
  2504     040D  2C3D               	goto	l1465
  2505     040E                     u1000:
  2506     040E                     l1449:
  2507     040E  01F7               	clrf	___lwmod@counter
  2508     040F  0AF7               	incf	___lwmod@counter,f
  2509     0410  2C1C               	goto	l1455
  2510     0411                     l1451:
  2511     0411  3001               	movlw	1
  2512     0412                     u1015:
  2513     0412  1003               	clrc
  2514     0413  0DF3               	rlf	___lwmod@divisor,f
  2515     0414  0DF4               	rlf	___lwmod@divisor+1,f
  2516     0415  3EFF               	addlw	-1
  2517     0416  1D03               	skipz
  2518     0417  2C12               	goto	u1015
  2519     0418                     l1453:
  2520     0418  3001               	movlw	1
  2521     0419  00FF               	movwf	btemp+1
  2522     041A  087F               	movf	btemp+1,w
  2523     041B  07F7               	addwf	___lwmod@counter,f
  2524     041C                     l1455:
  2525     041C  1FF4               	btfss	___lwmod@divisor+1,7
  2526     041D  2C1F               	goto	u1021
  2527     041E  2C20               	goto	u1020
  2528     041F                     u1021:
  2529     041F  2C11               	goto	l1451
  2530     0420                     u1020:
  2531     0420                     l1457:
  2532     0420  0874               	movf	___lwmod@divisor+1,w
  2533     0421  0276               	subwf	___lwmod@dividend+1,w
  2534     0422  1D03               	skipz
  2535     0423  2C26               	goto	u1035
  2536     0424  0873               	movf	___lwmod@divisor,w
  2537     0425  0275               	subwf	___lwmod@dividend,w
  2538     0426                     u1035:
  2539     0426  1C03               	skipc
  2540     0427  2C29               	goto	u1031
  2541     0428  2C2A               	goto	u1030
  2542     0429                     u1031:
  2543     0429  2C30               	goto	l1461
  2544     042A                     u1030:
  2545     042A                     l1459:
  2546     042A  0873               	movf	___lwmod@divisor,w
  2547     042B  02F5               	subwf	___lwmod@dividend,f
  2548     042C  0874               	movf	___lwmod@divisor+1,w
  2549     042D  1C03               	skipc
  2550     042E  03F6               	decf	___lwmod@dividend+1,f
  2551     042F  02F6               	subwf	___lwmod@dividend+1,f
  2552     0430                     l1461:
  2553     0430  3001               	movlw	1
  2554     0431                     u1045:
  2555     0431  1003               	clrc
  2556     0432  0CF4               	rrf	___lwmod@divisor+1,f
  2557     0433  0CF3               	rrf	___lwmod@divisor,f
  2558     0434  3EFF               	addlw	-1
  2559     0435  1D03               	skipz
  2560     0436  2C31               	goto	u1045
  2561     0437                     l1463:
  2562     0437  3001               	movlw	1
  2563     0438  02F7               	subwf	___lwmod@counter,f
  2564     0439  1D03               	btfss	3,2
  2565     043A  2C3C               	goto	u1051
  2566     043B  2C3D               	goto	u1050
  2567     043C                     u1051:
  2568     043C  2C20               	goto	l1457
  2569     043D                     u1050:
  2570     043D                     l1465:
  2571     043D  0876               	movf	___lwmod@dividend+1,w
  2572     043E  00F4               	movwf	?___lwmod+1
  2573     043F  0875               	movf	___lwmod@dividend,w
  2574     0440  00F3               	movwf	?___lwmod
  2575     0441                     l635:
  2576     0441  0008               	return
  2577     0442                     __end_of___lwmod:
  2578                           
  2579                           	psect	text11
  2580     0442                     __ptext11:	
  2581 ;; *************** function _map *****************
  2582 ;; Defined at:
  2583 ;;		line 175 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  val             2    7[BANK0 ] unsigned int 
  2586 ;;  min1            2    9[BANK0 ] unsigned int 
  2587 ;;  max1            2   11[BANK0 ] unsigned int 
  2588 ;;  min2            2   13[BANK0 ] unsigned int 
  2589 ;;  max2            2   15[BANK0 ] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  res             2   17[BANK0 ] unsigned int 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  2    7[BANK0 ] unsigned int 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0      10       0       0       0
  2602 ;;      Locals:         0       2       0       0       0
  2603 ;;      Temps:          0       0       0       0       0
  2604 ;;      Totals:         0      12       0       0       0
  2605 ;;Total ram usage:       12 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 3
  2608 ;; This function calls:
  2609 ;;		___lwdiv
  2610 ;;		___wmul
  2611 ;; This function is called by:
  2612 ;;		_output_LCD
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616     0442                     _map:	
  2617                           ;psect for function _map
  2618                           
  2619     0442                     l1815:	
  2620                           ;incstack = 0
  2621                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2622                           
  2623     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2624     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2625     0444  0829               	movf	map@min1,w
  2626     0445  022B               	subwf	map@max1,w
  2627     0446  00A0               	movwf	___lwdiv@divisor
  2628     0447  082A               	movf	map@min1+1,w
  2629     0448  1C03               	skipc
  2630     0449  0A2A               	incf	map@min1+1,w
  2631     044A  022C               	subwf	map@max1+1,w
  2632     044B  00A1               	movwf	___lwdiv@divisor+1
  2633     044C  0829               	movf	map@min1,w
  2634     044D  0227               	subwf	map@val,w
  2635     044E  00F3               	movwf	___wmul@multiplier
  2636     044F  082A               	movf	map@min1+1,w
  2637     0450  1C03               	skipc
  2638     0451  0A2A               	incf	map@min1+1,w
  2639     0452  0228               	subwf	map@val+1,w
  2640     0453  00F4               	movwf	___wmul@multiplier+1
  2641     0454  082D               	movf	map@min2,w
  2642     0455  022F               	subwf	map@max2,w
  2643     0456  00F5               	movwf	___wmul@multiplicand
  2644     0457  082E               	movf	map@min2+1,w
  2645     0458  1C03               	skipc
  2646     0459  0A2E               	incf	map@min2+1,w
  2647     045A  0230               	subwf	map@max2+1,w
  2648     045B  00F6               	movwf	___wmul@multiplicand+1
  2649     045C  120A  118A  247B  120A  118A  	fcall	___wmul
  2650     0461  0874               	movf	?___wmul+1,w
  2651     0462  1283               	bcf	3,5	;RP0=0, select bank0
  2652     0463  1303               	bcf	3,6	;RP1=0, select bank0
  2653     0464  00A3               	movwf	___lwdiv@dividend+1
  2654     0465  0873               	movf	?___wmul,w
  2655     0466  00A2               	movwf	___lwdiv@dividend
  2656     0467  120A  118A  22FC  120A  118A  	fcall	___lwdiv
  2657     046C  1283               	bcf	3,5	;RP0=0, select bank0
  2658     046D  1303               	bcf	3,6	;RP1=0, select bank0
  2659     046E  082D               	movf	map@min2,w
  2660     046F  0720               	addwf	?___lwdiv,w
  2661     0470  00B1               	movwf	map@res
  2662     0471  082E               	movf	map@min2+1,w
  2663     0472  1803               	skipnc
  2664     0473  0A2E               	incf	map@min2+1,w
  2665     0474  0721               	addwf	?___lwdiv+1,w
  2666     0475  00B2               	movwf	map@res+1
  2667     0476                     l1817:
  2668     0476  0832               	movf	map@res+1,w
  2669     0477  00A8               	movwf	?_map+1
  2670     0478  0831               	movf	map@res,w
  2671     0479  00A7               	movwf	?_map
  2672     047A                     l236:
  2673     047A  0008               	return
  2674     047B                     __end_of_map:
  2675                           
  2676                           	psect	text12
  2677     047B                     __ptext12:	
  2678 ;; *************** function ___wmul *****************
  2679 ;; Defined at:
  2680 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  multiplier      2    3[COMMON] unsigned int 
  2683 ;;  multiplicand    2    5[COMMON] unsigned int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  product         2    7[COMMON] unsigned int 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    3[COMMON] unsigned int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         4       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0
  2698 ;;      Totals:         6       0       0       0       0
  2699 ;;Total ram usage:        6 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_map
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709     047B                     ___wmul:	
  2710                           ;psect for function ___wmul
  2711                           
  2712     047B                     l1689:	
  2713                           ;incstack = 0
  2714                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2715                           
  2716     047B  01F7               	clrf	___wmul@product
  2717     047C  01F8               	clrf	___wmul@product+1
  2718     047D                     l1691:
  2719     047D  1C73               	btfss	___wmul@multiplier,0
  2720     047E  2C80               	goto	u1261
  2721     047F  2C81               	goto	u1260
  2722     0480                     u1261:
  2723     0480  2C87               	goto	l353
  2724     0481                     u1260:
  2725     0481                     l1693:
  2726     0481  0875               	movf	___wmul@multiplicand,w
  2727     0482  07F7               	addwf	___wmul@product,f
  2728     0483  1803               	skipnc
  2729     0484  0AF8               	incf	___wmul@product+1,f
  2730     0485  0876               	movf	___wmul@multiplicand+1,w
  2731     0486  07F8               	addwf	___wmul@product+1,f
  2732     0487                     l353:
  2733     0487  3001               	movlw	1
  2734     0488                     u1275:
  2735     0488  1003               	clrc
  2736     0489  0DF5               	rlf	___wmul@multiplicand,f
  2737     048A  0DF6               	rlf	___wmul@multiplicand+1,f
  2738     048B  3EFF               	addlw	-1
  2739     048C  1D03               	skipz
  2740     048D  2C88               	goto	u1275
  2741     048E                     l1695:
  2742     048E  3001               	movlw	1
  2743     048F                     u1285:
  2744     048F  1003               	clrc
  2745     0490  0CF4               	rrf	___wmul@multiplier+1,f
  2746     0491  0CF3               	rrf	___wmul@multiplier,f
  2747     0492  3EFF               	addlw	-1
  2748     0493  1D03               	skipz
  2749     0494  2C8F               	goto	u1285
  2750     0495                     l1697:
  2751     0495  0873               	movf	___wmul@multiplier,w
  2752     0496  0474               	iorwf	___wmul@multiplier+1,w
  2753     0497  1D03               	btfss	3,2
  2754     0498  2C9A               	goto	u1291
  2755     0499  2C9B               	goto	u1290
  2756     049A                     u1291:
  2757     049A  2C7D               	goto	l1691
  2758     049B                     u1290:
  2759     049B                     l1699:
  2760     049B  0878               	movf	___wmul@product+1,w
  2761     049C  00F4               	movwf	?___wmul+1
  2762     049D  0877               	movf	___wmul@product,w
  2763     049E  00F3               	movwf	?___wmul
  2764     049F                     l355:
  2765     049F  0008               	return
  2766     04A0                     __end_of___wmul:
  2767                           
  2768                           	psect	text13
  2769     02FC                     __ptext13:	
  2770 ;; *************** function ___lwdiv *****************
  2771 ;; Defined at:
  2772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  divisor         2    0[BANK0 ] unsigned int 
  2775 ;;  dividend        2    2[BANK0 ] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  quotient        2    5[BANK0 ] unsigned int 
  2778 ;;  counter         1    4[BANK0 ] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2    0[BANK0 ] unsigned int 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, btemp+1
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       4       0       0       0
  2789 ;;      Locals:         0       3       0       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       7       0       0       0
  2792 ;;Total ram usage:        7 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_separar_digitos16
  2799 ;;		_map
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803     02FC                     ___lwdiv:	
  2804                           ;psect for function ___lwdiv
  2805                           
  2806     02FC                     l1747:	
  2807                           ;incstack = 0
  2808                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2809                           
  2810     02FC  1283               	bcf	3,5	;RP0=0, select bank0
  2811     02FD  1303               	bcf	3,6	;RP1=0, select bank0
  2812     02FE  01A5               	clrf	___lwdiv@quotient
  2813     02FF  01A6               	clrf	___lwdiv@quotient+1
  2814     0300                     l1749:
  2815     0300  0820               	movf	___lwdiv@divisor,w
  2816     0301  0421               	iorwf	___lwdiv@divisor+1,w
  2817     0302  1903               	btfsc	3,2
  2818     0303  2B05               	goto	u1401
  2819     0304  2B06               	goto	u1400
  2820     0305                     u1401:
  2821     0305  2B3D               	goto	l1769
  2822     0306                     u1400:
  2823     0306                     l1751:
  2824     0306  01A4               	clrf	___lwdiv@counter
  2825     0307  0AA4               	incf	___lwdiv@counter,f
  2826     0308  2B14               	goto	l1757
  2827     0309                     l1753:
  2828     0309  3001               	movlw	1
  2829     030A                     u1415:
  2830     030A  1003               	clrc
  2831     030B  0DA0               	rlf	___lwdiv@divisor,f
  2832     030C  0DA1               	rlf	___lwdiv@divisor+1,f
  2833     030D  3EFF               	addlw	-1
  2834     030E  1D03               	skipz
  2835     030F  2B0A               	goto	u1415
  2836     0310                     l1755:
  2837     0310  3001               	movlw	1
  2838     0311  00FF               	movwf	btemp+1
  2839     0312  087F               	movf	btemp+1,w
  2840     0313  07A4               	addwf	___lwdiv@counter,f
  2841     0314                     l1757:
  2842     0314  1FA1               	btfss	___lwdiv@divisor+1,7
  2843     0315  2B17               	goto	u1421
  2844     0316  2B18               	goto	u1420
  2845     0317                     u1421:
  2846     0317  2B09               	goto	l1753
  2847     0318                     u1420:
  2848     0318                     l1759:
  2849     0318  3001               	movlw	1
  2850     0319                     u1435:
  2851     0319  1003               	clrc
  2852     031A  0DA5               	rlf	___lwdiv@quotient,f
  2853     031B  0DA6               	rlf	___lwdiv@quotient+1,f
  2854     031C  3EFF               	addlw	-1
  2855     031D  1D03               	skipz
  2856     031E  2B19               	goto	u1435
  2857     031F  0821               	movf	___lwdiv@divisor+1,w
  2858     0320  0223               	subwf	___lwdiv@dividend+1,w
  2859     0321  1D03               	skipz
  2860     0322  2B25               	goto	u1445
  2861     0323  0820               	movf	___lwdiv@divisor,w
  2862     0324  0222               	subwf	___lwdiv@dividend,w
  2863     0325                     u1445:
  2864     0325  1C03               	skipc
  2865     0326  2B28               	goto	u1441
  2866     0327  2B29               	goto	u1440
  2867     0328                     u1441:
  2868     0328  2B30               	goto	l1765
  2869     0329                     u1440:
  2870     0329                     l1761:
  2871     0329  0820               	movf	___lwdiv@divisor,w
  2872     032A  02A2               	subwf	___lwdiv@dividend,f
  2873     032B  0821               	movf	___lwdiv@divisor+1,w
  2874     032C  1C03               	skipc
  2875     032D  03A3               	decf	___lwdiv@dividend+1,f
  2876     032E  02A3               	subwf	___lwdiv@dividend+1,f
  2877     032F                     l1763:
  2878     032F  1425               	bsf	___lwdiv@quotient,0
  2879     0330                     l1765:
  2880     0330  3001               	movlw	1
  2881     0331                     u1455:
  2882     0331  1003               	clrc
  2883     0332  0CA1               	rrf	___lwdiv@divisor+1,f
  2884     0333  0CA0               	rrf	___lwdiv@divisor,f
  2885     0334  3EFF               	addlw	-1
  2886     0335  1D03               	skipz
  2887     0336  2B31               	goto	u1455
  2888     0337                     l1767:
  2889     0337  3001               	movlw	1
  2890     0338  02A4               	subwf	___lwdiv@counter,f
  2891     0339  1D03               	btfss	3,2
  2892     033A  2B3C               	goto	u1461
  2893     033B  2B3D               	goto	u1460
  2894     033C                     u1461:
  2895     033C  2B18               	goto	l1759
  2896     033D                     u1460:
  2897     033D                     l1769:
  2898     033D  0826               	movf	___lwdiv@quotient+1,w
  2899     033E  00A1               	movwf	?___lwdiv+1
  2900     033F  0825               	movf	___lwdiv@quotient,w
  2901     0340  00A0               	movwf	?___lwdiv
  2902     0341                     l625:
  2903     0341  0008               	return
  2904     0342                     __end_of___lwdiv:
  2905                           
  2906                           	psect	text14
  2907     0386                     __ptext14:	
  2908 ;; *************** function _Lcd_Write_String *****************
  2909 ;; Defined at:
  2910 ;;		line 104 in file "LCD.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  a               2    6[COMMON] PTR unsigned char 
  2913 ;;		 -> STR_2(7), pot(3), STR_1(6), 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  i               2    8[COMMON] int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2925 ;;      Params:         2       0       0       0       0
  2926 ;;      Locals:         2       0       0       0       0
  2927 ;;      Temps:          0       3       0       0       0
  2928 ;;      Totals:         4       3       0       0       0
  2929 ;;Total ram usage:        7 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 4
  2932 ;; This function calls:
  2933 ;;		_Lcd_Write_Char
  2934 ;; This function is called by:
  2935 ;;		_output_LCD
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939     0386                     _Lcd_Write_String:	
  2940                           ;psect for function _Lcd_Write_String
  2941                           
  2942     0386                     l1799:	
  2943                           ;incstack = 0
  2944                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2945                           
  2946                           
  2947                           ;LCD.c: 105:     int i;;LCD.c: 106:     for (i = 0; a[i] != '\0'; i++){
  2948     0386  01F8               	clrf	Lcd_Write_String@i
  2949     0387  01F9               	clrf	Lcd_Write_String@i+1
  2950     0388  2BAB               	goto	l1805
  2951     0389                     l1801:
  2952                           
  2953                           ;LCD.c: 107:         Lcd_Write_Char(a[i]);
  2954     0389  0878               	movf	Lcd_Write_String@i,w
  2955     038A  0776               	addwf	Lcd_Write_String@a,w
  2956     038B  00A1               	movwf	??_Lcd_Write_String+1
  2957     038C  0877               	movf	Lcd_Write_String@a+1,w
  2958     038D  00A0               	movwf	??_Lcd_Write_String
  2959     038E  1803               	skipnc
  2960     038F  0AA0               	incf	??_Lcd_Write_String,f
  2961     0390  1FF8               	btfss	Lcd_Write_String@i,7
  2962     0391  2B93               	goto	u1490
  2963     0392  03A0               	decf	??_Lcd_Write_String,f
  2964     0393                     u1490:
  2965     0393  1283               	bcf	3,5	;RP0=0, select bank0
  2966     0394  1303               	bcf	3,6	;RP1=0, select bank0
  2967     0395  0820               	movf	??_Lcd_Write_String,w
  2968     0396  00A2               	movwf	??_Lcd_Write_String+2
  2969     0397  0822               	movf	??_Lcd_Write_String+2,w
  2970     0398  00FF               	movwf	btemp+1
  2971     0399  0821               	movf	??_Lcd_Write_String+1,w
  2972     039A  0084               	movwf	4
  2973     039B  120A  118A  24E3  120A  118A  	fcall	stringtab
  2974     03A0  120A  118A  2536  120A  118A  	fcall	_Lcd_Write_Char
  2975     03A5                     l1803:
  2976                           
  2977                           ;LCD.c: 109:     }
  2978     03A5  3001               	movlw	1
  2979     03A6  07F8               	addwf	Lcd_Write_String@i,f
  2980     03A7  1803               	skipnc
  2981     03A8  0AF9               	incf	Lcd_Write_String@i+1,f
  2982     03A9  3000               	movlw	0
  2983     03AA  07F9               	addwf	Lcd_Write_String@i+1,f
  2984     03AB                     l1805:
  2985     03AB  0878               	movf	Lcd_Write_String@i,w
  2986     03AC  0776               	addwf	Lcd_Write_String@a,w
  2987     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2988     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2989     03AF  00A1               	movwf	??_Lcd_Write_String+1
  2990     03B0  0877               	movf	Lcd_Write_String@a+1,w
  2991     03B1  00A0               	movwf	??_Lcd_Write_String
  2992     03B2  1803               	skipnc
  2993     03B3  0AA0               	incf	??_Lcd_Write_String,f
  2994     03B4  1FF8               	btfss	Lcd_Write_String@i,7
  2995     03B5  2BB7               	goto	u1500
  2996     03B6  03A0               	decf	??_Lcd_Write_String,f
  2997     03B7                     u1500:
  2998     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2999     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3000     03B9  0820               	movf	??_Lcd_Write_String,w
  3001     03BA  00A2               	movwf	??_Lcd_Write_String+2
  3002     03BB  0822               	movf	??_Lcd_Write_String+2,w
  3003     03BC  00FF               	movwf	btemp+1
  3004     03BD  0821               	movf	??_Lcd_Write_String+1,w
  3005     03BE  0084               	movwf	4
  3006     03BF  120A  118A  24E3  120A  118A  	fcall	stringtab
  3007     03C4  3A00               	xorlw	0
  3008     03C5  1D03               	skipz
  3009     03C6  2BC8               	goto	u1511
  3010     03C7  2BC9               	goto	u1510
  3011     03C8                     u1511:
  3012     03C8  2B89               	goto	l1801
  3013     03C9                     u1510:
  3014     03C9                     l115:
  3015     03C9  0008               	return
  3016     03CA                     __end_of_Lcd_Write_String:
  3017                           
  3018                           	psect	text15
  3019     0536                     __ptext15:	
  3020 ;; *************** function _Lcd_Write_Char *****************
  3021 ;; Defined at:
  3022 ;;		line 96 in file "LCD.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  a               1    wreg     unsigned char 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  a               1    5[COMMON] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         1       0       0       0       0
  3038 ;;      Temps:          1       0       0       0       0
  3039 ;;      Totals:         2       0       0       0       0
  3040 ;;Total ram usage:        2 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 3
  3043 ;; This function calls:
  3044 ;;		_Lcd_Port
  3045 ;; This function is called by:
  3046 ;;		_Lcd_Write_String
  3047 ;;		_output_LCD
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051     0536                     _Lcd_Write_Char:	
  3052                           ;psect for function _Lcd_Write_Char
  3053                           
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3057                           ;Lcd_Write_Char@a stored from wreg
  3058     0536  00F5               	movwf	Lcd_Write_Char@a
  3059     0537                     l1679:
  3060                           
  3061                           ;LCD.c: 97:     RE0 = 1;
  3062     0537  1283               	bcf	3,5	;RP0=0, select bank0
  3063     0538  1303               	bcf	3,6	;RP1=0, select bank0
  3064     0539  1409               	bsf	9,0	;volatile
  3065     053A                     l1681:
  3066                           
  3067                           ;LCD.c: 98:     Lcd_Port(a);
  3068     053A  0875               	movf	Lcd_Write_Char@a,w
  3069     053B  120A  118A  23CA  120A  118A  	fcall	_Lcd_Port
  3070     0540                     l1683:
  3071                           
  3072                           ;LCD.c: 99:     RE1 = 1;
  3073     0540  1283               	bcf	3,5	;RP0=0, select bank0
  3074     0541  1303               	bcf	3,6	;RP1=0, select bank0
  3075     0542  1489               	bsf	9,1	;volatile
  3076     0543                     l1685:
  3077                           
  3078                           ;LCD.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3079     0543  301A               	movlw	26
  3080     0544  00F4               	movwf	??_Lcd_Write_Char
  3081     0545                     u1567:
  3082     0545  0BF4               	decfsz	??_Lcd_Write_Char,f
  3083     0546  2D45               	goto	u1567
  3084     0547  0000               	nop
  3085     0548                     l1687:
  3086                           
  3087                           ;LCD.c: 101:     RE1 = 0;
  3088     0548  1283               	bcf	3,5	;RP0=0, select bank0
  3089     0549  1303               	bcf	3,6	;RP1=0, select bank0
  3090     054A  1089               	bcf	9,1	;volatile
  3091     054B                     l109:
  3092     054B  0008               	return
  3093     054C                     __end_of_Lcd_Write_Char:
  3094                           
  3095                           	psect	text16
  3096     04C3                     __ptext16:	
  3097 ;; *************** function _Lcd_Set_Cursor *****************
  3098 ;; Defined at:
  3099 ;;		line 68 in file "LCD.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  a               1    wreg     unsigned char 
  3102 ;;  b               1    7[COMMON] unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  a               1    8[COMMON] unsigned char 
  3105 ;;  temp            1    9[COMMON] unsigned char 
  3106 ;;  y               1    0        unsigned char 
  3107 ;;  z               1    0        unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         1       0       0       0       0
  3118 ;;      Locals:         2       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0
  3120 ;;      Totals:         3       0       0       0       0
  3121 ;;Total ram usage:        3 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 4
  3124 ;; This function calls:
  3125 ;;		_Lcd_Cmd
  3126 ;; This function is called by:
  3127 ;;		_output_LCD
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131     04C3                     _Lcd_Set_Cursor:	
  3132                           ;psect for function _Lcd_Set_Cursor
  3133                           
  3134                           
  3135                           ;incstack = 0
  3136                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3137                           ;Lcd_Set_Cursor@a stored from wreg
  3138     04C3  00F8               	movwf	Lcd_Set_Cursor@a
  3139     04C4                     l1775:
  3140                           
  3141                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  3142     04C4  0378               	decf	Lcd_Set_Cursor@a,w
  3143     04C5  1D03               	btfss	3,2
  3144     04C6  2CC8               	goto	u1471
  3145     04C7  2CC9               	goto	u1470
  3146     04C8                     u1471:
  3147     04C8  2CD3               	goto	l1781
  3148     04C9                     u1470:
  3149     04C9                     l1777:
  3150                           
  3151                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  3152     04C9  0877               	movf	Lcd_Set_Cursor@b,w
  3153     04CA  3E7F               	addlw	127
  3154     04CB  00F9               	movwf	Lcd_Set_Cursor@temp
  3155     04CC                     l1779:
  3156                           
  3157                           ;LCD.c: 72:         Lcd_Cmd(temp);
  3158     04CC  0879               	movf	Lcd_Set_Cursor@temp,w
  3159     04CD  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  3160                           
  3161                           ;LCD.c: 73:     } else if (a == 2) {
  3162     04D2  2CE2               	goto	l103
  3163     04D3                     l1781:
  3164     04D3  3002               	movlw	2
  3165     04D4  0678               	xorwf	Lcd_Set_Cursor@a,w
  3166     04D5  1D03               	btfss	3,2
  3167     04D6  2CD8               	goto	u1481
  3168     04D7  2CD9               	goto	u1480
  3169     04D8                     u1481:
  3170     04D8  2CE2               	goto	l103
  3171     04D9                     u1480:
  3172     04D9                     l1783:
  3173                           
  3174                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  3175     04D9  0877               	movf	Lcd_Set_Cursor@b,w
  3176     04DA  3EBF               	addlw	191
  3177     04DB  00F9               	movwf	Lcd_Set_Cursor@temp
  3178     04DC                     l1785:
  3179                           
  3180                           ;LCD.c: 75:         Lcd_Cmd(temp);
  3181     04DC  0879               	movf	Lcd_Set_Cursor@temp,w
  3182     04DD  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  3183     04E2                     l103:
  3184     04E2  0008               	return
  3185     04E3                     __end_of_Lcd_Set_Cursor:
  3186                           
  3187                           	psect	text17
  3188     057E                     __ptext17:	
  3189 ;; *************** function _Lcd_Clear *****************
  3190 ;; Defined at:
  3191 ;;		line 64 in file "LCD.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, pclath, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 4
  3212 ;; This function calls:
  3213 ;;		_Lcd_Cmd
  3214 ;; This function is called by:
  3215 ;;		_output_LCD
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219     057E                     _Lcd_Clear:	
  3220                           ;psect for function _Lcd_Clear
  3221                           
  3222     057E                     l1773:	
  3223                           ;incstack = 0
  3224                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3225                           
  3226                           
  3227                           ;LCD.c: 65:     Lcd_Cmd(0x01);
  3228     057E  3001               	movlw	1
  3229     057F  120A  118A  251C  120A  118A  	fcall	_Lcd_Cmd
  3230     0584                     l97:
  3231     0584  0008               	return
  3232     0585                     __end_of_Lcd_Clear:
  3233                           
  3234                           	psect	text18
  3235     051C                     __ptext18:	
  3236 ;; *************** function _Lcd_Cmd *****************
  3237 ;; Defined at:
  3238 ;;		line 56 in file "LCD.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  a               1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  a               1    6[COMMON] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0
  3254 ;;      Temps:          2       0       0       0       0
  3255 ;;      Totals:         3       0       0       0       0
  3256 ;;Total ram usage:        3 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 3
  3259 ;; This function calls:
  3260 ;;		_Lcd_Port
  3261 ;; This function is called by:
  3262 ;;		_Lcd_Clear
  3263 ;;		_Lcd_Set_Cursor
  3264 ;;		_Lcd_Init
  3265 ;;		_Lcd_Shift_Right
  3266 ;;		_Lcd_Shift_Left
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           
  3270     051C                     _Lcd_Cmd:	
  3271                           ;psect for function _Lcd_Cmd
  3272                           
  3273                           
  3274                           ;incstack = 0
  3275                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3276                           ;Lcd_Cmd@a stored from wreg
  3277     051C  00F6               	movwf	Lcd_Cmd@a
  3278     051D                     l1669:
  3279                           
  3280                           ;LCD.c: 57:     RE0 = 0;
  3281     051D  1283               	bcf	3,5	;RP0=0, select bank0
  3282     051E  1303               	bcf	3,6	;RP1=0, select bank0
  3283     051F  1009               	bcf	9,0	;volatile
  3284     0520                     l1671:
  3285                           
  3286                           ;LCD.c: 58:     Lcd_Port(a);
  3287     0520  0876               	movf	Lcd_Cmd@a,w
  3288     0521  120A  118A  23CA  120A  118A  	fcall	_Lcd_Port
  3289     0526                     l1673:
  3290                           
  3291                           ;LCD.c: 59:     RE1 = 1;
  3292     0526  1283               	bcf	3,5	;RP0=0, select bank0
  3293     0527  1303               	bcf	3,6	;RP1=0, select bank0
  3294     0528  1489               	bsf	9,1	;volatile
  3295     0529                     l1675:
  3296                           
  3297                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3298     0529  300B               	movlw	11
  3299     052A  00F5               	movwf	??_Lcd_Cmd+1
  3300     052B  3062               	movlw	98
  3301     052C  00F4               	movwf	??_Lcd_Cmd
  3302     052D                     u1577:
  3303     052D  0BF4               	decfsz	??_Lcd_Cmd,f
  3304     052E  2D2D               	goto	u1577
  3305     052F  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3306     0530  2D2D               	goto	u1577
  3307     0531  0000               	nop
  3308     0532                     l1677:
  3309                           
  3310                           ;LCD.c: 61:     RE1 = 0;
  3311     0532  1283               	bcf	3,5	;RP0=0, select bank0
  3312     0533  1303               	bcf	3,6	;RP1=0, select bank0
  3313     0534  1089               	bcf	9,1	;volatile
  3314     0535                     l94:
  3315     0535  0008               	return
  3316     0536                     __end_of_Lcd_Cmd:
  3317                           
  3318                           	psect	text19
  3319     03CA                     __ptext19:	
  3320 ;; *************** function _Lcd_Port *****************
  3321 ;; Defined at:
  3322 ;;		line 13 in file "LCD.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;  a               1    wreg     unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  a               1    3[COMMON] unsigned char 
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  1    wreg      void 
  3329 ;; Registers used:
  3330 ;;		wreg
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         0       0       0       0       0
  3337 ;;      Locals:         1       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0
  3339 ;;      Totals:         1       0       0       0       0
  3340 ;;Total ram usage:        1 bytes
  3341 ;; Hardware stack levels used: 1
  3342 ;; Hardware stack levels required when called: 2
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_Lcd_Cmd
  3347 ;;		_Lcd_Init
  3348 ;;		_Lcd_Write_Char
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352     03CA                     _Lcd_Port:	
  3353                           ;psect for function _Lcd_Port
  3354                           
  3355                           
  3356                           ;incstack = 0
  3357                           ; Regs used in _Lcd_Port: [wreg]
  3358                           ;Lcd_Port@a stored from wreg
  3359     03CA  00F3               	movwf	Lcd_Port@a
  3360     03CB                     l1651:
  3361                           
  3362                           ;LCD.c: 14:     if (a & 1)
  3363     03CB  1C73               	btfss	Lcd_Port@a,0
  3364     03CC  2BCE               	goto	u1181
  3365     03CD  2BCF               	goto	u1180
  3366     03CE                     u1181:
  3367     03CE  2BD3               	goto	l75
  3368     03CF                     u1180:
  3369     03CF                     l1653:
  3370                           
  3371                           ;LCD.c: 15:         RD0 = 1;
  3372     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3373     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3374     03D1  1408               	bsf	8,0	;volatile
  3375     03D2  2BD6               	goto	l76
  3376     03D3                     l75:	
  3377                           ;LCD.c: 16:     else
  3378                           
  3379                           
  3380                           ;LCD.c: 17:         RD0 = 0;
  3381     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3382     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3383     03D5  1008               	bcf	8,0	;volatile
  3384     03D6                     l76:
  3385                           
  3386                           ;LCD.c: 19:     if (a & 2)
  3387     03D6  1CF3               	btfss	Lcd_Port@a,1
  3388     03D7  2BD9               	goto	u1191
  3389     03D8  2BDA               	goto	u1190
  3390     03D9                     u1191:
  3391     03D9  2BDC               	goto	l77
  3392     03DA                     u1190:
  3393     03DA                     l1655:
  3394                           
  3395                           ;LCD.c: 20:         RD1 = 1;
  3396     03DA  1488               	bsf	8,1	;volatile
  3397     03DB  2BDD               	goto	l78
  3398     03DC                     l77:	
  3399                           ;LCD.c: 21:     else
  3400                           
  3401                           
  3402                           ;LCD.c: 22:         RD1 = 0;
  3403     03DC  1088               	bcf	8,1	;volatile
  3404     03DD                     l78:
  3405                           
  3406                           ;LCD.c: 24:     if (a & 4)
  3407     03DD  1D73               	btfss	Lcd_Port@a,2
  3408     03DE  2BE0               	goto	u1201
  3409     03DF  2BE1               	goto	u1200
  3410     03E0                     u1201:
  3411     03E0  2BE3               	goto	l79
  3412     03E1                     u1200:
  3413     03E1                     l1657:
  3414                           
  3415                           ;LCD.c: 25:         RD2 = 1;
  3416     03E1  1508               	bsf	8,2	;volatile
  3417     03E2  2BE4               	goto	l80
  3418     03E3                     l79:	
  3419                           ;LCD.c: 26:     else
  3420                           
  3421                           
  3422                           ;LCD.c: 27:         RD2 = 0;
  3423     03E3  1108               	bcf	8,2	;volatile
  3424     03E4                     l80:
  3425                           
  3426                           ;LCD.c: 29:     if (a & 8)
  3427     03E4  1DF3               	btfss	Lcd_Port@a,3
  3428     03E5  2BE7               	goto	u1211
  3429     03E6  2BE8               	goto	u1210
  3430     03E7                     u1211:
  3431     03E7  2BEA               	goto	l81
  3432     03E8                     u1210:
  3433     03E8                     l1659:
  3434                           
  3435                           ;LCD.c: 30:         RD3 = 1;
  3436     03E8  1588               	bsf	8,3	;volatile
  3437     03E9  2BEB               	goto	l82
  3438     03EA                     l81:	
  3439                           ;LCD.c: 31:     else
  3440                           
  3441                           
  3442                           ;LCD.c: 32:         RD3 = 0;
  3443     03EA  1188               	bcf	8,3	;volatile
  3444     03EB                     l82:
  3445                           
  3446                           ;LCD.c: 34:     if (a & 16)
  3447     03EB  1E73               	btfss	Lcd_Port@a,4
  3448     03EC  2BEE               	goto	u1221
  3449     03ED  2BEF               	goto	u1220
  3450     03EE                     u1221:
  3451     03EE  2BF1               	goto	l83
  3452     03EF                     u1220:
  3453     03EF                     l1661:
  3454                           
  3455                           ;LCD.c: 35:         RD4 = 1;
  3456     03EF  1608               	bsf	8,4	;volatile
  3457     03F0  2BF2               	goto	l84
  3458     03F1                     l83:	
  3459                           ;LCD.c: 36:     else
  3460                           
  3461                           
  3462                           ;LCD.c: 37:         RD4 = 0;
  3463     03F1  1208               	bcf	8,4	;volatile
  3464     03F2                     l84:
  3465                           
  3466                           ;LCD.c: 39:     if (a & 32)
  3467     03F2  1EF3               	btfss	Lcd_Port@a,5
  3468     03F3  2BF5               	goto	u1231
  3469     03F4  2BF6               	goto	u1230
  3470     03F5                     u1231:
  3471     03F5  2BF8               	goto	l85
  3472     03F6                     u1230:
  3473     03F6                     l1663:
  3474                           
  3475                           ;LCD.c: 40:         RD5 = 1;
  3476     03F6  1688               	bsf	8,5	;volatile
  3477     03F7  2BF9               	goto	l86
  3478     03F8                     l85:	
  3479                           ;LCD.c: 41:     else
  3480                           
  3481                           
  3482                           ;LCD.c: 42:         RD5 = 0;
  3483     03F8  1288               	bcf	8,5	;volatile
  3484     03F9                     l86:
  3485                           
  3486                           ;LCD.c: 44:     if (a & 64)
  3487     03F9  1F73               	btfss	Lcd_Port@a,6
  3488     03FA  2BFC               	goto	u1241
  3489     03FB  2BFD               	goto	u1240
  3490     03FC                     u1241:
  3491     03FC  2BFF               	goto	l87
  3492     03FD                     u1240:
  3493     03FD                     l1665:
  3494                           
  3495                           ;LCD.c: 45:         RD6 = 1;
  3496     03FD  1708               	bsf	8,6	;volatile
  3497     03FE  2C00               	goto	l88
  3498     03FF                     l87:	
  3499                           ;LCD.c: 46:     else
  3500                           
  3501                           
  3502                           ;LCD.c: 47:         RD6 = 0;
  3503     03FF  1308               	bcf	8,6	;volatile
  3504     0400                     l88:
  3505                           
  3506                           ;LCD.c: 49:     if (a & 128)
  3507     0400  1FF3               	btfss	Lcd_Port@a,7
  3508     0401  2C03               	goto	u1251
  3509     0402  2C04               	goto	u1250
  3510     0403                     u1251:
  3511     0403  2C06               	goto	l89
  3512     0404                     u1250:
  3513     0404                     l1667:
  3514                           
  3515                           ;LCD.c: 50:         RD7 = 1;
  3516     0404  1788               	bsf	8,7	;volatile
  3517     0405  2C07               	goto	l91
  3518     0406                     l89:	
  3519                           ;LCD.c: 51:     else
  3520                           
  3521                           
  3522                           ;LCD.c: 52:         RD7 = 0;
  3523     0406  1388               	bcf	8,7	;volatile
  3524     0407                     l91:
  3525     0407  0008               	return
  3526     0408                     __end_of_Lcd_Port:
  3527                           
  3528                           	psect	text20
  3529     0570                     __ptext20:	
  3530 ;; *************** function _adc_read *****************
  3531 ;; Defined at:
  3532 ;;		line 42 in file "ADC_lib.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    3[COMMON] unsigned int 
  3539 ;; Registers used:
  3540 ;;		wreg
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         2       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 2
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0570                     _adc_read:	
  3561                           ;psect for function _adc_read
  3562                           
  3563     0570                     l1547:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _adc_read: [wreg]
  3566                           
  3567                           
  3568                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  3569     0570  1283               	bcf	3,5	;RP0=0, select bank0
  3570     0571  1303               	bcf	3,6	;RP1=0, select bank0
  3571     0572  149F               	bsf	31,1	;volatile
  3572     0573                     l41:	
  3573                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  3574                           
  3575     0573  189F               	btfsc	31,1	;volatile
  3576     0574  2D76               	goto	u1171
  3577     0575  2D77               	goto	u1170
  3578     0576                     u1171:
  3579     0576  2D73               	goto	l41
  3580     0577                     u1170:
  3581     0577                     l1549:
  3582                           
  3583                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  3584     0577  081E               	movf	30,w	;volatile
  3585     0578  00F4               	movwf	?_adc_read+1
  3586     0579  1683               	bsf	3,5	;RP0=1, select bank1
  3587     057A  1303               	bcf	3,6	;RP1=0, select bank1
  3588     057B  081E               	movf	30,w	;volatile
  3589     057C  00F3               	movwf	?_adc_read
  3590     057D                     l44:
  3591     057D  0008               	return
  3592     057E                     __end_of_adc_read:
  3593                           
  3594                           	psect	text21
  3595     0500                     __ptext21:	
  3596 ;; *************** function _isr *****************
  3597 ;; Defined at:
  3598 ;;		line 56 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3612 ;;      Params:         0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0
  3614 ;;      Temps:          3       0       0       0       0
  3615 ;;      Totals:         3       0       0       0       0
  3616 ;;Total ram usage:        3 bytes
  3617 ;; Hardware stack levels used: 1
  3618 ;; Hardware stack levels required when called: 1
  3619 ;; This function calls:
  3620 ;;		_ioc_portB
  3621 ;; This function is called by:
  3622 ;;		Interrupt level 1
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626     0500                     _isr:	
  3627                           ;psect for function _isr
  3628                           
  3629     0500                     i1l1215:
  3630                           
  3631                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 57:     ANSELH= 0b00100000;
  3632     0500  1D0B               	btfss	11,2	;volatile
  3633     0501  2D03               	goto	u59_21
  3634     0502  2D04               	goto	u59_20
  3635     0503                     u59_21:
  3636     0503  2D09               	goto	i1l1221
  3637     0504                     u59_20:
  3638     0504                     i1l1217:
  3639                           
  3640                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 59:     PORTA = 0;
  3641     0504  3032               	movlw	50
  3642     0505  1283               	bcf	3,5	;RP0=0, select bank0
  3643     0506  1303               	bcf	3,6	;RP1=0, select bank0
  3644     0507  0081               	movwf	1	;volatile
  3645     0508                     i1l1219:
  3646                           
  3647                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 60:     TRISB = 0;
  3648     0508  110B               	bcf	11,2	;volatile
  3649     0509                     i1l1221:
  3650                           
  3651                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 62:     TRISD = 0;
  3652     0509  1C0B               	btfss	11,0	;volatile
  3653     050A  2D0C               	goto	u60_21
  3654     050B  2D0D               	goto	u60_20
  3655     050C                     u60_21:
  3656     050C  2D13               	goto	i1l208
  3657     050D                     u60_20:
  3658     050D                     i1l1223:
  3659                           
  3660                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 63:     PORTD = 0;
  3661     050D  120A  118A  255F  120A  118A  	fcall	_ioc_portB
  3662     0512                     i1l1225:
  3663                           
  3664                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 64:     TRISE = 0;
  3665     0512  100B               	bcf	11,0	;volatile
  3666     0513                     i1l208:
  3667     0513  0872               	movf	??_isr+2,w
  3668     0514  00FF               	movwf	btemp+1
  3669     0515  0871               	movf	??_isr+1,w
  3670     0516  008A               	movwf	10
  3671     0517  0E70               	swapf	??_isr,w
  3672     0518  0083               	movwf	3
  3673     0519  0EFE               	swapf	btemp,f
  3674     051A  0E7E               	swapf	btemp,w
  3675     051B  0009               	retfie
  3676     051C                     __end_of_isr:
  3677                           
  3678                           	psect	intentry
  3679     0004                     __pintentry:	
  3680                           ;incstack = 0
  3681                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3682                           
  3683     0004                     interrupt_function:
  3684     007E                     saved_w	set	btemp
  3685     0004  00FE               	movwf	btemp
  3686     0005  0E03               	swapf	3,w
  3687     0006  00F0               	movwf	??_isr
  3688     0007  080A               	movf	10,w
  3689     0008  00F1               	movwf	??_isr+1
  3690     0009  087F               	movf	btemp+1,w
  3691     000A  00F2               	movwf	??_isr+2
  3692     000B  120A  118A  2D00   	ljmp	_isr
  3693                           
  3694                           	psect	text22
  3695     055F                     __ptext22:	
  3696 ;; *************** function _ioc_portB *****************
  3697 ;; Defined at:
  3698 ;;		line 69 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, btemp+1
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3712 ;;      Params:         0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_isr
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725     055F                     _ioc_portB:	
  3726                           ;psect for function _ioc_portB
  3727                           
  3728     055F                     i1l1133:	
  3729                           ;incstack = 0
  3730                           ; Regs used in _ioc_portB: [wreg+status,2+status,0+btemp+1]
  3731                           
  3732                           
  3733                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 70:     OSCCONbits.IRCF = 0b111;
  3734     055F  1283               	bcf	3,5	;RP0=0, select bank0
  3735     0560  1303               	bcf	3,6	;RP1=0, select bank0
  3736     0561  1806               	btfsc	6,0	;volatile
  3737     0562  2D64               	goto	u57_21
  3738     0563  2D65               	goto	u57_20
  3739     0564                     u57_21:
  3740     0564  2D69               	goto	i1l1137
  3741     0565                     u57_20:
  3742     0565                     i1l1135:
  3743     0565  3001               	movlw	1
  3744     0566  00FF               	movwf	btemp+1
  3745     0567  087F               	movf	btemp+1,w
  3746     0568  0785               	addwf	5,f	;volatile
  3747     0569                     i1l1137:
  3748                           
  3749                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 71:     SCS = 1;
  3750     0569  1886               	btfsc	6,1	;volatile
  3751     056A  2D6C               	goto	u58_21
  3752     056B  2D6D               	goto	u58_20
  3753     056C                     u58_21:
  3754     056C  2D6F               	goto	i1l213
  3755     056D                     u58_20:
  3756     056D                     i1l1139:
  3757     056D  3001               	movlw	1
  3758     056E  0285               	subwf	5,f	;volatile
  3759     056F                     i1l213:
  3760     056F  0008               	return
  3761     0570                     __end_of_ioc_portB:
  3762     007E                     btemp	set	126	;btemp
  3763     007E                     wtemp0	set	126
  3764                           
  3765                           	psect	config
  3766                           
  3767                           ;Config register CONFIG1 @ 0x2007
  3768                           ;	Oscillator Selection bits
  3769                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3770                           ;	Watchdog Timer Enable bit
  3771                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3772                           ;	Power-up Timer Enable bit
  3773                           ;	PWRTE = OFF, PWRT disabled
  3774                           ;	RE3/MCLR pin function select bit
  3775                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3776                           ;	Code Protection bit
  3777                           ;	CP = OFF, Program memory code protection is disabled
  3778                           ;	Data Code Protection bit
  3779                           ;	CPD = OFF, Data memory code protection is disabled
  3780                           ;	Brown Out Reset Selection bits
  3781                           ;	BOREN = OFF, BOR disabled
  3782                           ;	Internal External Switchover bit
  3783                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3784                           ;	Fail-Safe Clock Monitor Enabled bit
  3785                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3786                           ;	Low Voltage Programming Enable bit
  3787                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3788                           ;	In-Circuit Debugger Mode bit
  3789                           ;	DEBUG = 0x1, unprogrammed default
  3790     2007                     	org	8199
  3791     2007  20D4               	dw	8404
  3792                           
  3793                           ;Config register CONFIG2 @ 0x2008
  3794                           ;	Brown-out Reset Selection bit
  3795                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3796                           ;	Flash Program Memory Self Write Enable bits
  3797                           ;	WRT = OFF, Write protection off
  3798     2008                     	org	8200
  3799     2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     22      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    separar_digitos16@dig16	PTR unsigned char  size(1) Largest target is 3
		 -> volt(BANK0[3]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 3
		 -> pot(BANK0[3]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[7]), pot(BANK0[3]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _setup->_adc_init
    _Lcd_Init->_Lcd_Cmd
    _output_LCD->_Lcd_Set_Cursor
    _output_LCD->_Lcd_Write_String
    _separar_digitos8->___awmod
    _map->___wmul
    ___lwdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _output_LCD->_separar_digitos16
    _separar_digitos8->___awdiv
    _separar_digitos16->___lwdiv
    _map->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8531
                                             20 BANK0      2     2      0
                           _adc_read
                         _output_LCD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     910
                           _Lcd_Init
                           _adc_init
                          _iocb_init
 ---------------------------------------------------------------------------------
 (2) _iocb_init                                            1     1      0      45
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     338
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     527
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _output_LCD                                           0     0      0    7621
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _map
                  _separar_digitos16
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                    10     9      1    2003
                                              4 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     805
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _separar_digitos16                                   15    12      3    1932
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) _map                                                 12     2     10    1798
                                              7 BANK0     12     2     10
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                              0 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     679
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              4 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     651
                                              7 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _ioc_portB
 ---------------------------------------------------------------------------------
 (6) _ioc_portB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _output_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _map
       ___lwdiv
         ___wmul (ARG)
       ___wmul
     _separar_digitos16
       ___lwdiv
       ___lwmod
     _separar_digitos8
       ___awdiv
       ___awmod
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _adc_init
     _iocb_init

 _isr (ROOT)
   _ioc_portB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      29       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      29      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Jul 27 17:47:05 2023

 separar_digitos8@centenas 0028                          pc 0002                         l15 055E  
                       l41 0573                         l44 057D                         l38 0257  
                       l80 03E4                         l81 03EA                         l82 03EB  
                       l91 0407                         l83 03F1                         l75 03D3  
                       l84 03F2                         l76 03D6                         l85 03F8  
                       l77 03DC                         l86 03F9                         l78 03DD  
                       l94 0535                         l87 03FF                         l79 03E3  
                       l88 0400                         l89 0406                         l97 0584  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0075  
                      l103 04E2                        l106 02FB                        l115 03C9  
                      l109 054B                        l230 0121                        l224 0385  
                      l233 0194                        l227 00A8                        l236 047A  
                      l353 0487                        l506 01FD                        l355 049F  
                      l519 02B0                        l625 0341                        l635 0441  
                      _GIE 005F                        _RB0 0030                        _RB1 0031  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RE0 0048                        _RD3 0043                        _RE1 0049  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        _SCS 0478                        u910 02A2  
                      u911 02A1                        u920 02A7                        u840 025D  
                      u921 02A6                        u905 0296                        u841 025C  
                      u850 0268                        u851 0267                        u860 0273  
                      u861 0272                        u880 0285                        u881 0284  
                      u890 028F                        u891 028E                        u875 0277  
                      u895 028B                        _map 0442                        _isr 0500  
                      _pot 003B                        fsr0 0004                        indf 0000  
             ___awmod@sign 0078                       l1041 054D   separar_digitos8@unidades 002A  
                     l1043 0553                       l1045 0558                       l1047 055D  
                     l1401 027D                       l1411 029C                       l1403 0281  
                     l1405 0285                       l1413 02A2                       l1415 02A7  
                     l1407 028F                       l1417 02AC                       l1409 0295  
                     l1451 0411                       l1461 0430                       l1453 0418  
                     l1463 0437                       l1455 041C                       l1447 0408  
                     l1711 01A3                       l1703 0195                       l1391 0264  
                     l1383 0258                       l1471 021E                       l1801 0389  
                     l1457 0420                       l1449 040E                       l1465 043D  
                     l1721 01B8                       l1713 01A7                       l1705 0198  
                     l1393 0268                       l1385 0259                       l1473 0223  
                     l1481 0236                       l1547 0570                       l1651 03CB  
                     l1803 03A5                       l1459 042A                       l1731 01DB  
                     l1723 01BB                       l1715 01AC                       l1707 019C  
                     l1395 026D                       l1387 025D                       l1811 0117  
                     l1475 022A                       l1483 024C                       l1549 0577  
                     l1661 03EF                       l1653 03CF                       l1805 03AB  
                     l1821 0122                       l1741 01F4                       l1733 01E1  
                     l1725 01C2                       l1717 01B0                       l1709 01A1  
                     l1397 0273                       l1389 0262                       l1813 011C  
                     l1485 0256                       l1477 0231                       l1469 01FF  
                     l1901 04AF                       l1663 03F6                       l1655 03DA  
                     l1671 0520                       l1751 0306                       l1815 0442  
                     l1823 0183                       l1743 01F9                       l1735 01E2  
                     l1727 01C6                       l1719 01B2                       l1399 0276  
                     l1807 00AC                       l1831 0345                       l1903 04B6  
                     l1665 03FD                       l1657 03E1                       l1673 0526  
                     l1681 053A                       l1761 0329                       l1753 0309  
                     l1817 0476                       l1825 018A                       l1737 01E9  
                     l1729 01CA                       l1809 0110                       l1841 0353  
                     l1833 0347                       l1905 04BA                       l1667 0404  
                     l1659 03E8                       l1675 0529                       l1683 0540  
                     l1763 032F                       l1755 0310                       l1747 02FC  
                     l1691 047D                       l1827 018F                       l1739 01EF  
                     l1851 0362                       l1843 0356                       l1835 034A  
                     l1677 0532                       l1669 051D                       l1773 057E  
                     l1781 04D3                       l1685 0543                       l1765 0330  
                     l1757 0314                       l1749 0300                       l1693 0481  
                     l1861 037B                       l1853 0365                       l1845 0359  
                     l1837 034D                       l1829 0342                       l1783 04D9  
                     l1775 04C4                       l1687 0548                       l1679 0537  
                     l1767 0337                       l1759 0318                       l1695 048E  
                     l1871 0036                       l1791 02BA                       l1927 023E  
                     l1863 037C                       l1855 0369                       l1847 035C  
                     l1839 0350                       l1785 04DC                       l1777 04C9  
                     l1769 033D                       l1697 0495                       l1689 047B  
                     l1881 007B                       l1873 0040                       l1793 02C3  
                     l1865 0380                       l1857 036A                       l1849 035F  
                     l1779 04CC                       l1699 049B                       l1891 00A2  
                     l1883 0084                       l1875 0049                       l1867 0020  
                     l1795 02D2                       l1787 02B1                       l1859 0370  
                     l1885 008C                       l1877 0068                       l1869 002D  
                     l1797 02D8                       l1789 02B4                       ?_map 0027  
                     l1799 0386                       l1887 0094                       l1879 0073  
                     l1889 009A                       l1897 04A0                       l1899 04A5  
                     _ADFM 04FF                       ?_isr 0070                       _ADON 00F8  
                     STR_1 04FA                       STR_2 04F3                       u1000 040E  
                     _T0IF 005A                       _CREN 00C4                       u1001 040D  
                     u1020 0420                       u1100 021A                       u1021 041F  
                     u1101 0216                       u1030 042A                       u1031 0429  
                     u1015 0412                       u1200 03E1                       u1201 03E0  
                     u1210 03E8                       u1050 043D                       u1114 021D  
                     u1211 03E7                       u1051 043C                       u1035 0426  
                     u1220 03EF                       u1300 019C                       u1060 0206  
                     u1221 03EE                       u1045 0431                       u1301 019B  
                     u1061 0202                       u1230 03F6                       u1310 01A7  
                     u1231 03F5                       u1311 01A6                       u1240 03FD  
                     u1400 0306                       u1320 01B8                       u1080 0210  
                     u1241 03FC                       u1401 0305                       u1321 01B7  
                     u1081 020C                       u1170 0577                       u1250 0404  
                     u1074 0209                       u1171 0576                       u1251 0403  
                     u1180 03CF                       u1500 03B7                       u1420 0318  
                     u1260 0481                       u1340 01CA                       _IOCB 0096  
                     u1181 03CE                       u1421 0317                       u1261 0480  
                     u1341 01C9                       u1190 03DA                       u1510 03C9  
                     u1094 0213                       u1191 03D9                       u1511 03C8  
                     u1415 030A                       u1335 01BC                       u1440 0329  
                     u1360 01DB                       u1441 0328                       u1361 01DA  
                     u1290 049B                       u1435 0319                       u1291 049A  
                     u1275 0488                       u1355 01CB                       u1460 033D  
                     u1380 01EF                       u1461 033C                       u1445 0325  
                     u1285 048F                       u1381 01EE                       u1365 01D7  
                     u1470 04C9                       u1390 01F4                       u1471 04C8  
                     u1455 0331                       u1391 01F3                       u1375 01E3  
                     u1527 04AB                       u1480 04D9                       u1481 04D8  
                     u1537 02BE                       u1490 0393                       u1547 02CD  
                     u1557 02DA                       u1567 0545                       u1577 052D  
                     _RBIE 005B                       _RBIF 0058                       _TMR0 0001  
                     _SPEN 00C7                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _WPUB 0095          ?_Lcd_Write_String 0076  
                     _main 04A0                       btemp 007E                       _volt 0038  
                     start 000E         ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0536  
                    ??_map 0079                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 01FE            __end_of___awmod 02B1                      _ANSEL 0188  
          ___awdiv@divisor 0073            __end_of___lwdiv 0342                      i1l213 056F  
                    i1l208 0513            __end_of___lwmod 0442            ___awdiv@counter 0020  
                    _VCFG0 04FC                      _VCFG1 04FD                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u60_20 050D  
                    u60_21 050C                      u57_20 0565                      u57_21 0564  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      u58_20 056D  
                    u58_21 056C                      u59_20 0504                      u59_21 0503  
                    _TXREG 0019                      _nRBPU 040F                      _setup 0342  
        ?_separar_digitos8 0024                      pclath 000A         ??_separar_digitos8 0025  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 02FC  
         __end_of_Lcd_Port 0408            __initialization 0011               __end_of_main 04C3  
                   ??_main 0034                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0075                     ?_setup 0070                     _ANSELH 0189  
         __end_of_adc_init 0258           __end_of_adc_read 057E                     i1l1133 055F  
                   i1l1221 0509                     i1l1135 0565                     i1l1223 050D  
                   i1l1215 0500                     i1l1137 0569                     i1l1225 0512  
                   i1l1217 0504                     i1l1139 056D                     i1l1219 0508  
                ??_Lcd_Cmd 0074                     _SPBRGH 009A                     ___wmul 047B  
                ??___awdiv 0077                  ??___awmod 0077                  ??___lwdiv 0079  
        _separar_digitos16 0122                  ??___lwmod 0077           ___awdiv@quotient 0022  
          ___awmod@divisor 0073         ?_separar_digitos16 0027            ___awmod@counter 0077  
                   map@res 0031                     map@val 0027  separar_digitos16@centenas 002C  
                   saved_w 007E        ??_separar_digitos16 0079            Lcd_Set_Cursor@a 0078  
          Lcd_Set_Cursor@b 0077    __end_of__initialization 001C          __end_of_Lcd_Clear 0585  
__end_of_separar_digitos16 0195             __pcstackCOMMON 0070  separar_digitos16@unidades 0030  
            __end_of_setup 0386             _Lcd_Set_Cursor 04C3             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0079  
               __pbssBANK0 0036                 __pmaintext 04A0                    ?___wmul 0073  
               __pintentry 0004     __end_of_Lcd_Set_Cursor 04E3                  ?_adc_init 0073  
                ?_adc_read 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 04E3             _Lcd_Write_Char 0536                    _Lcd_Cmd 051C  
                  ___awdiv 0195                    ___awmod 0258                    ___lwdiv 02FC  
                  ___lwmod 0408          __end_of_iocb_init 055F            ?_Lcd_Set_Cursor 0077  
        __end_of_ioc_portB 0570                 ??_adc_init 0076                 ??_adc_read 0075  
                  __ptext1 0342                    __ptext2 054C                    __ptext3 01FE  
                  __ptext4 02B1                    __ptext5 0020                    __ptext6 00A9  
                  __ptext7 0258                    __ptext8 0195                    __ptext9 0122  
         ___awmod@dividend 0075                    _pot_val 007A                    map@max1 002B  
                  map@max2 002F                    map@min1 0029                    map@min2 002D  
   __end_of_Lcd_Write_Char 054C       end_of_initialization 001C                  Lcd_Port@a 0073  
  separar_digitos8@decenas 0029            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0076  
        Lcd_Write_String@i 0078                 _output_LCD 0020                  _TXSTAbits 0098  
                _Lcd_Clear 057E             __end_of___wmul 04A0           _Lcd_Write_String 0386  
      start_initialization 0011                __end_of_map 047B                __end_of_isr 051C  
               ?_Lcd_Clear 0070           _separar_digitos8 00A9                   ??___wmul 0077  
          adc_init@channel 0075            Lcd_Write_Char@a 0075                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
            adc_init@clock 0074                ?_output_LCD 0070           ___lwdiv@dividend 0022  
                adc_init@J 0078                  adc_init@R 0073           ??_Lcd_Set_Cursor 0078  
                 ?___awdiv 0073                   ?___awmod 0073                   ?___lwdiv 0020  
                 ?___lwmod 0073                  __pstrings 04E3                  _iocb_init 054C  
                _ioc_portB 055F     separar_digitos16@dig16 0029           ___lwdiv@quotient 0025  
        interrupt_function 0004             ___wmul@product 0077                   Lcd_Cmd@a 0076  
              ??_Lcd_Clear 0077                 _ADCON0bits 001F                __stringbase 04F2  
        ___wmul@multiplier 0073                 ?_iocb_init 0070           ??_Lcd_Write_Char 0074  
               ?_ioc_portB 0070                   _Lcd_Init 02B1                   _Lcd_Port 03CA  
          iocb_init@pinesB 0073   __end_of_Lcd_Write_String 03CA   separar_digitos16@decenas 002E  
       __end_of__stringtab 04F3                   _adc_init 01FE                   _adc_read 0570  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0024                   __ptext10 0408  
                 __ptext11 0442                   __ptext20 0570                   __ptext12 047B  
                 __ptext21 0500                   __ptext13 02FC                   __ptext22 055F  
                 __ptext14 0386                   __ptext15 0536                   __ptext16 04C3  
                 __ptext17 057E                   __ptext18 051C                   __ptext19 03CA  
 __end_of_separar_digitos8 0122      separar_digitos16@div1 0032      separar_digitos16@div2 002A  
                 _pot_volt 0036                ??_iocb_init 0073                ??_ioc_portB 0070  
                 intlevel1 0000           ___lwmod@dividend 0075               ??_output_LCD 007A  
     separar_digitos16@num 0027                  stringcode 04ED                 _OSCCONbits 008F  
     separar_digitos8@dig8 0024       separar_digitos8@div1 002C       separar_digitos8@div2 0027  
       Lcd_Set_Cursor@temp 0079            ___lwmod@divisor 0073            ___lwmod@counter 0077  
       __end_of_output_LCD 00A9                   stringdir 04ED                   stringtab 04E3  
      separar_digitos8@num 002B  
