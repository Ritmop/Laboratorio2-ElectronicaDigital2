

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jul 25 15:35:30 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 22/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     008F                     	;# 
   110     0090                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0093                     	;# 
   116     0094                     	;# 
   117     0095                     	;# 
   118     0096                     	;# 
   119     0097                     	;# 
   120     0098                     	;# 
   121     0099                     	;# 
   122     009A                     	;# 
   123     009B                     	;# 
   124     009C                     	;# 
   125     009D                     	;# 
   126     009E                     	;# 
   127     009F                     	;# 
   128     0105                     	;# 
   129     0107                     	;# 
   130     0108                     	;# 
   131     0109                     	;# 
   132     010C                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010F                     	;# 
   137     0185                     	;# 
   138     0187                     	;# 
   139     0188                     	;# 
   140     0189                     	;# 
   141     018C                     	;# 
   142     018D                     	;# 
   143     0000                     	;# 
   144     0001                     	;# 
   145     0002                     	;# 
   146     0003                     	;# 
   147     0004                     	;# 
   148     0005                     	;# 
   149     0006                     	;# 
   150     0007                     	;# 
   151     0008                     	;# 
   152     0009                     	;# 
   153     000A                     	;# 
   154     000B                     	;# 
   155     000C                     	;# 
   156     000D                     	;# 
   157     000E                     	;# 
   158     000E                     	;# 
   159     000F                     	;# 
   160     0010                     	;# 
   161     0011                     	;# 
   162     0012                     	;# 
   163     0013                     	;# 
   164     0014                     	;# 
   165     0015                     	;# 
   166     0015                     	;# 
   167     0016                     	;# 
   168     0017                     	;# 
   169     0018                     	;# 
   170     0019                     	;# 
   171     001A                     	;# 
   172     001B                     	;# 
   173     001B                     	;# 
   174     001C                     	;# 
   175     001D                     	;# 
   176     001E                     	;# 
   177     001F                     	;# 
   178     0081                     	;# 
   179     0085                     	;# 
   180     0086                     	;# 
   181     0087                     	;# 
   182     0088                     	;# 
   183     0089                     	;# 
   184     008C                     	;# 
   185     008D                     	;# 
   186     008E                     	;# 
   187     008F                     	;# 
   188     0090                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0095                     	;# 
   196     0096                     	;# 
   197     0097                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009A                     	;# 
   201     009B                     	;# 
   202     009C                     	;# 
   203     009D                     	;# 
   204     009E                     	;# 
   205     009F                     	;# 
   206     0105                     	;# 
   207     0107                     	;# 
   208     0108                     	;# 
   209     0109                     	;# 
   210     010C                     	;# 
   211     010C                     	;# 
   212     010D                     	;# 
   213     010E                     	;# 
   214     010F                     	;# 
   215     0185                     	;# 
   216     0187                     	;# 
   217     0188                     	;# 
   218     0189                     	;# 
   219     018C                     	;# 
   220     018D                     	;# 
   221     0000                     	;# 
   222     0001                     	;# 
   223     0002                     	;# 
   224     0003                     	;# 
   225     0004                     	;# 
   226     0005                     	;# 
   227     0006                     	;# 
   228     0007                     	;# 
   229     0008                     	;# 
   230     0009                     	;# 
   231     000A                     	;# 
   232     000B                     	;# 
   233     000C                     	;# 
   234     000D                     	;# 
   235     000E                     	;# 
   236     000E                     	;# 
   237     000F                     	;# 
   238     0010                     	;# 
   239     0011                     	;# 
   240     0012                     	;# 
   241     0013                     	;# 
   242     0014                     	;# 
   243     0015                     	;# 
   244     0015                     	;# 
   245     0016                     	;# 
   246     0017                     	;# 
   247     0018                     	;# 
   248     0019                     	;# 
   249     001A                     	;# 
   250     001B                     	;# 
   251     001B                     	;# 
   252     001C                     	;# 
   253     001D                     	;# 
   254     001E                     	;# 
   255     001F                     	;# 
   256     0081                     	;# 
   257     0085                     	;# 
   258     0086                     	;# 
   259     0087                     	;# 
   260     0088                     	;# 
   261     0089                     	;# 
   262     008C                     	;# 
   263     008D                     	;# 
   264     008E                     	;# 
   265     008F                     	;# 
   266     0090                     	;# 
   267     0091                     	;# 
   268     0092                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0093                     	;# 
   272     0094                     	;# 
   273     0095                     	;# 
   274     0096                     	;# 
   275     0097                     	;# 
   276     0098                     	;# 
   277     0099                     	;# 
   278     009A                     	;# 
   279     009B                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     0105                     	;# 
   285     0107                     	;# 
   286     0108                     	;# 
   287     0109                     	;# 
   288     010C                     	;# 
   289     010C                     	;# 
   290     010D                     	;# 
   291     010E                     	;# 
   292     010F                     	;# 
   293     0185                     	;# 
   294     0187                     	;# 
   295     0188                     	;# 
   296     0189                     	;# 
   297     018C                     	;# 
   298     018D                     	;# 
   299     0000                     	;# 
   300     0001                     	;# 
   301     0002                     	;# 
   302     0003                     	;# 
   303     0004                     	;# 
   304     0005                     	;# 
   305     0006                     	;# 
   306     0007                     	;# 
   307     0008                     	;# 
   308     0009                     	;# 
   309     000A                     	;# 
   310     000B                     	;# 
   311     000C                     	;# 
   312     000D                     	;# 
   313     000E                     	;# 
   314     000E                     	;# 
   315     000F                     	;# 
   316     0010                     	;# 
   317     0011                     	;# 
   318     0012                     	;# 
   319     0013                     	;# 
   320     0014                     	;# 
   321     0015                     	;# 
   322     0015                     	;# 
   323     0016                     	;# 
   324     0017                     	;# 
   325     0018                     	;# 
   326     0019                     	;# 
   327     001A                     	;# 
   328     001B                     	;# 
   329     001B                     	;# 
   330     001C                     	;# 
   331     001D                     	;# 
   332     001E                     	;# 
   333     001F                     	;# 
   334     0081                     	;# 
   335     0085                     	;# 
   336     0086                     	;# 
   337     0087                     	;# 
   338     0088                     	;# 
   339     0089                     	;# 
   340     008C                     	;# 
   341     008D                     	;# 
   342     008E                     	;# 
   343     008F                     	;# 
   344     0090                     	;# 
   345     0091                     	;# 
   346     0092                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0093                     	;# 
   350     0094                     	;# 
   351     0095                     	;# 
   352     0096                     	;# 
   353     0097                     	;# 
   354     0098                     	;# 
   355     0099                     	;# 
   356     009A                     	;# 
   357     009B                     	;# 
   358     009C                     	;# 
   359     009D                     	;# 
   360     009E                     	;# 
   361     009F                     	;# 
   362     0105                     	;# 
   363     0107                     	;# 
   364     0108                     	;# 
   365     0109                     	;# 
   366     010C                     	;# 
   367     010C                     	;# 
   368     010D                     	;# 
   369     010E                     	;# 
   370     010F                     	;# 
   371     0185                     	;# 
   372     0187                     	;# 
   373     0188                     	;# 
   374     0189                     	;# 
   375     018C                     	;# 
   376     018D                     	;# 
   377     0000                     	;# 
   378     0001                     	;# 
   379     0002                     	;# 
   380     0003                     	;# 
   381     0004                     	;# 
   382     0005                     	;# 
   383     0006                     	;# 
   384     0007                     	;# 
   385     0008                     	;# 
   386     0009                     	;# 
   387     000A                     	;# 
   388     000B                     	;# 
   389     000C                     	;# 
   390     000D                     	;# 
   391     000E                     	;# 
   392     000E                     	;# 
   393     000F                     	;# 
   394     0010                     	;# 
   395     0011                     	;# 
   396     0012                     	;# 
   397     0013                     	;# 
   398     0014                     	;# 
   399     0015                     	;# 
   400     0015                     	;# 
   401     0016                     	;# 
   402     0017                     	;# 
   403     0018                     	;# 
   404     0019                     	;# 
   405     001A                     	;# 
   406     001B                     	;# 
   407     001B                     	;# 
   408     001C                     	;# 
   409     001D                     	;# 
   410     001E                     	;# 
   411     001F                     	;# 
   412     0081                     	;# 
   413     0085                     	;# 
   414     0086                     	;# 
   415     0087                     	;# 
   416     0088                     	;# 
   417     0089                     	;# 
   418     008C                     	;# 
   419     008D                     	;# 
   420     008E                     	;# 
   421     008F                     	;# 
   422     0090                     	;# 
   423     0091                     	;# 
   424     0092                     	;# 
   425     0093                     	;# 
   426     0093                     	;# 
   427     0093                     	;# 
   428     0094                     	;# 
   429     0095                     	;# 
   430     0096                     	;# 
   431     0097                     	;# 
   432     0098                     	;# 
   433     0099                     	;# 
   434     009A                     	;# 
   435     009B                     	;# 
   436     009C                     	;# 
   437     009D                     	;# 
   438     009E                     	;# 
   439     009F                     	;# 
   440     0105                     	;# 
   441     0107                     	;# 
   442     0108                     	;# 
   443     0109                     	;# 
   444     010C                     	;# 
   445     010C                     	;# 
   446     010D                     	;# 
   447     010E                     	;# 
   448     010F                     	;# 
   449     0185                     	;# 
   450     0187                     	;# 
   451     0188                     	;# 
   452     0189                     	;# 
   453     018C                     	;# 
   454     018D                     	;# 
   455     0008                     _PORTDbits	set	8
   456     001E                     _ADRESH	set	30
   457     001F                     _ADCON0bits	set	31
   458     0007                     _PORTC	set	7
   459     0008                     _PORTD	set	8
   460     0006                     _PORTB	set	6
   461     0005                     _PORTA	set	5
   462     0001                     _TMR0	set	1
   463     0043                     _RD3	set	67
   464     0047                     _RD7	set	71
   465     0046                     _RD6	set	70
   466     0045                     _RD5	set	69
   467     0044                     _RD4	set	68
   468     00F8                     _ADON	set	248
   469     005B                     _RBIE	set	91
   470     005D                     _T0IE	set	93
   471     005F                     _GIE	set	95
   472     0031                     _RB1	set	49
   473     0030                     _RB0	set	48
   474     0058                     _RBIF	set	88
   475     005A                     _T0IF	set	90
   476     009E                     _ADRESL	set	158
   477     0096                     _IOCB	set	150
   478     0095                     _WPUB	set	149
   479     0081                     _OPTION_REGbits	set	129
   480     008F                     _OSCCONbits	set	143
   481     0087                     _TRISC	set	135
   482     0088                     _TRISD	set	136
   483     0086                     _TRISB	set	134
   484     0085                     _TRISA	set	133
   485     04FD                     _VCFG1	set	1277
   486     04FC                     _VCFG0	set	1276
   487     04FF                     _ADFM	set	1279
   488     040F                     _nRBPU	set	1039
   489     040D                     _T0CS	set	1037
   490     0478                     _SCS	set	1144
   491     0189                     _ANSELH	set	393
   492     0188                     _ANSEL	set	392
   493                           
   494                           	psect	strings
   495     03CB                     __pstrings:
   496     03CB                     stringtab:
   497     03CB                     __stringtab:
   498                           
   499                           ;	String table - string pointers are 1 byte each
   500     03CB  1BFF               	btfsc	btemp+1,7
   501     03CC  2BD5               	ljmp	stringcode
   502     03CD  1383               	bcf	3,7
   503     03CE  187F               	btfsc	btemp+1,0
   504     03CF  1783               	bsf	3,7
   505     03D0  0800               	movf	0,w
   506     03D1  0A84               	incf	4,f
   507     03D2  1903               	skipnz
   508     03D3  0AFF               	incf	btemp+1,f
   509     03D4  0008               	return
   510     03D5                     stringcode:
   511     03D5                     stringdir:
   512     03D5  3003               	movlw	high stringdir
   513     03D6  008A               	movwf	10
   514     03D7  0804               	movf	4,w
   515     03D8  0A84               	incf	4,f
   516     03D9  0782               	addwf	2,f
   517     03DA                     __stringbase:
   518     03DA  3400               	retlw	0
   519     03DB                     __end_of__stringtab:
   520     03DB                     STR_1:
   521     03DB  3450               	retlw	80	;'P'
   522     03DC  344F               	retlw	79	;'O'
   523     03DD  3454               	retlw	84	;'T'
   524     03DE  343A               	retlw	58	;':'
   525     03DF  3420               	retlw	32	;' '
   526     03E0  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529     0011                     start_initialization:	
   530                           ; #config settings
   531                           
   532     0011                     __initialization:
   533                           
   534                           ; Clear objects allocated to COMMON
   535     0011  01FA               	clrf	__pbssCOMMON& (0+127)
   536     0012                     end_of_initialization:	
   537                           ;End of C runtime variable initialization code
   538                           
   539     0012                     __end_of__initialization:
   540     0012  0183               	clrf	3
   541     0013  120A  118A  2B50   	ljmp	_main	;jump to C main() function
   542                           
   543                           	psect	bssCOMMON
   544     007A                     __pbssCOMMON:
   545     007A                     _adc_val:
   546     007A                     	ds	1
   547                           
   548                           	psect	cstackCOMMON
   549     0070                     __pcstackCOMMON:
   550     0070                     ?_ioc_portB:
   551     0070                     ??_ioc_portB:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_setup:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ?_output_LCD:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_iocb_init:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ?_Lcd_Init:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_Lcd_Clear:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?_isr:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ??_isr:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_Lcd_Port:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ?_Lcd_Cmd:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_Lcd_Write_Char:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587                           
   588                           ; 2 bytes @ 0x0
   589     0070                     	ds	3
   590     0073                     ??_iocb_init:
   591     0073                     ?_adc_init:	
   592                           ; 1 bytes @ 0x3
   593                           
   594     0073                     ??_Lcd_Port:	
   595                           ; 1 bytes @ 0x3
   596                           
   597     0073                     ?_adc_read:	
   598                           ; 1 bytes @ 0x3
   599                           
   600     0073                     ?___awdiv:	
   601                           ; 2 bytes @ 0x3
   602                           
   603     0073                     ?___awmod:	
   604                           ; 2 bytes @ 0x3
   605                           
   606     0073                     iocb_init@pinesB:	
   607                           ; 2 bytes @ 0x3
   608                           
   609     0073                     adc_init@R:	
   610                           ; 1 bytes @ 0x3
   611                           
   612     0073                     Lcd_Port@a:	
   613                           ; 1 bytes @ 0x3
   614                           
   615     0073                     ___awdiv@divisor:	
   616                           ; 1 bytes @ 0x3
   617                           
   618     0073                     ___awmod@divisor:	
   619                           ; 2 bytes @ 0x3
   620                           
   621                           
   622                           ; 2 bytes @ 0x3
   623     0073                     	ds	1
   624     0074                     ??_Lcd_Cmd:
   625     0074                     ??_Lcd_Write_Char:	
   626                           ; 1 bytes @ 0x4
   627                           
   628     0074                     adc_init@clock:	
   629                           ; 1 bytes @ 0x4
   630                           
   631                           
   632                           ; 1 bytes @ 0x4
   633     0074                     	ds	1
   634     0075                     ??_adc_read:
   635     0075                     adc_init@channel:	
   636                           ; 1 bytes @ 0x5
   637                           
   638     0075                     Lcd_Write_Char@temp:	
   639                           ; 1 bytes @ 0x5
   640                           
   641     0075                     ___awdiv@dividend:	
   642                           ; 1 bytes @ 0x5
   643                           
   644     0075                     ___awmod@dividend:	
   645                           ; 2 bytes @ 0x5
   646                           
   647                           
   648                           ; 2 bytes @ 0x5
   649     0075                     	ds	1
   650     0076                     ??_adc_init:
   651     0076                     Lcd_Cmd@a:	
   652                           ; 1 bytes @ 0x6
   653                           
   654     0076                     Lcd_Write_Char@y:	
   655                           ; 1 bytes @ 0x6
   656                           
   657                           
   658                           ; 1 bytes @ 0x6
   659     0076                     	ds	1
   660     0077                     ??_Lcd_Init:
   661     0077                     ??_Lcd_Clear:	
   662                           ; 1 bytes @ 0x7
   663                           
   664     0077                     ?_Lcd_Set_Cursor:	
   665                           ; 1 bytes @ 0x7
   666                           
   667     0077                     ??___awdiv:	
   668                           ; 1 bytes @ 0x7
   669                           
   670     0077                     ??___awmod:	
   671                           ; 1 bytes @ 0x7
   672                           
   673     0077                     Lcd_Set_Cursor@b:	
   674                           ; 1 bytes @ 0x7
   675                           
   676     0077                     Lcd_Write_Char@a:	
   677                           ; 1 bytes @ 0x7
   678                           
   679     0077                     ___awmod@counter:	
   680                           ; 1 bytes @ 0x7
   681                           
   682                           
   683                           ; 1 bytes @ 0x7
   684     0077                     	ds	1
   685     0078                     ??_Lcd_Set_Cursor:
   686     0078                     ?_Lcd_Write_String:	
   687                           ; 1 bytes @ 0x8
   688                           
   689     0078                     adc_init@J:	
   690                           ; 1 bytes @ 0x8
   691                           
   692     0078                     ___awmod@sign:	
   693                           ; 1 bytes @ 0x8
   694                           
   695     0078                     Lcd_Write_String@a:	
   696                           ; 1 bytes @ 0x8
   697                           
   698                           
   699                           ; 2 bytes @ 0x8
   700     0078                     	ds	1
   701     0079                     ??_setup:
   702                           
   703                           ; 1 bytes @ 0x9
   704     0079                     	ds	1
   705     007A                     ??_output_LCD:
   706                           
   707                           	psect	cstackBANK0
   708     0020                     __pcstackBANK0:	
   709                           ; 1 bytes @ 0xA
   710                           
   711     0020                     ??_Lcd_Write_String:
   712     0020                     Lcd_Set_Cursor@a:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0020                     ___awdiv@counter:	
   716                           ; 1 bytes @ 0x0
   717                           
   718                           
   719                           ; 1 bytes @ 0x0
   720     0020                     	ds	1
   721     0021                     Lcd_Set_Cursor@z:
   722     0021                     ___awdiv@sign:	
   723                           ; 1 bytes @ 0x1
   724                           
   725                           
   726                           ; 1 bytes @ 0x1
   727     0021                     	ds	1
   728     0022                     Lcd_Set_Cursor@y:
   729     0022                     ___awdiv@quotient:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 2 bytes @ 0x2
   734     0022                     	ds	1
   735     0023                     Lcd_Set_Cursor@temp:
   736     0023                     Lcd_Write_String@i:	
   737                           ; 1 bytes @ 0x3
   738                           
   739                           
   740                           ; 2 bytes @ 0x3
   741     0023                     	ds	1
   742     0024                     ?_separar_digitos:
   743     0024                     separar_digitos@dig:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 1 bytes @ 0x4
   748     0024                     	ds	1
   749     0025                     ??_separar_digitos:
   750                           
   751                           ; 1 bytes @ 0x5
   752     0025                     	ds	2
   753     0027                     separar_digitos@residuo_cent:
   754                           
   755                           ; 1 bytes @ 0x7
   756     0027                     	ds	1
   757     0028                     separar_digitos@residuo_dec:
   758                           
   759                           ; 1 bytes @ 0x8
   760     0028                     	ds	1
   761     0029                     separar_digitos@residuo_unit:
   762                           
   763                           ; 1 bytes @ 0x9
   764     0029                     	ds	1
   765     002A                     separar_digitos@num:
   766                           
   767                           ; 1 bytes @ 0xA
   768     002A                     	ds	1
   769     002B                     separar_digitos@decenas:
   770                           
   771                           ; 1 bytes @ 0xB
   772     002B                     	ds	1
   773     002C                     separar_digitos@centenas:
   774                           
   775                           ; 1 bytes @ 0xC
   776     002C                     	ds	1
   777     002D                     output_LCD@decimal:
   778                           
   779                           ; 3 bytes @ 0xD
   780     002D                     	ds	3
   781     0030                     ??_main:
   782                           
   783                           ; 1 bytes @ 0x10
   784     0030                     	ds	2
   785                           
   786                           	psect	maintext
   787     0350                     __pmaintext:	
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 73 in file "Prelab2.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  2   84[None  ] int 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : B00/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0
   809 ;;      Temps:          0       2       0       0       0
   810 ;;      Totals:         0       2       0       0       0
   811 ;;Total ram usage:        2 bytes
   812 ;; Hardware stack levels required when called: 6
   813 ;; This function calls:
   814 ;;		_adc_read
   815 ;;		_output_LCD
   816 ;;		_setup
   817 ;; This function is called by:
   818 ;;		Startup code after reset
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822     0350                     _main:	
   823                           ;psect for function _main
   824                           
   825     0350                     l1452:	
   826                           ;incstack = 0
   827                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   828                           
   829                           
   830                           ;Prelab2.c: 74:     TMR0 = 50;
   831     0350  120A  118A  22AC  120A  118A  	fcall	_setup
   832     0355                     l1454:
   833                           
   834                           ;Prelab2.c: 78:     Lcd_Init();
   835     0355  3082               	movlw	130
   836     0356  1283               	bcf	3,5	;RP0=0, select bank0
   837     0357  1303               	bcf	3,6	;RP1=0, select bank0
   838     0358  00B1               	movwf	??_main+1
   839     0359  30DD               	movlw	221
   840     035A  00B0               	movwf	??_main
   841     035B                     u917:
   842     035B  0BB0               	decfsz	??_main,f
   843     035C  2B5B               	goto	u917
   844     035D  0BB1               	decfsz	??_main+1,f
   845     035E  2B5B               	goto	u917
   846     035F                     l1456:
   847                           
   848                           ;Prelab2.c: 79: }
   849     035F  120A  118A  2405  120A  118A  	fcall	_adc_read
   850     0364  0874               	movf	?_adc_read+1,w
   851     0365  00FA               	movwf	_adc_val
   852     0366                     l1458:
   853                           
   854                           ;Prelab2.c: 80: 
   855     0366  087A               	movf	_adc_val,w
   856     0367  1283               	bcf	3,5	;RP0=0, select bank0
   857     0368  1303               	bcf	3,6	;RP1=0, select bank0
   858     0369  0085               	movwf	5	;volatile
   859     036A                     l1460:
   860                           
   861                           ;Prelab2.c: 82:     Lcd_Clear();
   862     036A  120A  118A  2326  120A  118A  	fcall	_output_LCD
   863     036F  2B55               	goto	l1454
   864     0370  120A  118A  280E   	ljmp	start
   865     0373                     __end_of_main:
   866                           
   867                           	psect	text1
   868     02AC                     __ptext1:	
   869 ;; *************** function _setup *****************
   870 ;; Defined at:
   871 ;;		line 86 in file "Prelab2.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0
   888 ;;      Totals:         0       0       0       0       0
   889 ;;Total ram usage:        0 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 5
   892 ;; This function calls:
   893 ;;		_Lcd_Init
   894 ;;		_adc_init
   895 ;;		_iocb_init
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901     02AC                     _setup:	
   902                           ;psect for function _setup
   903                           
   904     02AC                     l1302:	
   905                           ;incstack = 0
   906                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   907                           
   908                           
   909                           ;Prelab2.c: 88: 
   910     02AC  1683               	bsf	3,5	;RP0=1, select bank3
   911     02AD  1703               	bsf	3,6	;RP1=1, select bank3
   912     02AE  0188               	clrf	8	;volatile
   913     02AF                     l1304:
   914                           
   915                           ;Prelab2.c: 89:     Lcd_Write_String(decimal);
   916     02AF  3020               	movlw	32
   917     02B0  0089               	movwf	9	;volatile
   918     02B1                     l1306:
   919                           
   920                           ;Prelab2.c: 90: }
   921     02B1  1683               	bsf	3,5	;RP0=1, select bank1
   922     02B2  1303               	bcf	3,6	;RP1=0, select bank1
   923     02B3  0185               	clrf	5	;volatile
   924     02B4                     l1308:
   925                           
   926                           ;Prelab2.c: 91: 
   927     02B4  1283               	bcf	3,5	;RP0=0, select bank0
   928     02B5  1303               	bcf	3,6	;RP1=0, select bank0
   929     02B6  0185               	clrf	5	;volatile
   930     02B7                     l1310:
   931                           
   932                           ;Prelab2.c: 92: 
   933     02B7  1683               	bsf	3,5	;RP0=1, select bank1
   934     02B8  1303               	bcf	3,6	;RP1=0, select bank1
   935     02B9  0186               	clrf	6	;volatile
   936     02BA                     l1312:
   937                           
   938                           ;Prelab2.c: 93: void separar_digitos(uint8_t num, char *dig){
   939     02BA  1283               	bcf	3,5	;RP0=0, select bank0
   940     02BB  1303               	bcf	3,6	;RP1=0, select bank0
   941     02BC  0186               	clrf	6	;volatile
   942     02BD                     l1314:
   943                           
   944                           ;Prelab2.c: 94:     uint8_t unidades,decenas,centenas,residuo_cent,residuo_dec,residuo_u
      +                          nit;
   945     02BD  1683               	bsf	3,5	;RP0=1, select bank1
   946     02BE  1303               	bcf	3,6	;RP1=0, select bank1
   947     02BF  0188               	clrf	8	;volatile
   948     02C0                     l1316:
   949                           
   950                           ;Prelab2.c: 95:     centenas = num / 10;
   951     02C0  1283               	bcf	3,5	;RP0=0, select bank0
   952     02C1  1303               	bcf	3,6	;RP1=0, select bank0
   953     02C2  0188               	clrf	8	;volatile
   954     02C3                     l1318:
   955                           
   956                           ;Prelab2.c: 96:     residuo_cent = num % 10;
   957     02C3  1683               	bsf	3,5	;RP0=1, select bank1
   958     02C4  1303               	bcf	3,6	;RP1=0, select bank1
   959     02C5  0187               	clrf	7	;volatile
   960     02C6                     l1320:
   961                           
   962                           ;Prelab2.c: 97:     decenas = centenas / 10;
   963     02C6  1283               	bcf	3,5	;RP0=0, select bank0
   964     02C7  1303               	bcf	3,6	;RP1=0, select bank0
   965     02C8  0187               	clrf	7	;volatile
   966     02C9                     l1322:
   967                           
   968                           ;Prelab2.c: 100:     residuo_unit = decenas % 10;
   969     02C9  3070               	movlw	112
   970     02CA  1683               	bsf	3,5	;RP0=1, select bank1
   971     02CB  1303               	bcf	3,6	;RP1=0, select bank1
   972     02CC  048F               	iorwf	15,f	;volatile
   973     02CD                     l1324:
   974                           
   975                           ;Prelab2.c: 101: 
   976     02CD  140F               	bsf	15,0	;volatile
   977     02CE                     l1326:
   978                           
   979                           ;Prelab2.c: 103:     dig[1] = residuo_dec + 0x30;
   980     02CE  3023               	movlw	35
   981     02CF  120A  118A  23E1  120A  118A  	fcall	_iocb_init
   982     02D4                     l1328:
   983                           
   984                           ;Prelab2.c: 104:     dig[0] = residuo_unit + 0x30;
   985     02D4  01F3               	clrf	adc_init@R
   986     02D5  3008               	movlw	8
   987     02D6  00F4               	movwf	adc_init@clock
   988     02D7  300D               	movlw	13
   989     02D8  00F5               	movwf	adc_init@channel
   990     02D9  3000               	movlw	0
   991     02DA  120A  118A  2167  120A  118A  	fcall	_adc_init
   992     02DF                     l1330:
   993     02DF  178B               	bsf	11,7	;volatile
   994     02E0                     l1332:
   995     02E0  168B               	bsf	11,5	;volatile
   996     02E1                     l1334:
   997     02E1  30F8               	movlw	-8
   998     02E2  1683               	bsf	3,5	;RP0=1, select bank1
   999     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  1000     02E4  0581               	andwf	1,f	;volatile
  1001     02E5                     l1336:
  1002     02E5  1281               	bcf	1,5	;volatile
  1003     02E6                     l1338:
  1004     02E6  3032               	movlw	50
  1005     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1006     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1007     02E9  0081               	movwf	1	;volatile
  1008     02EA                     l1340:
  1009     02EA  110B               	bcf	11,2	;volatile
  1010     02EB                     l1342:
  1011     02EB  120A  118A  210A  120A  118A  	fcall	_Lcd_Init
  1012     02F0                     l91:
  1013     02F0  0008               	return
  1014     02F1                     __end_of_setup:
  1015                           
  1016                           	psect	text2
  1017     03E1                     __ptext2:	
  1018 ;; *************** function _iocb_init *****************
  1019 ;; Defined at:
  1020 ;;		line 4 in file "iocb_init.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  pinesB          1    wreg     unsigned char 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  pinesB          1    3[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, btemp+1
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0
  1037 ;;      Totals:         1       0       0       0       0
  1038 ;;Total ram usage:        1 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 2
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_setup
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048     03E1                     _iocb_init:	
  1049                           ;psect for function _iocb_init
  1050                           
  1051                           
  1052                           ;incstack = 0
  1053                           ; Regs used in _iocb_init: [wreg+status,2+status,0+btemp+1]
  1054                           ;iocb_init@pinesB stored from wreg
  1055     03E1  00F3               	movwf	iocb_init@pinesB
  1056     03E2                     l916:
  1057                           
  1058                           ;iocb_init.c: 5:     TRISB |= pinesB;
  1059     03E2  0873               	movf	iocb_init@pinesB,w	;volatile
  1060     03E3  00FF               	movwf	btemp+1
  1061     03E4  087F               	movf	btemp+1,w
  1062     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  1063     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  1064     03E7  0486               	iorwf	6,f	;volatile
  1065     03E8                     l918:
  1066                           
  1067                           ;iocb_init.c: 6:     nRBPU = 0;
  1068     03E8  1381               	bcf	1,7	;volatile
  1069                           
  1070                           ;iocb_init.c: 7:     WPUB |= pinesB;
  1071     03E9  0873               	movf	iocb_init@pinesB,w	;volatile
  1072     03EA  00FF               	movwf	btemp+1
  1073     03EB  087F               	movf	btemp+1,w
  1074     03EC  0495               	iorwf	21,f	;volatile
  1075     03ED                     l920:
  1076                           
  1077                           ;iocb_init.c: 8:     RBIE = 1;
  1078     03ED  158B               	bsf	11,3	;volatile
  1079                           
  1080                           ;iocb_init.c: 9:     IOCB |= pinesB;
  1081     03EE  0873               	movf	iocb_init@pinesB,w	;volatile
  1082     03EF  00FF               	movwf	btemp+1
  1083     03F0  087F               	movf	btemp+1,w
  1084     03F1  0496               	iorwf	22,f	;volatile
  1085     03F2                     l922:
  1086                           
  1087                           ;iocb_init.c: 10:     GIE = 1;
  1088     03F2  178B               	bsf	11,7	;volatile
  1089     03F3                     l112:
  1090     03F3  0008               	return
  1091     03F4                     __end_of_iocb_init:
  1092                           
  1093                           	psect	text3
  1094     0167                     __ptext3:	
  1095 ;; *************** function _adc_init *****************
  1096 ;; Defined at:
  1097 ;;		line 4 in file "ADC_lib.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  J               1    wreg     unsigned char 
  1100 ;;  R               1    3[COMMON] unsigned char 
  1101 ;;  clock           1    4[COMMON] unsigned char 
  1102 ;;  channel         1    5[COMMON] unsigned char 
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  J               1    8[COMMON] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         3       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         6       0       0       0       0
  1118 ;;Total ram usage:        6 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 2
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_setup
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128     0167                     _adc_init:	
  1129                           ;psect for function _adc_init
  1130                           
  1131                           
  1132                           ;incstack = 0
  1133                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1134                           ;adc_init@J stored from wreg
  1135     0167  00F8               	movwf	adc_init@J
  1136     0168                     l1232:
  1137                           
  1138                           ;ADC_lib.c: 13:     ADFM = J;
  1139     0168  1878               	btfsc	adc_init@J,0
  1140     0169  296B               	goto	u671
  1141     016A  296F               	goto	u670
  1142     016B                     u671:
  1143     016B  1683               	bsf	3,5	;RP0=1, select bank1
  1144     016C  1303               	bcf	3,6	;RP1=0, select bank1
  1145     016D  179F               	bsf	31,7	;volatile
  1146     016E  2972               	goto	u684
  1147     016F                     u670:
  1148     016F  1683               	bsf	3,5	;RP0=1, select bank1
  1149     0170  1303               	bcf	3,6	;RP1=0, select bank1
  1150     0171  139F               	bcf	31,7	;volatile
  1151     0172                     u684:
  1152                           
  1153                           ;ADC_lib.c: 14:     VCFG0 = R;
  1154     0172  1873               	btfsc	adc_init@R,0
  1155     0173  2975               	goto	u691
  1156     0174  2979               	goto	u690
  1157     0175                     u691:
  1158     0175  1683               	bsf	3,5	;RP0=1, select bank1
  1159     0176  1303               	bcf	3,6	;RP1=0, select bank1
  1160     0177  161F               	bsf	31,4	;volatile
  1161     0178  297C               	goto	u704
  1162     0179                     u690:
  1163     0179  1683               	bsf	3,5	;RP0=1, select bank1
  1164     017A  1303               	bcf	3,6	;RP1=0, select bank1
  1165     017B  121F               	bcf	31,4	;volatile
  1166     017C                     u704:
  1167                           
  1168                           ;ADC_lib.c: 15:     VCFG1 = R;
  1169     017C  1873               	btfsc	adc_init@R,0
  1170     017D  297F               	goto	u711
  1171     017E  2983               	goto	u710
  1172     017F                     u711:
  1173     017F  1683               	bsf	3,5	;RP0=1, select bank1
  1174     0180  1303               	bcf	3,6	;RP1=0, select bank1
  1175     0181  169F               	bsf	31,5	;volatile
  1176     0182  2986               	goto	u724
  1177     0183                     u710:
  1178     0183  1683               	bsf	3,5	;RP0=1, select bank1
  1179     0184  1303               	bcf	3,6	;RP1=0, select bank1
  1180     0185  129F               	bcf	31,5	;volatile
  1181     0186                     u724:
  1182                           
  1183                           ;ADC_lib.c: 17:     switch(clock){
  1184     0186  299F               	goto	l1244
  1185     0187                     l1234:
  1186                           
  1187                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
  1188     0187  303F               	movlw	-193
  1189     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1191     018A  059F               	andwf	31,f	;volatile
  1192                           
  1193                           ;ADC_lib.c: 21:             break;
  1194     018B  29B5               	goto	l1246
  1195     018C                     l1236:
  1196                           
  1197                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
  1198     018C  1283               	bcf	3,5	;RP0=0, select bank0
  1199     018D  1303               	bcf	3,6	;RP1=0, select bank0
  1200     018E  081F               	movf	31,w	;volatile
  1201     018F  393F               	andlw	-193
  1202     0190  3840               	iorlw	64
  1203     0191  009F               	movwf	31	;volatile
  1204                           
  1205                           ;ADC_lib.c: 25:             break;
  1206     0192  29B5               	goto	l1246
  1207     0193                     l1238:
  1208                           
  1209                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
  1210     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1211     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1212     0195  081F               	movf	31,w	;volatile
  1213     0196  393F               	andlw	-193
  1214     0197  3880               	iorlw	128
  1215     0198  009F               	movwf	31	;volatile
  1216                           
  1217                           ;ADC_lib.c: 29:             break;
  1218     0199  29B5               	goto	l1246
  1219     019A                     l1240:
  1220                           
  1221                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1222     019A  30C0               	movlw	192
  1223     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1224     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1225     019D  049F               	iorwf	31,f	;volatile
  1226                           
  1227                           ;ADC_lib.c: 33:             break;
  1228     019E  29B5               	goto	l1246
  1229     019F                     l1244:
  1230     019F  0874               	movf	adc_init@clock,w
  1231     01A0  00F6               	movwf	??_adc_init
  1232     01A1  01F7               	clrf	??_adc_init+1
  1233                           
  1234                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1235                           ; Switch size 1, requested type "simple"
  1236                           ; Number of cases is 1, Range of values is 0 to 0
  1237                           ; switch strategies available:
  1238                           ; Name         Instructions Cycles
  1239                           ; simple_byte            4     3 (average)
  1240                           ; direct_byte           11     8 (fixed)
  1241                           ; jumptable            260     6 (fixed)
  1242                           ;	Chosen strategy is simple_byte
  1243     01A2  0877               	movf	??_adc_init+1,w
  1244     01A3  3A00               	xorlw	0	; case 0
  1245     01A4  1903               	skipnz
  1246     01A5  29A7               	goto	l1482
  1247     01A6  29B5               	goto	l1246
  1248     01A7                     l1482:
  1249                           
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 4, Range of values is 1 to 20
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte           13     7 (average)
  1255                           ; direct_byte           71    11 (fixed)
  1256                           ; jumptable            263     9 (fixed)
  1257                           ;	Chosen strategy is simple_byte
  1258     01A7  0876               	movf	??_adc_init,w
  1259     01A8  3A01               	xorlw	1	; case 1
  1260     01A9  1903               	skipnz
  1261     01AA  2987               	goto	l1234
  1262     01AB  3A05               	xorlw	5	; case 4
  1263     01AC  1903               	skipnz
  1264     01AD  298C               	goto	l1236
  1265     01AE  3A0C               	xorlw	12	; case 8
  1266     01AF  1903               	skipnz
  1267     01B0  2993               	goto	l1238
  1268     01B1  3A1C               	xorlw	28	; case 20
  1269     01B2  1903               	skipnz
  1270     01B3  299A               	goto	l1240
  1271     01B4  29B5               	goto	l1246
  1272     01B5                     l1246:
  1273                           
  1274                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1275     01B5  0875               	movf	adc_init@channel,w
  1276     01B6  00F6               	movwf	??_adc_init
  1277     01B7  0DF6               	rlf	??_adc_init,f
  1278     01B8  0DF6               	rlf	??_adc_init,f
  1279     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1280     01BA  081F               	movf	31,w	;volatile
  1281     01BB  0676               	xorwf	??_adc_init,w
  1282     01BC  39C3               	andlw	-61
  1283     01BD  0676               	xorwf	??_adc_init,w
  1284     01BE  009F               	movwf	31	;volatile
  1285     01BF                     l1248:
  1286                           
  1287                           ;ADC_lib.c: 38:     ADON = 1;
  1288     01BF  141F               	bsf	31,0	;volatile
  1289     01C0                     l135:
  1290     01C0  0008               	return
  1291     01C1                     __end_of_adc_init:
  1292                           
  1293                           	psect	text4
  1294     010A                     __ptext4:	
  1295 ;; *************** function _Lcd_Init *****************
  1296 ;; Defined at:
  1297 ;;		line 65 in file "LCD.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, status,2, status,0, pclath, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1311 ;;      Params:         0       0       0       0       0
  1312 ;;      Locals:         0       0       0       0       0
  1313 ;;      Temps:          2       0       0       0       0
  1314 ;;      Totals:         2       0       0       0       0
  1315 ;;Total ram usage:        2 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 4
  1318 ;; This function calls:
  1319 ;;		_Lcd_Cmd
  1320 ;;		_Lcd_Port
  1321 ;; This function is called by:
  1322 ;;		_setup
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326     010A                     _Lcd_Init:	
  1327                           ;psect for function _Lcd_Init
  1328                           
  1329     010A                     l1254:	
  1330                           ;incstack = 0
  1331                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1332                           
  1333                           
  1334                           ;LCD.c: 66:     Lcd_Port(0x00);
  1335     010A  3000               	movlw	0
  1336     010B  120A  118A  2373  120A  118A  	fcall	_Lcd_Port
  1337     0110                     l1256:
  1338                           
  1339                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1340     0110  3034               	movlw	52
  1341     0111  00F8               	movwf	??_Lcd_Init+1
  1342     0112  30F1               	movlw	241
  1343     0113  00F7               	movwf	??_Lcd_Init
  1344     0114                     u927:
  1345     0114  0BF7               	decfsz	??_Lcd_Init,f
  1346     0115  2914               	goto	u927
  1347     0116  0BF8               	decfsz	??_Lcd_Init+1,f
  1348     0117  2914               	goto	u927
  1349     0118  2919               	nop2
  1350     0119                     l1258:
  1351                           
  1352                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  1353     0119  3003               	movlw	3
  1354     011A  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1355                           
  1356                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1357     011F  300D               	movlw	13
  1358     0120  00F8               	movwf	??_Lcd_Init+1
  1359     0121  30FB               	movlw	251
  1360     0122  00F7               	movwf	??_Lcd_Init
  1361     0123                     u937:
  1362     0123  0BF7               	decfsz	??_Lcd_Init,f
  1363     0124  2923               	goto	u937
  1364     0125  0BF8               	decfsz	??_Lcd_Init+1,f
  1365     0126  2923               	goto	u937
  1366     0127  2928               	nop2
  1367     0128                     l1260:
  1368                           
  1369                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  1370     0128  3003               	movlw	3
  1371     0129  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1372     012E                     l1262:
  1373                           
  1374                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1375     012E  301D               	movlw	29
  1376     012F  00F8               	movwf	??_Lcd_Init+1
  1377     0130  3091               	movlw	145
  1378     0131  00F7               	movwf	??_Lcd_Init
  1379     0132                     u947:
  1380     0132  0BF7               	decfsz	??_Lcd_Init,f
  1381     0133  2932               	goto	u947
  1382     0134  0BF8               	decfsz	??_Lcd_Init+1,f
  1383     0135  2932               	goto	u947
  1384                           
  1385                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  1386     0136  3003               	movlw	3
  1387     0137  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1388                           
  1389                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  1390     013C  3002               	movlw	2
  1391     013D  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1392                           
  1393                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1394     0142  3002               	movlw	2
  1395     0143  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1396                           
  1397                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  1398     0148  3008               	movlw	8
  1399     0149  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1400                           
  1401                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  1402     014E  3000               	movlw	0
  1403     014F  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1404                           
  1405                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  1406     0154  300C               	movlw	12
  1407     0155  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1408                           
  1409                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  1410     015A  3000               	movlw	0
  1411     015B  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1412                           
  1413                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  1414     0160  3006               	movlw	6
  1415     0161  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  1416     0166                     l187:
  1417     0166  0008               	return
  1418     0167                     __end_of_Lcd_Init:
  1419                           
  1420                           	psect	text5
  1421     0326                     __ptext5:	
  1422 ;; *************** function _output_LCD *****************
  1423 ;; Defined at:
  1424 ;;		line 118 in file "Prelab2.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  decimal         3   13[BANK0 ] unsigned char [3]
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       3       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         0       3       0       0       0
  1442 ;;Total ram usage:        3 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 5
  1445 ;; This function calls:
  1446 ;;		_Lcd_Clear
  1447 ;;		_Lcd_Set_Cursor
  1448 ;;		_Lcd_Write_String
  1449 ;;		_separar_digitos
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455     0326                     _output_LCD:	
  1456                           ;psect for function _output_LCD
  1457                           
  1458     0326                     l1444:	
  1459                           ;incstack = 0
  1460                           ; Regs used in _output_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1461                           
  1462     0326  120A  118A  2413  120A  118A  	fcall	_Lcd_Clear
  1463     032B  3005               	movlw	5
  1464     032C  00F7               	movwf	Lcd_Set_Cursor@b
  1465     032D  3001               	movlw	1
  1466     032E  120A  118A  221A  120A  118A  	fcall	_Lcd_Set_Cursor
  1467     0333                     l1446:
  1468     0333  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1469     0334  00F8               	movwf	Lcd_Write_String@a
  1470     0335  3080               	movlw	128
  1471     0336  00F9               	movwf	Lcd_Write_String@a+1
  1472     0337  120A  118A  2266  120A  118A  	fcall	_Lcd_Write_String
  1473     033C                     l1448:
  1474     033C  302D               	movlw	(low (output_LCD@decimal| 0))& (0+255)
  1475     033D  1283               	bcf	3,5	;RP0=0, select bank0
  1476     033E  1303               	bcf	3,6	;RP1=0, select bank0
  1477     033F  00A4               	movwf	separar_digitos@dig
  1478     0340  087A               	movf	_adc_val,w
  1479     0341  120A  118A  2016  120A  118A  	fcall	_separar_digitos
  1480     0346                     l1450:
  1481     0346  302D               	movlw	(low (output_LCD@decimal| 0))& (0+255)
  1482     0347  00F8               	movwf	Lcd_Write_String@a
  1483     0348  3000               	movlw	0
  1484     0349  00F9               	movwf	Lcd_Write_String@a+1
  1485     034A  120A  118A  2266  120A  118A  	fcall	_Lcd_Write_String
  1486     034F                     l94:
  1487     034F  0008               	return
  1488     0350                     __end_of_output_LCD:
  1489                           
  1490                           	psect	text6
  1491     0016                     __ptext6:	
  1492 ;; *************** function _separar_digitos *****************
  1493 ;; Defined at:
  1494 ;;		line 130 in file "Prelab2.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  num             1    wreg     unsigned char 
  1497 ;;  dig             1    4[BANK0 ] PTR unsigned char 
  1498 ;;		 -> output_LCD@decimal(3), 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  num             1   10[BANK0 ] unsigned char 
  1501 ;;  centenas        1   12[BANK0 ] unsigned char 
  1502 ;;  decenas         1   11[BANK0 ] unsigned char 
  1503 ;;  residuo_unit    1    9[BANK0 ] unsigned char 
  1504 ;;  residuo_dec     1    8[BANK0 ] unsigned char 
  1505 ;;  residuo_cent    1    7[BANK0 ] unsigned char 
  1506 ;;  unidades        1    0        unsigned char 
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1511 ;; Tracked objects:
  1512 ;;		On entry : 0/0
  1513 ;;		On exit  : 0/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1516 ;;      Params:         0       1       0       0       0
  1517 ;;      Locals:         0       6       0       0       0
  1518 ;;      Temps:          0       2       0       0       0
  1519 ;;      Totals:         0       9       0       0       0
  1520 ;;Total ram usage:        9 bytes
  1521 ;; Hardware stack levels used: 1
  1522 ;; Hardware stack levels required when called: 3
  1523 ;; This function calls:
  1524 ;;		___awdiv
  1525 ;;		___awmod
  1526 ;; This function is called by:
  1527 ;;		_output_LCD
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531     0016                     _separar_digitos:	
  1532                           ;psect for function _separar_digitos
  1533                           
  1534                           
  1535                           ;incstack = 0
  1536                           ; Regs used in _separar_digitos: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1537                           ;separar_digitos@num stored from wreg
  1538     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0018  00AA               	movwf	separar_digitos@num
  1541     0019                     l1436:
  1542     0019  300A               	movlw	10
  1543     001A  00F3               	movwf	___awdiv@divisor
  1544     001B  3000               	movlw	0
  1545     001C  00F4               	movwf	___awdiv@divisor+1
  1546     001D  082A               	movf	separar_digitos@num,w
  1547     001E  00A5               	movwf	??_separar_digitos
  1548     001F  01A6               	clrf	??_separar_digitos+1
  1549     0020  0825               	movf	??_separar_digitos,w
  1550     0021  00F5               	movwf	___awdiv@dividend
  1551     0022  0826               	movf	??_separar_digitos+1,w
  1552     0023  00F6               	movwf	___awdiv@dividend+1
  1553     0024  120A  118A  20A1  120A  118A  	fcall	___awdiv
  1554     0029  0873               	movf	?___awdiv,w
  1555     002A  1283               	bcf	3,5	;RP0=0, select bank0
  1556     002B  1303               	bcf	3,6	;RP1=0, select bank0
  1557     002C  00AC               	movwf	separar_digitos@centenas
  1558     002D  300A               	movlw	10
  1559     002E  00F3               	movwf	___awmod@divisor
  1560     002F  3000               	movlw	0
  1561     0030  00F4               	movwf	___awmod@divisor+1
  1562     0031  082A               	movf	separar_digitos@num,w
  1563     0032  00A5               	movwf	??_separar_digitos
  1564     0033  01A6               	clrf	??_separar_digitos+1
  1565     0034  0825               	movf	??_separar_digitos,w
  1566     0035  00F5               	movwf	___awmod@dividend
  1567     0036  0826               	movf	??_separar_digitos+1,w
  1568     0037  00F6               	movwf	___awmod@dividend+1
  1569     0038  120A  118A  21C1  120A  118A  	fcall	___awmod
  1570     003D  0873               	movf	?___awmod,w
  1571     003E  1283               	bcf	3,5	;RP0=0, select bank0
  1572     003F  1303               	bcf	3,6	;RP1=0, select bank0
  1573     0040  00A7               	movwf	separar_digitos@residuo_cent
  1574     0041  300A               	movlw	10
  1575     0042  00F3               	movwf	___awdiv@divisor
  1576     0043  3000               	movlw	0
  1577     0044  00F4               	movwf	___awdiv@divisor+1
  1578     0045  082C               	movf	separar_digitos@centenas,w
  1579     0046  00A5               	movwf	??_separar_digitos
  1580     0047  01A6               	clrf	??_separar_digitos+1
  1581     0048  0825               	movf	??_separar_digitos,w
  1582     0049  00F5               	movwf	___awdiv@dividend
  1583     004A  0826               	movf	??_separar_digitos+1,w
  1584     004B  00F6               	movwf	___awdiv@dividend+1
  1585     004C  120A  118A  20A1  120A  118A  	fcall	___awdiv
  1586     0051  0873               	movf	?___awdiv,w
  1587     0052  1283               	bcf	3,5	;RP0=0, select bank0
  1588     0053  1303               	bcf	3,6	;RP1=0, select bank0
  1589     0054  00AB               	movwf	separar_digitos@decenas
  1590     0055  300A               	movlw	10
  1591     0056  00F3               	movwf	___awmod@divisor
  1592     0057  3000               	movlw	0
  1593     0058  00F4               	movwf	___awmod@divisor+1
  1594     0059  082C               	movf	separar_digitos@centenas,w
  1595     005A  00A5               	movwf	??_separar_digitos
  1596     005B  01A6               	clrf	??_separar_digitos+1
  1597     005C  0825               	movf	??_separar_digitos,w
  1598     005D  00F5               	movwf	___awmod@dividend
  1599     005E  0826               	movf	??_separar_digitos+1,w
  1600     005F  00F6               	movwf	___awmod@dividend+1
  1601     0060  120A  118A  21C1  120A  118A  	fcall	___awmod
  1602     0065  0873               	movf	?___awmod,w
  1603     0066  1283               	bcf	3,5	;RP0=0, select bank0
  1604     0067  1303               	bcf	3,6	;RP1=0, select bank0
  1605     0068  00A8               	movwf	separar_digitos@residuo_dec
  1606     0069  300A               	movlw	10
  1607     006A  00F3               	movwf	___awdiv@divisor
  1608     006B  3000               	movlw	0
  1609     006C  00F4               	movwf	___awdiv@divisor+1
  1610     006D  082B               	movf	separar_digitos@decenas,w
  1611     006E  00A5               	movwf	??_separar_digitos
  1612     006F  01A6               	clrf	??_separar_digitos+1
  1613     0070  0825               	movf	??_separar_digitos,w
  1614     0071  00F5               	movwf	___awdiv@dividend
  1615     0072  0826               	movf	??_separar_digitos+1,w
  1616     0073  00F6               	movwf	___awdiv@dividend+1
  1617     0074  120A  118A  20A1  120A  118A  	fcall	___awdiv
  1618     0079  300A               	movlw	10
  1619     007A  00F3               	movwf	___awmod@divisor
  1620     007B  3000               	movlw	0
  1621     007C  00F4               	movwf	___awmod@divisor+1
  1622     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1623     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1624     007F  082B               	movf	separar_digitos@decenas,w
  1625     0080  00A5               	movwf	??_separar_digitos
  1626     0081  01A6               	clrf	??_separar_digitos+1
  1627     0082  0825               	movf	??_separar_digitos,w
  1628     0083  00F5               	movwf	___awmod@dividend
  1629     0084  0826               	movf	??_separar_digitos+1,w
  1630     0085  00F6               	movwf	___awmod@dividend+1
  1631     0086  120A  118A  21C1  120A  118A  	fcall	___awmod
  1632     008B  0873               	movf	?___awmod,w
  1633     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1634     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1635     008E  00A9               	movwf	separar_digitos@residuo_unit
  1636     008F                     l1438:
  1637     008F  0824               	movf	separar_digitos@dig,w
  1638     0090  3E02               	addlw	2
  1639     0091  0084               	movwf	4
  1640     0092  0827               	movf	separar_digitos@residuo_cent,w
  1641     0093  3E30               	addlw	48
  1642     0094  1383               	bcf	3,7	;select IRP bank0
  1643     0095  0080               	movwf	0
  1644     0096                     l1440:
  1645     0096  0A24               	incf	separar_digitos@dig,w
  1646     0097  0084               	movwf	4
  1647     0098  0828               	movf	separar_digitos@residuo_dec,w
  1648     0099  3E30               	addlw	48
  1649     009A  0080               	movwf	0
  1650     009B                     l1442:
  1651     009B  0824               	movf	separar_digitos@dig,w
  1652     009C  0084               	movwf	4
  1653     009D  0829               	movf	separar_digitos@residuo_unit,w
  1654     009E  3E30               	addlw	48
  1655     009F  0080               	movwf	0
  1656     00A0                     l97:
  1657     00A0  0008               	return
  1658     00A1                     __end_of_separar_digitos:
  1659                           
  1660                           	psect	text7
  1661     01C1                     __ptext7:	
  1662 ;; *************** function ___awmod *****************
  1663 ;; Defined at:
  1664 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  divisor         2    3[COMMON] int 
  1667 ;;  dividend        2    5[COMMON] int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  sign            1    8[COMMON] unsigned char 
  1670 ;;  counter         1    7[COMMON] unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  2    3[COMMON] int 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, btemp+1
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1680 ;;      Params:         4       0       0       0       0
  1681 ;;      Locals:         2       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0
  1683 ;;      Totals:         6       0       0       0       0
  1684 ;;Total ram usage:        6 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 2
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_separar_digitos
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694     01C1                     ___awmod:	
  1695                           ;psect for function ___awmod
  1696                           
  1697     01C1                     l1194:	
  1698                           ;incstack = 0
  1699                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1700                           
  1701     01C1  01F8               	clrf	___awmod@sign
  1702     01C2                     l1196:
  1703     01C2  1FF6               	btfss	___awmod@dividend+1,7
  1704     01C3  29C5               	goto	u581
  1705     01C4  29C6               	goto	u580
  1706     01C5                     u581:
  1707     01C5  29CD               	goto	l1202
  1708     01C6                     u580:
  1709     01C6                     l1198:
  1710     01C6  09F5               	comf	___awmod@dividend,f
  1711     01C7  09F6               	comf	___awmod@dividend+1,f
  1712     01C8  0AF5               	incf	___awmod@dividend,f
  1713     01C9  1903               	skipnz
  1714     01CA  0AF6               	incf	___awmod@dividend+1,f
  1715     01CB                     l1200:
  1716     01CB  01F8               	clrf	___awmod@sign
  1717     01CC  0AF8               	incf	___awmod@sign,f
  1718     01CD                     l1202:
  1719     01CD  1FF4               	btfss	___awmod@divisor+1,7
  1720     01CE  29D0               	goto	u591
  1721     01CF  29D1               	goto	u590
  1722     01D0                     u591:
  1723     01D0  29D6               	goto	l1206
  1724     01D1                     u590:
  1725     01D1                     l1204:
  1726     01D1  09F3               	comf	___awmod@divisor,f
  1727     01D2  09F4               	comf	___awmod@divisor+1,f
  1728     01D3  0AF3               	incf	___awmod@divisor,f
  1729     01D4  1903               	skipnz
  1730     01D5  0AF4               	incf	___awmod@divisor+1,f
  1731     01D6                     l1206:
  1732     01D6  0873               	movf	___awmod@divisor,w
  1733     01D7  0474               	iorwf	___awmod@divisor+1,w
  1734     01D8  1903               	btfsc	3,2
  1735     01D9  29DB               	goto	u601
  1736     01DA  29DC               	goto	u600
  1737     01DB                     u601:
  1738     01DB  2A0B               	goto	l1224
  1739     01DC                     u600:
  1740     01DC                     l1208:
  1741     01DC  01F7               	clrf	___awmod@counter
  1742     01DD  0AF7               	incf	___awmod@counter,f
  1743     01DE  29EA               	goto	l1214
  1744     01DF                     l1210:
  1745     01DF  3001               	movlw	1
  1746     01E0                     u615:
  1747     01E0  1003               	clrc
  1748     01E1  0DF3               	rlf	___awmod@divisor,f
  1749     01E2  0DF4               	rlf	___awmod@divisor+1,f
  1750     01E3  3EFF               	addlw	-1
  1751     01E4  1D03               	skipz
  1752     01E5  29E0               	goto	u615
  1753     01E6                     l1212:
  1754     01E6  3001               	movlw	1
  1755     01E7  00FF               	movwf	btemp+1
  1756     01E8  087F               	movf	btemp+1,w
  1757     01E9  07F7               	addwf	___awmod@counter,f
  1758     01EA                     l1214:
  1759     01EA  1FF4               	btfss	___awmod@divisor+1,7
  1760     01EB  29ED               	goto	u621
  1761     01EC  29EE               	goto	u620
  1762     01ED                     u621:
  1763     01ED  29DF               	goto	l1210
  1764     01EE                     u620:
  1765     01EE                     l1216:
  1766     01EE  0874               	movf	___awmod@divisor+1,w
  1767     01EF  0276               	subwf	___awmod@dividend+1,w
  1768     01F0  1D03               	skipz
  1769     01F1  29F4               	goto	u635
  1770     01F2  0873               	movf	___awmod@divisor,w
  1771     01F3  0275               	subwf	___awmod@dividend,w
  1772     01F4                     u635:
  1773     01F4  1C03               	skipc
  1774     01F5  29F7               	goto	u631
  1775     01F6  29F8               	goto	u630
  1776     01F7                     u631:
  1777     01F7  29FE               	goto	l1220
  1778     01F8                     u630:
  1779     01F8                     l1218:
  1780     01F8  0873               	movf	___awmod@divisor,w
  1781     01F9  02F5               	subwf	___awmod@dividend,f
  1782     01FA  0874               	movf	___awmod@divisor+1,w
  1783     01FB  1C03               	skipc
  1784     01FC  03F6               	decf	___awmod@dividend+1,f
  1785     01FD  02F6               	subwf	___awmod@dividend+1,f
  1786     01FE                     l1220:
  1787     01FE  3001               	movlw	1
  1788     01FF                     u645:
  1789     01FF  1003               	clrc
  1790     0200  0CF4               	rrf	___awmod@divisor+1,f
  1791     0201  0CF3               	rrf	___awmod@divisor,f
  1792     0202  3EFF               	addlw	-1
  1793     0203  1D03               	skipz
  1794     0204  29FF               	goto	u645
  1795     0205                     l1222:
  1796     0205  3001               	movlw	1
  1797     0206  02F7               	subwf	___awmod@counter,f
  1798     0207  1D03               	btfss	3,2
  1799     0208  2A0A               	goto	u651
  1800     0209  2A0B               	goto	u650
  1801     020A                     u651:
  1802     020A  29EE               	goto	l1216
  1803     020B                     u650:
  1804     020B                     l1224:
  1805     020B  0878               	movf	___awmod@sign,w
  1806     020C  1903               	btfsc	3,2
  1807     020D  2A0F               	goto	u661
  1808     020E  2A10               	goto	u660
  1809     020F                     u661:
  1810     020F  2A15               	goto	l1228
  1811     0210                     u660:
  1812     0210                     l1226:
  1813     0210  09F5               	comf	___awmod@dividend,f
  1814     0211  09F6               	comf	___awmod@dividend+1,f
  1815     0212  0AF5               	incf	___awmod@dividend,f
  1816     0213  1903               	skipnz
  1817     0214  0AF6               	incf	___awmod@dividend+1,f
  1818     0215                     l1228:
  1819     0215  0876               	movf	___awmod@dividend+1,w
  1820     0216  00F4               	movwf	?___awmod+1
  1821     0217  0875               	movf	___awmod@dividend,w
  1822     0218  00F3               	movwf	?___awmod
  1823     0219                     l454:
  1824     0219  0008               	return
  1825     021A                     __end_of___awmod:
  1826                           
  1827                           	psect	text8
  1828     00A1                     __ptext8:	
  1829 ;; *************** function ___awdiv *****************
  1830 ;; Defined at:
  1831 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  divisor         2    3[COMMON] int 
  1834 ;;  dividend        2    5[COMMON] int 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  quotient        2    2[BANK0 ] int 
  1837 ;;  sign            1    1[BANK0 ] unsigned char 
  1838 ;;  counter         1    0[BANK0 ] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  2    3[COMMON] int 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0, btemp+1
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         4       0       0       0       0
  1849 ;;      Locals:         0       4       0       0       0
  1850 ;;      Temps:          0       0       0       0       0
  1851 ;;      Totals:         4       4       0       0       0
  1852 ;;Total ram usage:        8 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 2
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_separar_digitos
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862     00A1                     ___awdiv:	
  1863                           ;psect for function ___awdiv
  1864                           
  1865     00A1                     l1392:	
  1866                           ;incstack = 0
  1867                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1868                           
  1869     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1870     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1871     00A3  01A1               	clrf	___awdiv@sign
  1872     00A4                     l1394:
  1873     00A4  1FF4               	btfss	___awdiv@divisor+1,7
  1874     00A5  28A7               	goto	u811
  1875     00A6  28A8               	goto	u810
  1876     00A7                     u811:
  1877     00A7  28AF               	goto	l1400
  1878     00A8                     u810:
  1879     00A8                     l1396:
  1880     00A8  09F3               	comf	___awdiv@divisor,f
  1881     00A9  09F4               	comf	___awdiv@divisor+1,f
  1882     00AA  0AF3               	incf	___awdiv@divisor,f
  1883     00AB  1903               	skipnz
  1884     00AC  0AF4               	incf	___awdiv@divisor+1,f
  1885     00AD                     l1398:
  1886     00AD  01A1               	clrf	___awdiv@sign
  1887     00AE  0AA1               	incf	___awdiv@sign,f
  1888     00AF                     l1400:
  1889     00AF  1FF6               	btfss	___awdiv@dividend+1,7
  1890     00B0  28B2               	goto	u821
  1891     00B1  28B3               	goto	u820
  1892     00B2                     u821:
  1893     00B2  28BC               	goto	l1406
  1894     00B3                     u820:
  1895     00B3                     l1402:
  1896     00B3  09F5               	comf	___awdiv@dividend,f
  1897     00B4  09F6               	comf	___awdiv@dividend+1,f
  1898     00B5  0AF5               	incf	___awdiv@dividend,f
  1899     00B6  1903               	skipnz
  1900     00B7  0AF6               	incf	___awdiv@dividend+1,f
  1901     00B8                     l1404:
  1902     00B8  3001               	movlw	1
  1903     00B9  00FF               	movwf	btemp+1
  1904     00BA  087F               	movf	btemp+1,w
  1905     00BB  06A1               	xorwf	___awdiv@sign,f
  1906     00BC                     l1406:
  1907     00BC  01A2               	clrf	___awdiv@quotient
  1908     00BD  01A3               	clrf	___awdiv@quotient+1
  1909     00BE                     l1408:
  1910     00BE  0873               	movf	___awdiv@divisor,w
  1911     00BF  0474               	iorwf	___awdiv@divisor+1,w
  1912     00C0  1903               	btfsc	3,2
  1913     00C1  28C3               	goto	u831
  1914     00C2  28C4               	goto	u830
  1915     00C3                     u831:
  1916     00C3  28FB               	goto	l1428
  1917     00C4                     u830:
  1918     00C4                     l1410:
  1919     00C4  01A0               	clrf	___awdiv@counter
  1920     00C5  0AA0               	incf	___awdiv@counter,f
  1921     00C6  28D2               	goto	l1416
  1922     00C7                     l1412:
  1923     00C7  3001               	movlw	1
  1924     00C8                     u845:
  1925     00C8  1003               	clrc
  1926     00C9  0DF3               	rlf	___awdiv@divisor,f
  1927     00CA  0DF4               	rlf	___awdiv@divisor+1,f
  1928     00CB  3EFF               	addlw	-1
  1929     00CC  1D03               	skipz
  1930     00CD  28C8               	goto	u845
  1931     00CE                     l1414:
  1932     00CE  3001               	movlw	1
  1933     00CF  00FF               	movwf	btemp+1
  1934     00D0  087F               	movf	btemp+1,w
  1935     00D1  07A0               	addwf	___awdiv@counter,f
  1936     00D2                     l1416:
  1937     00D2  1FF4               	btfss	___awdiv@divisor+1,7
  1938     00D3  28D5               	goto	u851
  1939     00D4  28D6               	goto	u850
  1940     00D5                     u851:
  1941     00D5  28C7               	goto	l1412
  1942     00D6                     u850:
  1943     00D6                     l1418:
  1944     00D6  3001               	movlw	1
  1945     00D7                     u865:
  1946     00D7  1003               	clrc
  1947     00D8  0DA2               	rlf	___awdiv@quotient,f
  1948     00D9  0DA3               	rlf	___awdiv@quotient+1,f
  1949     00DA  3EFF               	addlw	-1
  1950     00DB  1D03               	skipz
  1951     00DC  28D7               	goto	u865
  1952     00DD  0874               	movf	___awdiv@divisor+1,w
  1953     00DE  0276               	subwf	___awdiv@dividend+1,w
  1954     00DF  1D03               	skipz
  1955     00E0  28E3               	goto	u875
  1956     00E1  0873               	movf	___awdiv@divisor,w
  1957     00E2  0275               	subwf	___awdiv@dividend,w
  1958     00E3                     u875:
  1959     00E3  1C03               	skipc
  1960     00E4  28E6               	goto	u871
  1961     00E5  28E7               	goto	u870
  1962     00E6                     u871:
  1963     00E6  28EE               	goto	l1424
  1964     00E7                     u870:
  1965     00E7                     l1420:
  1966     00E7  0873               	movf	___awdiv@divisor,w
  1967     00E8  02F5               	subwf	___awdiv@dividend,f
  1968     00E9  0874               	movf	___awdiv@divisor+1,w
  1969     00EA  1C03               	skipc
  1970     00EB  03F6               	decf	___awdiv@dividend+1,f
  1971     00EC  02F6               	subwf	___awdiv@dividend+1,f
  1972     00ED                     l1422:
  1973     00ED  1422               	bsf	___awdiv@quotient,0
  1974     00EE                     l1424:
  1975     00EE  3001               	movlw	1
  1976     00EF                     u885:
  1977     00EF  1003               	clrc
  1978     00F0  0CF4               	rrf	___awdiv@divisor+1,f
  1979     00F1  0CF3               	rrf	___awdiv@divisor,f
  1980     00F2  3EFF               	addlw	-1
  1981     00F3  1D03               	skipz
  1982     00F4  28EF               	goto	u885
  1983     00F5                     l1426:
  1984     00F5  3001               	movlw	1
  1985     00F6  02A0               	subwf	___awdiv@counter,f
  1986     00F7  1D03               	btfss	3,2
  1987     00F8  28FA               	goto	u891
  1988     00F9  28FB               	goto	u890
  1989     00FA                     u891:
  1990     00FA  28D6               	goto	l1418
  1991     00FB                     u890:
  1992     00FB                     l1428:
  1993     00FB  0821               	movf	___awdiv@sign,w
  1994     00FC  1903               	btfsc	3,2
  1995     00FD  28FF               	goto	u901
  1996     00FE  2900               	goto	u900
  1997     00FF                     u901:
  1998     00FF  2905               	goto	l1432
  1999     0100                     u900:
  2000     0100                     l1430:
  2001     0100  09A2               	comf	___awdiv@quotient,f
  2002     0101  09A3               	comf	___awdiv@quotient+1,f
  2003     0102  0AA2               	incf	___awdiv@quotient,f
  2004     0103  1903               	skipnz
  2005     0104  0AA3               	incf	___awdiv@quotient+1,f
  2006     0105                     l1432:
  2007     0105  0823               	movf	___awdiv@quotient+1,w
  2008     0106  00F4               	movwf	?___awdiv+1
  2009     0107  0822               	movf	___awdiv@quotient,w
  2010     0108  00F3               	movwf	?___awdiv
  2011     0109                     l441:
  2012     0109  0008               	return
  2013     010A                     __end_of___awdiv:
  2014                           
  2015                           	psect	text9
  2016     0266                     __ptext9:	
  2017 ;; *************** function _Lcd_Write_String *****************
  2018 ;; Defined at:
  2019 ;;		line 98 in file "LCD.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  a               2    8[COMMON] PTR unsigned char 
  2022 ;;		 -> output_LCD@decimal(3), STR_1(6), 
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  i               2    3[BANK0 ] int 
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2034 ;;      Params:         2       0       0       0       0
  2035 ;;      Locals:         0       2       0       0       0
  2036 ;;      Temps:          0       3       0       0       0
  2037 ;;      Totals:         2       5       0       0       0
  2038 ;;Total ram usage:        7 bytes
  2039 ;; Hardware stack levels used: 1
  2040 ;; Hardware stack levels required when called: 4
  2041 ;; This function calls:
  2042 ;;		_Lcd_Write_Char
  2043 ;; This function is called by:
  2044 ;;		_output_LCD
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048     0266                     _Lcd_Write_String:	
  2049                           ;psect for function _Lcd_Write_String
  2050                           
  2051     0266                     l1286:	
  2052                           ;incstack = 0
  2053                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2054                           
  2055                           
  2056                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2057     0266  1283               	bcf	3,5	;RP0=0, select bank0
  2058     0267  1303               	bcf	3,6	;RP1=0, select bank0
  2059     0268  01A3               	clrf	Lcd_Write_String@i
  2060     0269  01A4               	clrf	Lcd_Write_String@i+1
  2061     026A  2A8F               	goto	l1292
  2062     026B                     l1288:
  2063                           
  2064                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2065     026B  0823               	movf	Lcd_Write_String@i,w
  2066     026C  0778               	addwf	Lcd_Write_String@a,w
  2067     026D  00A1               	movwf	??_Lcd_Write_String+1
  2068     026E  0879               	movf	Lcd_Write_String@a+1,w
  2069     026F  00A0               	movwf	??_Lcd_Write_String
  2070     0270  1803               	skipnc
  2071     0271  0AA0               	incf	??_Lcd_Write_String,f
  2072     0272  1FA3               	btfss	Lcd_Write_String@i,7
  2073     0273  2A75               	goto	u770
  2074     0274  03A0               	decf	??_Lcd_Write_String,f
  2075     0275                     u770:
  2076     0275  1283               	bcf	3,5	;RP0=0, select bank0
  2077     0276  1303               	bcf	3,6	;RP1=0, select bank0
  2078     0277  0820               	movf	??_Lcd_Write_String,w
  2079     0278  00A2               	movwf	??_Lcd_Write_String+2
  2080     0279  0822               	movf	??_Lcd_Write_String+2,w
  2081     027A  00FF               	movwf	btemp+1
  2082     027B  0821               	movf	??_Lcd_Write_String+1,w
  2083     027C  0084               	movwf	4
  2084     027D  120A  118A  23CB  120A  118A  	fcall	stringtab
  2085     0282  120A  118A  22F1  120A  118A  	fcall	_Lcd_Write_Char
  2086     0287                     l1290:
  2087     0287  3001               	movlw	1
  2088     0288  1283               	bcf	3,5	;RP0=0, select bank0
  2089     0289  1303               	bcf	3,6	;RP1=0, select bank0
  2090     028A  07A3               	addwf	Lcd_Write_String@i,f
  2091     028B  1803               	skipnc
  2092     028C  0AA4               	incf	Lcd_Write_String@i+1,f
  2093     028D  3000               	movlw	0
  2094     028E  07A4               	addwf	Lcd_Write_String@i+1,f
  2095     028F                     l1292:
  2096     028F  0823               	movf	Lcd_Write_String@i,w
  2097     0290  0778               	addwf	Lcd_Write_String@a,w
  2098     0291  00A1               	movwf	??_Lcd_Write_String+1
  2099     0292  0879               	movf	Lcd_Write_String@a+1,w
  2100     0293  00A0               	movwf	??_Lcd_Write_String
  2101     0294  1803               	skipnc
  2102     0295  0AA0               	incf	??_Lcd_Write_String,f
  2103     0296  1FA3               	btfss	Lcd_Write_String@i,7
  2104     0297  2A99               	goto	u780
  2105     0298  03A0               	decf	??_Lcd_Write_String,f
  2106     0299                     u780:
  2107     0299  1283               	bcf	3,5	;RP0=0, select bank0
  2108     029A  1303               	bcf	3,6	;RP1=0, select bank0
  2109     029B  0820               	movf	??_Lcd_Write_String,w
  2110     029C  00A2               	movwf	??_Lcd_Write_String+2
  2111     029D  0822               	movf	??_Lcd_Write_String+2,w
  2112     029E  00FF               	movwf	btemp+1
  2113     029F  0821               	movf	??_Lcd_Write_String+1,w
  2114     02A0  0084               	movwf	4
  2115     02A1  120A  118A  23CB  120A  118A  	fcall	stringtab
  2116     02A6  3A00               	xorlw	0
  2117     02A7  1D03               	skipz
  2118     02A8  2AAA               	goto	u791
  2119     02A9  2AAB               	goto	u790
  2120     02AA                     u791:
  2121     02AA  2A6B               	goto	l1288
  2122     02AB                     u790:
  2123     02AB                     l196:
  2124     02AB  0008               	return
  2125     02AC                     __end_of_Lcd_Write_String:
  2126                           
  2127                           	psect	text10
  2128     02F1                     __ptext10:	
  2129 ;; *************** function _Lcd_Write_Char *****************
  2130 ;; Defined at:
  2131 ;;		line 83 in file "LCD.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  a               1    wreg     unsigned char 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  a               1    7[COMMON] unsigned char 
  2136 ;;  y               1    6[COMMON] unsigned char 
  2137 ;;  temp            1    5[COMMON] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      void 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       0       0       0       0
  2148 ;;      Locals:         3       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0
  2150 ;;      Totals:         4       0       0       0       0
  2151 ;;Total ram usage:        4 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 3
  2154 ;; This function calls:
  2155 ;;		_Lcd_Port
  2156 ;; This function is called by:
  2157 ;;		_Lcd_Write_String
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161     02F1                     _Lcd_Write_Char:	
  2162                           ;psect for function _Lcd_Write_Char
  2163                           
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2167                           ;Lcd_Write_Char@a stored from wreg
  2168     02F1  00F7               	movwf	Lcd_Write_Char@a
  2169     02F2                     l1130:
  2170                           
  2171                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  2172     02F2  0877               	movf	Lcd_Write_Char@a,w
  2173     02F3  390F               	andlw	15
  2174     02F4  00F5               	movwf	Lcd_Write_Char@temp
  2175                           
  2176                           ;LCD.c: 86:     y = a & 0xF0;
  2177     02F5  0877               	movf	Lcd_Write_Char@a,w
  2178     02F6  39F0               	andlw	240
  2179     02F7  00F6               	movwf	Lcd_Write_Char@y
  2180     02F8                     l1132:
  2181                           
  2182                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  2183     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2184     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2185     02FA  1508               	bsf	8,2	;volatile
  2186     02FB                     l1134:
  2187                           
  2188                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  2189     02FB  0876               	movf	Lcd_Write_Char@y,w
  2190     02FC  00F4               	movwf	??_Lcd_Write_Char
  2191     02FD  3004               	movlw	4
  2192     02FE                     u475:
  2193     02FE  1003               	clrc
  2194     02FF  0CF4               	rrf	??_Lcd_Write_Char,f
  2195     0300  3EFF               	addlw	-1
  2196     0301  1D03               	skipz
  2197     0302  2AFE               	goto	u475
  2198     0303  0874               	movf	??_Lcd_Write_Char,w
  2199     0304  120A  118A  2373  120A  118A  	fcall	_Lcd_Port
  2200     0309                     l1136:
  2201                           
  2202                           ;LCD.c: 89:     RD3 = 1;
  2203     0309  1283               	bcf	3,5	;RP0=0, select bank0
  2204     030A  1303               	bcf	3,6	;RP1=0, select bank0
  2205     030B  1588               	bsf	8,3	;volatile
  2206     030C                     l1138:
  2207                           
  2208                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2209     030C  301A               	movlw	26
  2210     030D  00F4               	movwf	??_Lcd_Write_Char
  2211     030E                     u957:
  2212     030E  0BF4               	decfsz	??_Lcd_Write_Char,f
  2213     030F  2B0E               	goto	u957
  2214     0310  0000               	nop
  2215     0311                     l1140:
  2216                           
  2217                           ;LCD.c: 91:     RD3 = 0;
  2218     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2219     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2220     0313  1188               	bcf	8,3	;volatile
  2221     0314                     l1142:
  2222                           
  2223                           ;LCD.c: 92:     Lcd_Port(temp);
  2224     0314  0875               	movf	Lcd_Write_Char@temp,w
  2225     0315  120A  118A  2373  120A  118A  	fcall	_Lcd_Port
  2226     031A                     l1144:
  2227                           
  2228                           ;LCD.c: 93:     RD3 = 1;
  2229     031A  1283               	bcf	3,5	;RP0=0, select bank0
  2230     031B  1303               	bcf	3,6	;RP1=0, select bank0
  2231     031C  1588               	bsf	8,3	;volatile
  2232     031D                     l1146:
  2233                           
  2234                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2235     031D  301A               	movlw	26
  2236     031E  00F4               	movwf	??_Lcd_Write_Char
  2237     031F                     u967:
  2238     031F  0BF4               	decfsz	??_Lcd_Write_Char,f
  2239     0320  2B1F               	goto	u967
  2240     0321  0000               	nop
  2241     0322                     l1148:
  2242                           
  2243                           ;LCD.c: 95:     RD3 = 0;
  2244     0322  1283               	bcf	3,5	;RP0=0, select bank0
  2245     0323  1303               	bcf	3,6	;RP1=0, select bank0
  2246     0324  1188               	bcf	8,3	;volatile
  2247     0325                     l190:
  2248     0325  0008               	return
  2249     0326                     __end_of_Lcd_Write_Char:
  2250                           
  2251                           	psect	text11
  2252     021A                     __ptext11:	
  2253 ;; *************** function _Lcd_Set_Cursor *****************
  2254 ;; Defined at:
  2255 ;;		line 48 in file "LCD.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  a               1    wreg     unsigned char 
  2258 ;;  b               1    7[COMMON] unsigned char 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  a               1    0[BANK0 ] unsigned char 
  2261 ;;  temp            1    3[BANK0 ] unsigned char 
  2262 ;;  y               1    2[BANK0 ] unsigned char 
  2263 ;;  z               1    1[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         1       0       0       0       0
  2274 ;;      Locals:         0       4       0       0       0
  2275 ;;      Temps:          1       0       0       0       0
  2276 ;;      Totals:         2       4       0       0       0
  2277 ;;Total ram usage:        6 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 4
  2280 ;; This function calls:
  2281 ;;		_Lcd_Cmd
  2282 ;; This function is called by:
  2283 ;;		_output_LCD
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287     021A                     _Lcd_Set_Cursor:	
  2288                           ;psect for function _Lcd_Set_Cursor
  2289                           
  2290                           
  2291                           ;incstack = 0
  2292                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2293                           ;Lcd_Set_Cursor@a stored from wreg
  2294     021A  1283               	bcf	3,5	;RP0=0, select bank0
  2295     021B  1303               	bcf	3,6	;RP1=0, select bank0
  2296     021C  00A0               	movwf	Lcd_Set_Cursor@a
  2297     021D                     l1266:
  2298                           
  2299                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  2300     021D  0320               	decf	Lcd_Set_Cursor@a,w
  2301     021E  1D03               	btfss	3,2
  2302     021F  2A21               	goto	u731
  2303     0220  2A22               	goto	u730
  2304     0221                     u731:
  2305     0221  2A41               	goto	l1276
  2306     0222                     u730:
  2307     0222                     l1268:
  2308                           
  2309                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  2310     0222  0877               	movf	Lcd_Set_Cursor@b,w
  2311     0223  3E7F               	addlw	127
  2312     0224  00A3               	movwf	Lcd_Set_Cursor@temp
  2313                           
  2314                           ;LCD.c: 52:         z = temp >> 4;
  2315     0225  0823               	movf	Lcd_Set_Cursor@temp,w
  2316     0226  00F8               	movwf	??_Lcd_Set_Cursor
  2317     0227  3004               	movlw	4
  2318     0228                     u745:
  2319     0228  1003               	clrc
  2320     0229  0CF8               	rrf	??_Lcd_Set_Cursor,f
  2321     022A  3EFF               	addlw	-1
  2322     022B  1D03               	skipz
  2323     022C  2A28               	goto	u745
  2324     022D  0878               	movf	??_Lcd_Set_Cursor,w
  2325     022E  00A1               	movwf	Lcd_Set_Cursor@z
  2326     022F                     l1270:
  2327                           
  2328                           ;LCD.c: 53:         y = temp & 0x0F;
  2329     022F  0823               	movf	Lcd_Set_Cursor@temp,w
  2330     0230  390F               	andlw	15
  2331     0231  00A2               	movwf	Lcd_Set_Cursor@y
  2332     0232                     l1272:
  2333                           
  2334                           ;LCD.c: 54:         Lcd_Cmd(z);
  2335     0232  0821               	movf	Lcd_Set_Cursor@z,w
  2336     0233  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2337     0238                     l1274:
  2338                           
  2339                           ;LCD.c: 55:         Lcd_Cmd(y);
  2340     0238  1283               	bcf	3,5	;RP0=0, select bank0
  2341     0239  1303               	bcf	3,6	;RP1=0, select bank0
  2342     023A  0822               	movf	Lcd_Set_Cursor@y,w
  2343     023B  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2344                           
  2345                           ;LCD.c: 56:     } else if (a == 2) {
  2346     0240  2A65               	goto	l184
  2347     0241                     l1276:
  2348     0241  3002               	movlw	2
  2349     0242  0620               	xorwf	Lcd_Set_Cursor@a,w
  2350     0243  1D03               	btfss	3,2
  2351     0244  2A46               	goto	u751
  2352     0245  2A47               	goto	u750
  2353     0246                     u751:
  2354     0246  2A65               	goto	l184
  2355     0247                     u750:
  2356     0247                     l1278:
  2357                           
  2358                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  2359     0247  0877               	movf	Lcd_Set_Cursor@b,w
  2360     0248  3EBF               	addlw	191
  2361     0249  00A3               	movwf	Lcd_Set_Cursor@temp
  2362                           
  2363                           ;LCD.c: 58:         z = temp >> 4;
  2364     024A  0823               	movf	Lcd_Set_Cursor@temp,w
  2365     024B  00F8               	movwf	??_Lcd_Set_Cursor
  2366     024C  3004               	movlw	4
  2367     024D                     u765:
  2368     024D  1003               	clrc
  2369     024E  0CF8               	rrf	??_Lcd_Set_Cursor,f
  2370     024F  3EFF               	addlw	-1
  2371     0250  1D03               	skipz
  2372     0251  2A4D               	goto	u765
  2373     0252  0878               	movf	??_Lcd_Set_Cursor,w
  2374     0253  00A1               	movwf	Lcd_Set_Cursor@z
  2375     0254                     l1280:
  2376                           
  2377                           ;LCD.c: 59:         y = temp & 0x0F;
  2378     0254  0823               	movf	Lcd_Set_Cursor@temp,w
  2379     0255  390F               	andlw	15
  2380     0256  00A2               	movwf	Lcd_Set_Cursor@y
  2381     0257                     l1282:
  2382                           
  2383                           ;LCD.c: 60:         Lcd_Cmd(z);
  2384     0257  0821               	movf	Lcd_Set_Cursor@z,w
  2385     0258  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2386     025D                     l1284:
  2387                           
  2388                           ;LCD.c: 61:         Lcd_Cmd(y);
  2389     025D  1283               	bcf	3,5	;RP0=0, select bank0
  2390     025E  1303               	bcf	3,6	;RP1=0, select bank0
  2391     025F  0822               	movf	Lcd_Set_Cursor@y,w
  2392     0260  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2393     0265                     l184:
  2394     0265  0008               	return
  2395     0266                     __end_of_Lcd_Set_Cursor:
  2396                           
  2397                           	psect	text12
  2398     0413                     __ptext12:	
  2399 ;; *************** function _Lcd_Clear *****************
  2400 ;; Defined at:
  2401 ;;		line 43 in file "LCD.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2415 ;;      Params:         0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 4
  2422 ;; This function calls:
  2423 ;;		_Lcd_Cmd
  2424 ;; This function is called by:
  2425 ;;		_output_LCD
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     0413                     _Lcd_Clear:	
  2430                           ;psect for function _Lcd_Clear
  2431                           
  2432     0413                     l1264:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2435                           
  2436                           
  2437                           ;LCD.c: 44:     Lcd_Cmd(0);
  2438     0413  3000               	movlw	0
  2439     0414  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2440                           
  2441                           ;LCD.c: 45:     Lcd_Cmd(1);
  2442     0419  3001               	movlw	1
  2443     041A  120A  118A  23B1  120A  118A  	fcall	_Lcd_Cmd
  2444     041F                     l178:
  2445     041F  0008               	return
  2446     0420                     __end_of_Lcd_Clear:
  2447                           
  2448                           	psect	text13
  2449     03B1                     __ptext13:	
  2450 ;; *************** function _Lcd_Cmd *****************
  2451 ;; Defined at:
  2452 ;;		line 35 in file "LCD.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  a               1    wreg     unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  a               1    6[COMMON] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2466 ;;      Params:         0       0       0       0       0
  2467 ;;      Locals:         1       0       0       0       0
  2468 ;;      Temps:          2       0       0       0       0
  2469 ;;      Totals:         3       0       0       0       0
  2470 ;;Total ram usage:        3 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 3
  2473 ;; This function calls:
  2474 ;;		_Lcd_Port
  2475 ;; This function is called by:
  2476 ;;		_Lcd_Clear
  2477 ;;		_Lcd_Set_Cursor
  2478 ;;		_Lcd_Init
  2479 ;;		_Lcd_Shift_Right
  2480 ;;		_Lcd_Shift_Left
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484     03B1                     _Lcd_Cmd:	
  2485                           ;psect for function _Lcd_Cmd
  2486                           
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2490                           ;Lcd_Cmd@a stored from wreg
  2491     03B1  00F6               	movwf	Lcd_Cmd@a
  2492     03B2                     l1120:
  2493                           
  2494                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  2495     03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2496     03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2497     03B4  1108               	bcf	8,2	;volatile
  2498     03B5                     l1122:
  2499                           
  2500                           ;LCD.c: 37:     Lcd_Port(a);
  2501     03B5  0876               	movf	Lcd_Cmd@a,w
  2502     03B6  120A  118A  2373  120A  118A  	fcall	_Lcd_Port
  2503     03BB                     l1124:
  2504                           
  2505                           ;LCD.c: 38:     RD3 = 1;
  2506     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  2507     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  2508     03BD  1588               	bsf	8,3	;volatile
  2509     03BE                     l1126:
  2510                           
  2511                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2512     03BE  300B               	movlw	11
  2513     03BF  00F5               	movwf	??_Lcd_Cmd+1
  2514     03C0  3062               	movlw	98
  2515     03C1  00F4               	movwf	??_Lcd_Cmd
  2516     03C2                     u977:
  2517     03C2  0BF4               	decfsz	??_Lcd_Cmd,f
  2518     03C3  2BC2               	goto	u977
  2519     03C4  0BF5               	decfsz	??_Lcd_Cmd+1,f
  2520     03C5  2BC2               	goto	u977
  2521     03C6  0000               	nop
  2522     03C7                     l1128:
  2523                           
  2524                           ;LCD.c: 40:     RD3 = 0;
  2525     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2526     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2527     03C9  1188               	bcf	8,3	;volatile
  2528     03CA                     l175:
  2529     03CA  0008               	return
  2530     03CB                     __end_of_Lcd_Cmd:
  2531                           
  2532                           	psect	text14
  2533     0373                     __ptext14:	
  2534 ;; *************** function _Lcd_Port *****************
  2535 ;; Defined at:
  2536 ;;		line 13 in file "LCD.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  a               1    wreg     unsigned char 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  a               1    3[COMMON] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2550 ;;      Params:         0       0       0       0       0
  2551 ;;      Locals:         1       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0
  2553 ;;      Totals:         1       0       0       0       0
  2554 ;;Total ram usage:        1 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 2
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_Lcd_Cmd
  2561 ;;		_Lcd_Init
  2562 ;;		_Lcd_Write_Char
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566     0373                     _Lcd_Port:	
  2567                           ;psect for function _Lcd_Port
  2568                           
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _Lcd_Port: [wreg]
  2572                           ;Lcd_Port@a stored from wreg
  2573     0373  00F3               	movwf	Lcd_Port@a
  2574     0374                     l1110:
  2575                           
  2576                           ;LCD.c: 14:     if (a & 1)
  2577     0374  1C73               	btfss	Lcd_Port@a,0
  2578     0375  2B77               	goto	u431
  2579     0376  2B78               	goto	u430
  2580     0377                     u431:
  2581     0377  2B7C               	goto	l164
  2582     0378                     u430:
  2583     0378                     l1112:
  2584                           
  2585                           ;LCD.c: 15:         RD4 = 1;
  2586     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2587     0379  1303               	bcf	3,6	;RP1=0, select bank0
  2588     037A  1608               	bsf	8,4	;volatile
  2589     037B  2B7F               	goto	l165
  2590     037C                     l164:	
  2591                           ;LCD.c: 16:     else
  2592                           
  2593                           
  2594                           ;LCD.c: 17:         RD4 = 0;
  2595     037C  1283               	bcf	3,5	;RP0=0, select bank0
  2596     037D  1303               	bcf	3,6	;RP1=0, select bank0
  2597     037E  1208               	bcf	8,4	;volatile
  2598     037F                     l165:
  2599                           
  2600                           ;LCD.c: 19:     if (a & 2)
  2601     037F  1CF3               	btfss	Lcd_Port@a,1
  2602     0380  2B82               	goto	u441
  2603     0381  2B83               	goto	u440
  2604     0382                     u441:
  2605     0382  2B85               	goto	l166
  2606     0383                     u440:
  2607     0383                     l1114:
  2608                           
  2609                           ;LCD.c: 20:         RD5 = 1;
  2610     0383  1688               	bsf	8,5	;volatile
  2611     0384  2B86               	goto	l167
  2612     0385                     l166:	
  2613                           ;LCD.c: 21:     else
  2614                           
  2615                           
  2616                           ;LCD.c: 22:         RD5 = 0;
  2617     0385  1288               	bcf	8,5	;volatile
  2618     0386                     l167:
  2619                           
  2620                           ;LCD.c: 24:     if (a & 4)
  2621     0386  1D73               	btfss	Lcd_Port@a,2
  2622     0387  2B89               	goto	u451
  2623     0388  2B8A               	goto	u450
  2624     0389                     u451:
  2625     0389  2B8C               	goto	l168
  2626     038A                     u450:
  2627     038A                     l1116:
  2628                           
  2629                           ;LCD.c: 25:         RD6 = 1;
  2630     038A  1708               	bsf	8,6	;volatile
  2631     038B  2B8D               	goto	l169
  2632     038C                     l168:	
  2633                           ;LCD.c: 26:     else
  2634                           
  2635                           
  2636                           ;LCD.c: 27:         RD6 = 0;
  2637     038C  1308               	bcf	8,6	;volatile
  2638     038D                     l169:
  2639                           
  2640                           ;LCD.c: 29:     if (a & 8)
  2641     038D  1DF3               	btfss	Lcd_Port@a,3
  2642     038E  2B90               	goto	u461
  2643     038F  2B91               	goto	u460
  2644     0390                     u461:
  2645     0390  2B93               	goto	l170
  2646     0391                     u460:
  2647     0391                     l1118:
  2648                           
  2649                           ;LCD.c: 30:         RD7 = 1;
  2650     0391  1788               	bsf	8,7	;volatile
  2651     0392  2B94               	goto	l172
  2652     0393                     l170:	
  2653                           ;LCD.c: 31:     else
  2654                           
  2655                           
  2656                           ;LCD.c: 32:         RD7 = 0;
  2657     0393  1388               	bcf	8,7	;volatile
  2658     0394                     l172:
  2659     0394  0008               	return
  2660     0395                     __end_of_Lcd_Port:
  2661                           
  2662                           	psect	text15
  2663     0405                     __ptext15:	
  2664 ;; *************** function _adc_read *****************
  2665 ;; Defined at:
  2666 ;;		line 42 in file "ADC_lib.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  2    3[COMMON] unsigned int 
  2673 ;; Registers used:
  2674 ;;		wreg
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2680 ;;      Params:         2       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0
  2683 ;;      Totals:         2       0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 2
  2687 ;; This function calls:
  2688 ;;		Nothing
  2689 ;; This function is called by:
  2690 ;;		_main
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694     0405                     _adc_read:	
  2695                           ;psect for function _adc_read
  2696                           
  2697     0405                     l1344:	
  2698                           ;incstack = 0
  2699                           ; Regs used in _adc_read: [wreg]
  2700                           
  2701                           
  2702                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  2703     0405  1283               	bcf	3,5	;RP0=0, select bank0
  2704     0406  1303               	bcf	3,6	;RP1=0, select bank0
  2705     0407  149F               	bsf	31,1	;volatile
  2706     0408                     l138:	
  2707                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  2708                           
  2709     0408  189F               	btfsc	31,1	;volatile
  2710     0409  2C0B               	goto	u801
  2711     040A  2C0C               	goto	u800
  2712     040B                     u801:
  2713     040B  2C08               	goto	l138
  2714     040C                     u800:
  2715     040C                     l1346:
  2716                           
  2717                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  2718     040C  081E               	movf	30,w	;volatile
  2719     040D  00F4               	movwf	?_adc_read+1
  2720     040E  1683               	bsf	3,5	;RP0=1, select bank1
  2721     040F  1303               	bcf	3,6	;RP1=0, select bank1
  2722     0410  081E               	movf	30,w	;volatile
  2723     0411  00F3               	movwf	?_adc_read
  2724     0412                     l141:
  2725     0412  0008               	return
  2726     0413                     __end_of_adc_read:
  2727                           
  2728                           	psect	text16
  2729     0395                     __ptext16:	
  2730 ;; *************** function _isr *****************
  2731 ;; Defined at:
  2732 ;;		line 51 in file "Prelab2.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;		None
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;		None
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         0       0       0       0       0
  2748 ;;      Temps:          3       0       0       0       0
  2749 ;;      Totals:         3       0       0       0       0
  2750 ;;Total ram usage:        3 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 1
  2753 ;; This function calls:
  2754 ;;		_ioc_portB
  2755 ;; This function is called by:
  2756 ;;		Interrupt level 1
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     0395                     _isr:	
  2761                           ;psect for function _isr
  2762                           
  2763     0395                     i1l1058:
  2764                           
  2765                           ;Prelab2.c: 52:     ANSELH= 0b00100000;
  2766     0395  1D0B               	btfss	11,2	;volatile
  2767     0396  2B98               	goto	u41_21
  2768     0397  2B99               	goto	u41_20
  2769     0398                     u41_21:
  2770     0398  2B9E               	goto	i1l1064
  2771     0399                     u41_20:
  2772     0399                     i1l1060:
  2773                           
  2774                           ;Prelab2.c: 54:     PORTA = 0;
  2775     0399  3032               	movlw	50
  2776     039A  1283               	bcf	3,5	;RP0=0, select bank0
  2777     039B  1303               	bcf	3,6	;RP1=0, select bank0
  2778     039C  0081               	movwf	1	;volatile
  2779     039D                     i1l1062:
  2780                           
  2781                           ;Prelab2.c: 55:     TRISB = 0;
  2782     039D  110B               	bcf	11,2	;volatile
  2783     039E                     i1l1064:
  2784                           
  2785                           ;Prelab2.c: 57:     TRISD = 0;
  2786     039E  1C0B               	btfss	11,0	;volatile
  2787     039F  2BA1               	goto	u42_21
  2788     03A0  2BA2               	goto	u42_20
  2789     03A1                     u42_21:
  2790     03A1  2BA8               	goto	i1l75
  2791     03A2                     u42_20:
  2792     03A2                     i1l1066:
  2793                           
  2794                           ;Prelab2.c: 58:     PORTD = 0;
  2795     03A2  120A  118A  23F4  120A  118A  	fcall	_ioc_portB
  2796     03A7                     i1l1068:
  2797                           
  2798                           ;Prelab2.c: 59:     TRISC = 0;
  2799     03A7  100B               	bcf	11,0	;volatile
  2800     03A8                     i1l75:
  2801     03A8  0872               	movf	??_isr+2,w
  2802     03A9  00FF               	movwf	btemp+1
  2803     03AA  0871               	movf	??_isr+1,w
  2804     03AB  008A               	movwf	10
  2805     03AC  0E70               	swapf	??_isr,w
  2806     03AD  0083               	movwf	3
  2807     03AE  0EFE               	swapf	btemp,f
  2808     03AF  0E7E               	swapf	btemp,w
  2809     03B0  0009               	retfie
  2810     03B1                     __end_of_isr:
  2811                           
  2812                           	psect	intentry
  2813     0004                     __pintentry:	
  2814                           ;incstack = 0
  2815                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2816                           
  2817     0004                     interrupt_function:
  2818     007E                     saved_w	set	btemp
  2819     0004  00FE               	movwf	btemp
  2820     0005  0E03               	swapf	3,w
  2821     0006  00F0               	movwf	??_isr
  2822     0007  080A               	movf	10,w
  2823     0008  00F1               	movwf	??_isr+1
  2824     0009  087F               	movf	btemp+1,w
  2825     000A  00F2               	movwf	??_isr+2
  2826     000B  120A  118A  2B95   	ljmp	_isr
  2827                           
  2828                           	psect	text17
  2829     03F4                     __ptext17:	
  2830 ;; *************** function _ioc_portB *****************
  2831 ;; Defined at:
  2832 ;;		line 64 in file "Prelab2.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, btemp+1
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_isr
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     03F4                     _ioc_portB:	
  2860                           ;psect for function _ioc_portB
  2861                           
  2862     03F4                     i1l994:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _ioc_portB: [wreg+status,2+status,0+btemp+1]
  2865                           
  2866                           
  2867                           ;Prelab2.c: 65: 
  2868     03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2869     03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2870     03F6  1806               	btfsc	6,0	;volatile
  2871     03F7  2BF9               	goto	u38_21
  2872     03F8  2BFA               	goto	u38_20
  2873     03F9                     u38_21:
  2874     03F9  2BFE               	goto	i1l998
  2875     03FA                     u38_20:
  2876     03FA                     i1l996:
  2877     03FA  3001               	movlw	1
  2878     03FB  00FF               	movwf	btemp+1
  2879     03FC  087F               	movf	btemp+1,w
  2880     03FD  0785               	addwf	5,f	;volatile
  2881     03FE                     i1l998:
  2882                           
  2883                           ;Prelab2.c: 66:     iocb_init(0b00100011);
  2884     03FE  1886               	btfsc	6,1	;volatile
  2885     03FF  2C01               	goto	u39_21
  2886     0400  2C02               	goto	u39_20
  2887     0401                     u39_21:
  2888     0401  2C04               	goto	i1l80
  2889     0402                     u39_20:
  2890     0402                     i1l1000:
  2891     0402  3001               	movlw	1
  2892     0403  0285               	subwf	5,f	;volatile
  2893     0404                     i1l80:
  2894     0404  0008               	return
  2895     0405                     __end_of_ioc_portB:
  2896     007E                     btemp	set	126	;btemp
  2897     007E                     wtemp0	set	126
  2898                           
  2899                           	psect	config
  2900                           
  2901                           ;Config register CONFIG1 @ 0x2007
  2902                           ;	Oscillator Selection bits
  2903                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2904                           ;	Watchdog Timer Enable bit
  2905                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2906                           ;	Power-up Timer Enable bit
  2907                           ;	PWRTE = OFF, PWRT disabled
  2908                           ;	RE3/MCLR pin function select bit
  2909                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2910                           ;	Code Protection bit
  2911                           ;	CP = OFF, Program memory code protection is disabled
  2912                           ;	Data Code Protection bit
  2913                           ;	CPD = OFF, Data memory code protection is disabled
  2914                           ;	Brown Out Reset Selection bits
  2915                           ;	BOREN = OFF, BOR disabled
  2916                           ;	Internal External Switchover bit
  2917                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2918                           ;	Fail-Safe Clock Monitor Enabled bit
  2919                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2920                           ;	Low Voltage Programming Enable bit
  2921                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2922                           ;	In-Circuit Debugger Mode bit
  2923                           ;	DEBUG = 0x1, unprogrammed default
  2924     2007                     	org	8199
  2925     2007  20D4               	dw	8404
  2926                           
  2927                           ;Config register CONFIG2 @ 0x2008
  2928                           ;	Brown-out Reset Selection bit
  2929                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2930                           ;	Flash Program Memory Self Write Enable bits
  2931                           ;	WRT = OFF, Write protection off
  2932     2008                     	org	8200
  2933     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     18      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 6
		 -> output_LCD@decimal(BANK0[3]), STR_1(CODE[6]), 

    separar_digitos@dig	PTR unsigned char  size(1) Largest target is 3
		 -> output_LCD@decimal(BANK0[3]), 


Critical Paths under _main in COMMON

    _setup->_Lcd_Init
    _setup->_adc_init
    _Lcd_Init->_Lcd_Cmd
    _output_LCD->_Lcd_Write_String
    _separar_digitos->___awmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_output_LCD
    _output_LCD->_separar_digitos
    _separar_digitos->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3870
                                             16 BANK0      2     2      0
                           _adc_read
                         _output_LCD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     581
                           _Lcd_Init
                           _adc_init
                          _iocb_init
 ---------------------------------------------------------------------------------
 (2) _iocb_init                                            1     1      0      45
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     338
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     198
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _output_LCD                                           3     3      0    3289
                                             13 BANK0      3     3      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                    _separar_digitos
 ---------------------------------------------------------------------------------
 (2) _separar_digitos                                     10     9      1    2217
                                              4 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     985
                                              3 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     420
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     456
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _ioc_portB
 ---------------------------------------------------------------------------------
 (6) _ioc_portB                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _output_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _separar_digitos
       ___awdiv
       ___awmod
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _adc_init
     _iocb_init

 _isr (ROOT)
   _ioc_portB

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jul 25 15:35:30 2023

                          pc 0002                           l91 02F0                           l94 034F  
                         l97 00A0                 ___awdiv@sign 0021                           fsr 0004  
                        l112 03F3                          l141 0412                          l135 01C0  
                        l138 0408                          l170 0393                          l172 0394  
                        l164 037C                          l165 037F                          l166 0385  
                        l190 0325                          l167 0386                          l175 03CA  
                        l168 038C                          l184 0265                          l169 038D  
                        l441 0109                          l178 041F                          l187 0166  
                        l196 02AB                          l454 0219                          l920 03ED  
                        l922 03F2                          l916 03E2                          l918 03E8  
                        _GIE 005F                          _RB0 0030                          _RB1 0031  
                        _RD3 0043                          _RD4 0044                          _RD5 0045  
                        _RD6 0046                          _RD7 0047                          u430 0378  
                        u431 0377                          u440 0383                          u600 01DC  
                        u441 0382                          u601 01DB                          u450 038A  
                        u451 0389                          u460 0391                          u620 01EE  
                        u461 0390                          u621 01ED                          u630 01F8  
                        u710 0183                          u631 01F7                          u615 01E0  
                        u711 017F                          u800 040C                          u704 017C  
                        u801 040B                          u730 0222                          u810 00A8  
                        u650 020B                          u731 0221                          u475 02FE  
                        u811 00A7                          u651 020A                          u635 01F4  
                        u900 0100                          u820 00B3                          u660 0210  
                        u580 01C6                          u724 0186                          u901 00FF  
                        u821 00B2                          u661 020F                          u645 01FF  
                        u581 01C5                          _SCS 0478                          u750 0247  
                        u830 00C4                          u590 01D1                          u670 016F  
                        u751 0246                          u831 00C3                          u591 01D0  
                        u671 016B                          u745 0228                          u770 0275  
                        u850 00D6                          u690 0179                          u851 00D5  
                        u691 0175                          u780 0299                          u684 0172  
                        u765 024D                          u845 00C8                          u917 035B  
                        u790 02AB                          u870 00E7                          u791 02AA  
                        u871 00E6                          u927 0114                          u865 00D7  
                        u937 0123                          u890 00FB                          u891 00FA  
                        u875 00E3                          u947 0132                          u957 030E  
                        u885 00EF                          u967 031F                          u977 03C2  
                        _isr 0395                          fsr0 0004                          indf 0000  
               ___awmod@sign 0078                         l1110 0374                         l1112 0378  
                       l1120 03B2                         l1200 01CB                         l1114 0383  
                       l1122 03B5                         l1130 02F2                         l1210 01DF  
                       l1202 01CD                         l1116 038A                         l1124 03BB  
                       l1140 0311                         l1132 02F8                         l1220 01FE  
                       l1212 01E6                         l1204 01D1                         l1118 0391  
                       l1126 03BE                         l1142 0314                         l1134 02FB  
                       l1222 0205                         l1214 01EA                         l1206 01D6  
                       l1310 02B7                         l1302 02AC                         l1128 03C7  
                       l1144 031A                         l1136 0309                         l1400 00AF  
                       l1216 01EE                         l1208 01DC                         l1224 020B  
                       l1240 019A                         l1232 0168                         l1320 02C6  
                       l1312 02BA                         l1304 02AF                         l1146 031D  
                       l1138 030C                         l1410 00C4                         l1402 00B3  
                       l1226 0210                         l1218 01F8                         l1234 0187  
                       l1330 02DF                         l1322 02C9                         l1314 02BD  
                       l1306 02B1                         l1148 0322                         l1420 00E7  
                       l1412 00C7                         l1404 00B8                         l1228 0215  
                       l1260 0128                         l1236 018C                         l1244 019F  
                       l1340 02EA                         l1332 02E0                         l1324 02CD  
                       l1316 02C0                         l1308 02B4                         l1270 022F  
                       l1430 0100                         l1422 00ED                         l1414 00CE  
                       l1406 00BC                         l1262 012E                         l1254 010A  
                       l1238 0193                         l1246 01B5                         l1342 02EB  
                       l1334 02E1                         l1326 02CE                         l1318 02C3  
                       l1344 0405                         l1264 0413                         l1280 0254  
                       l1272 0232                         l1432 0105                         l1424 00EE  
                       l1416 00D2                         l1408 00BE                         l1440 0096  
                       l1256 0110                         l1248 01BF                         l1336 02E5  
                       l1328 02D4                         l1346 040C                         l1282 0257  
                       l1274 0238                         l1266 021D                         l1290 0287  
                       l1426 00F5                         l1418 00D6                         l1194 01C1  
                       l1442 009B                         l1450 0346                         l1258 0119  
                       l1338 02E6                         l1284 025D                         l1268 0222  
                       l1276 0241                         l1292 028F                         l1428 00FB  
                       l1196 01C2                         l1436 0019                         l1444 0326  
                       l1460 036A                         l1452 0350                         l1278 0247  
                       l1286 0266                         l1198 01C6                         l1438 008F  
                       l1446 0333                         l1454 0355                         l1288 026B  
                       l1392 00A1                         l1448 033C                         l1456 035F  
                       l1394 00A4                         l1482 01A7                         l1458 0366  
                       l1396 00A8                         l1398 00AD                         _ADFM 04FF  
                       ?_isr 0070                         _ADON 00F8                         STR_1 03DB  
                       _T0IE 005D                         _T0IF 005A                         _T0CS 040D  
                       _IOCB 0096                         _RBIE 005B                         _RBIF 0058  
                       i1l80 0404                         i1l75 03A8                         _TMR0 0001  
                       _WPUB 0095            ?_Lcd_Write_String 0078                         _main 0350  
                       btemp 007E             ?_separar_digitos 0024                         start 000E  
         ??_Lcd_Write_String 0020              __end_of_Lcd_Cmd 03CB                        ??_isr 0070  
                      ?_main 0070              __end_of___awdiv 010A              __end_of___awmod 021A  
                      _ANSEL 0188              ___awdiv@divisor 0073                        i1l994 03F4  
                      i1l996 03FA                        i1l998 03FE              ___awdiv@counter 0020  
                      _VCFG0 04FC                        _VCFG1 04FD                        u41_20 0399  
                      u41_21 0398                        u42_20 03A2                        u42_21 03A1  
                      _PORTA 0005                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        u38_20 03FA                        u38_21 03F9  
                      u39_20 0402                        u39_21 0401                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _nRBPU 040F                        _setup 02AC                        pclath 000A  
                      status 0003                        wtemp0 007E             __end_of_Lcd_Init 0167  
           __end_of_Lcd_Port 0395              __initialization 0011                 __end_of_main 0373  
                     ??_main 0030                       _ADRESH 001E                       _ADRESL 009E  
           ___awdiv@dividend 0075                       ?_setup 0070                       _ANSELH 0189  
           __end_of_adc_init 01C1             __end_of_adc_read 0413                       i1l1000 0402  
                     i1l1060 0399                       i1l1062 039D                       i1l1064 039E  
                     i1l1066 03A2                       i1l1058 0395                       i1l1068 03A7  
                  ??_Lcd_Cmd 0074                    ??___awdiv 0077                    ??___awmod 0077  
           ___awdiv@quotient 0022              ___awmod@divisor 0073              ___awmod@counter 0077  
                     saved_w 007E              Lcd_Set_Cursor@a 0020              Lcd_Set_Cursor@b 0077  
            Lcd_Set_Cursor@y 0022              Lcd_Set_Cursor@z 0021      __end_of__initialization 0012  
          __end_of_Lcd_Clear 0420               __pcstackCOMMON 0070                __end_of_setup 02F1  
             _Lcd_Set_Cursor 021A               _OPTION_REGbits 0081                    ?_Lcd_Init 0070  
                  ?_Lcd_Port 0070                      ??_setup 0079                   __pmaintext 0350  
                 __pintentry 0004       __end_of_Lcd_Set_Cursor 0266                    ?_adc_init 0073  
                  ?_adc_read 0073                   ??_Lcd_Init 0077                   ??_Lcd_Port 0073  
                 __stringtab 03CB               _Lcd_Write_Char 02F1                      _Lcd_Cmd 03B1  
                    ___awdiv 00A1                      ___awmod 01C1                      _adc_val 007A  
          __end_of_iocb_init 03F4              ?_Lcd_Set_Cursor 0077            __end_of_ioc_portB 0405  
                 ??_adc_init 0076                   ??_adc_read 0075                      __ptext1 02AC  
                    __ptext2 03E1                      __ptext3 0167                      __ptext4 010A  
                    __ptext5 0326                      __ptext6 0016                      __ptext7 01C1  
                    __ptext8 00A1                      __ptext9 0266             ___awmod@dividend 0075  
     __end_of_Lcd_Write_Char 0326         end_of_initialization 0012                    Lcd_Port@a 0073  
                  _PORTDbits 0008           separar_digitos@dig 0024           separar_digitos@num 002A  
            ?_Lcd_Write_Char 0070            Lcd_Write_String@a 0078            Lcd_Write_String@i 0023  
                 _output_LCD 0326                    _Lcd_Clear 0413             _Lcd_Write_String 0266  
          ??_separar_digitos 0025          start_initialization 0011                  __end_of_isr 03B1  
                 ?_Lcd_Clear 0070              adc_init@channel 0075              Lcd_Write_Char@a 0077  
            Lcd_Write_Char@y 0076      separar_digitos@centenas 002C                  __pbssCOMMON 007A  
                  ___latbits 0002                __pcstackBANK0 0020                     ?_Lcd_Cmd 0070  
              adc_init@clock 0074                  ?_output_LCD 0070                    adc_init@J 0078  
                  adc_init@R 0073             ??_Lcd_Set_Cursor 0078                     ?___awdiv 0073  
                   ?___awmod 0073                    __pstrings 03CB                    _iocb_init 03E1  
                  _ioc_portB 03F4            interrupt_function 0004                     Lcd_Cmd@a 0076  
                ??_Lcd_Clear 0077                   _ADCON0bits 001F                  __stringbase 03DA  
                 ?_iocb_init 0070             ??_Lcd_Write_Char 0074                   ?_ioc_portB 0070  
                   _Lcd_Init 010A                     _Lcd_Port 0373              iocb_init@pinesB 0073  
   __end_of_Lcd_Write_String 02AC              _separar_digitos 0016       separar_digitos@decenas 002B  
         __end_of__stringtab 03DB                     _adc_init 0167                     _adc_read 0405  
          output_LCD@decimal 002D                     __ptext10 02F1                     __ptext11 021A  
                   __ptext12 0413                     __ptext13 03B1                     __ptext14 0373  
                   __ptext15 0405                     __ptext16 0395                     __ptext17 03F4  
                ??_iocb_init 0073                  ??_ioc_portB 0070           Lcd_Write_Char@temp 0075  
separar_digitos@residuo_cent 0027                     intlevel1 0000  separar_digitos@residuo_unit 0029  
    __end_of_separar_digitos 00A1                 ??_output_LCD 007A                    stringcode 03D5  
                 _OSCCONbits 008F           Lcd_Set_Cursor@temp 0023   separar_digitos@residuo_dec 0028  
         __end_of_output_LCD 0350                     stringdir 03D5                     stringtab 03CB  
