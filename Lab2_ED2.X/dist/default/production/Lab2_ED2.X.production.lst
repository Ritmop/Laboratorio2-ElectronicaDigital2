

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jul 28 13:41:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Generated 22/03/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F887 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76     0000                     	;# 
    77     0001                     	;# 
    78     0002                     	;# 
    79     0003                     	;# 
    80     0004                     	;# 
    81     0005                     	;# 
    82     0006                     	;# 
    83     0007                     	;# 
    84     0008                     	;# 
    85     0009                     	;# 
    86     000A                     	;# 
    87     000B                     	;# 
    88     000C                     	;# 
    89     000D                     	;# 
    90     000E                     	;# 
    91     000E                     	;# 
    92     000F                     	;# 
    93     0010                     	;# 
    94     0011                     	;# 
    95     0012                     	;# 
    96     0013                     	;# 
    97     0014                     	;# 
    98     0015                     	;# 
    99     0015                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     0019                     	;# 
   104     001A                     	;# 
   105     001B                     	;# 
   106     001B                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001E                     	;# 
   110     001F                     	;# 
   111     0081                     	;# 
   112     0085                     	;# 
   113     0086                     	;# 
   114     0087                     	;# 
   115     0088                     	;# 
   116     0089                     	;# 
   117     008C                     	;# 
   118     008D                     	;# 
   119     008E                     	;# 
   120     008F                     	;# 
   121     0090                     	;# 
   122     0091                     	;# 
   123     0092                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0094                     	;# 
   128     0095                     	;# 
   129     0096                     	;# 
   130     0097                     	;# 
   131     0098                     	;# 
   132     0099                     	;# 
   133     009A                     	;# 
   134     009B                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     0105                     	;# 
   140     0107                     	;# 
   141     0108                     	;# 
   142     0109                     	;# 
   143     010C                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     0185                     	;# 
   149     0187                     	;# 
   150     0188                     	;# 
   151     0189                     	;# 
   152     018C                     	;# 
   153     018D                     	;# 
   154     0000                     	;# 
   155     0001                     	;# 
   156     0002                     	;# 
   157     0003                     	;# 
   158     0004                     	;# 
   159     0005                     	;# 
   160     0006                     	;# 
   161     0007                     	;# 
   162     0008                     	;# 
   163     0009                     	;# 
   164     000A                     	;# 
   165     000B                     	;# 
   166     000C                     	;# 
   167     000D                     	;# 
   168     000E                     	;# 
   169     000E                     	;# 
   170     000F                     	;# 
   171     0010                     	;# 
   172     0011                     	;# 
   173     0012                     	;# 
   174     0013                     	;# 
   175     0014                     	;# 
   176     0015                     	;# 
   177     0015                     	;# 
   178     0016                     	;# 
   179     0017                     	;# 
   180     0018                     	;# 
   181     0019                     	;# 
   182     001A                     	;# 
   183     001B                     	;# 
   184     001B                     	;# 
   185     001C                     	;# 
   186     001D                     	;# 
   187     001E                     	;# 
   188     001F                     	;# 
   189     0081                     	;# 
   190     0085                     	;# 
   191     0086                     	;# 
   192     0087                     	;# 
   193     0088                     	;# 
   194     0089                     	;# 
   195     008C                     	;# 
   196     008D                     	;# 
   197     008E                     	;# 
   198     008F                     	;# 
   199     0090                     	;# 
   200     0091                     	;# 
   201     0092                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0094                     	;# 
   206     0095                     	;# 
   207     0096                     	;# 
   208     0097                     	;# 
   209     0098                     	;# 
   210     0099                     	;# 
   211     009A                     	;# 
   212     009B                     	;# 
   213     009C                     	;# 
   214     009D                     	;# 
   215     009E                     	;# 
   216     009F                     	;# 
   217     0105                     	;# 
   218     0107                     	;# 
   219     0108                     	;# 
   220     0109                     	;# 
   221     010C                     	;# 
   222     010C                     	;# 
   223     010D                     	;# 
   224     010E                     	;# 
   225     010F                     	;# 
   226     0185                     	;# 
   227     0187                     	;# 
   228     0188                     	;# 
   229     0189                     	;# 
   230     018C                     	;# 
   231     018D                     	;# 
   232     0000                     	;# 
   233     0001                     	;# 
   234     0002                     	;# 
   235     0003                     	;# 
   236     0004                     	;# 
   237     0005                     	;# 
   238     0006                     	;# 
   239     0007                     	;# 
   240     0008                     	;# 
   241     0009                     	;# 
   242     000A                     	;# 
   243     000B                     	;# 
   244     000C                     	;# 
   245     000D                     	;# 
   246     000E                     	;# 
   247     000E                     	;# 
   248     000F                     	;# 
   249     0010                     	;# 
   250     0011                     	;# 
   251     0012                     	;# 
   252     0013                     	;# 
   253     0014                     	;# 
   254     0015                     	;# 
   255     0015                     	;# 
   256     0016                     	;# 
   257     0017                     	;# 
   258     0018                     	;# 
   259     0019                     	;# 
   260     001A                     	;# 
   261     001B                     	;# 
   262     001B                     	;# 
   263     001C                     	;# 
   264     001D                     	;# 
   265     001E                     	;# 
   266     001F                     	;# 
   267     0081                     	;# 
   268     0085                     	;# 
   269     0086                     	;# 
   270     0087                     	;# 
   271     0088                     	;# 
   272     0089                     	;# 
   273     008C                     	;# 
   274     008D                     	;# 
   275     008E                     	;# 
   276     008F                     	;# 
   277     0090                     	;# 
   278     0091                     	;# 
   279     0092                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0094                     	;# 
   284     0095                     	;# 
   285     0096                     	;# 
   286     0097                     	;# 
   287     0098                     	;# 
   288     0099                     	;# 
   289     009A                     	;# 
   290     009B                     	;# 
   291     009C                     	;# 
   292     009D                     	;# 
   293     009E                     	;# 
   294     009F                     	;# 
   295     0105                     	;# 
   296     0107                     	;# 
   297     0108                     	;# 
   298     0109                     	;# 
   299     010C                     	;# 
   300     010C                     	;# 
   301     010D                     	;# 
   302     010E                     	;# 
   303     010F                     	;# 
   304     0185                     	;# 
   305     0187                     	;# 
   306     0188                     	;# 
   307     0189                     	;# 
   308     018C                     	;# 
   309     018D                     	;# 
   310     0000                     	;# 
   311     0001                     	;# 
   312     0002                     	;# 
   313     0003                     	;# 
   314     0004                     	;# 
   315     0005                     	;# 
   316     0006                     	;# 
   317     0007                     	;# 
   318     0008                     	;# 
   319     0009                     	;# 
   320     000A                     	;# 
   321     000B                     	;# 
   322     000C                     	;# 
   323     000D                     	;# 
   324     000E                     	;# 
   325     000E                     	;# 
   326     000F                     	;# 
   327     0010                     	;# 
   328     0011                     	;# 
   329     0012                     	;# 
   330     0013                     	;# 
   331     0014                     	;# 
   332     0015                     	;# 
   333     0015                     	;# 
   334     0016                     	;# 
   335     0017                     	;# 
   336     0018                     	;# 
   337     0019                     	;# 
   338     001A                     	;# 
   339     001B                     	;# 
   340     001B                     	;# 
   341     001C                     	;# 
   342     001D                     	;# 
   343     001E                     	;# 
   344     001F                     	;# 
   345     0081                     	;# 
   346     0085                     	;# 
   347     0086                     	;# 
   348     0087                     	;# 
   349     0088                     	;# 
   350     0089                     	;# 
   351     008C                     	;# 
   352     008D                     	;# 
   353     008E                     	;# 
   354     008F                     	;# 
   355     0090                     	;# 
   356     0091                     	;# 
   357     0092                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0094                     	;# 
   362     0095                     	;# 
   363     0096                     	;# 
   364     0097                     	;# 
   365     0098                     	;# 
   366     0099                     	;# 
   367     009A                     	;# 
   368     009B                     	;# 
   369     009C                     	;# 
   370     009D                     	;# 
   371     009E                     	;# 
   372     009F                     	;# 
   373     0105                     	;# 
   374     0107                     	;# 
   375     0108                     	;# 
   376     0109                     	;# 
   377     010C                     	;# 
   378     010C                     	;# 
   379     010D                     	;# 
   380     010E                     	;# 
   381     010F                     	;# 
   382     0185                     	;# 
   383     0187                     	;# 
   384     0188                     	;# 
   385     0189                     	;# 
   386     018C                     	;# 
   387     018D                     	;# 
   388     0000                     	;# 
   389     0001                     	;# 
   390     0002                     	;# 
   391     0003                     	;# 
   392     0004                     	;# 
   393     0005                     	;# 
   394     0006                     	;# 
   395     0007                     	;# 
   396     0008                     	;# 
   397     0009                     	;# 
   398     000A                     	;# 
   399     000B                     	;# 
   400     000C                     	;# 
   401     000D                     	;# 
   402     000E                     	;# 
   403     000E                     	;# 
   404     000F                     	;# 
   405     0010                     	;# 
   406     0011                     	;# 
   407     0012                     	;# 
   408     0013                     	;# 
   409     0014                     	;# 
   410     0015                     	;# 
   411     0015                     	;# 
   412     0016                     	;# 
   413     0017                     	;# 
   414     0018                     	;# 
   415     0019                     	;# 
   416     001A                     	;# 
   417     001B                     	;# 
   418     001B                     	;# 
   419     001C                     	;# 
   420     001D                     	;# 
   421     001E                     	;# 
   422     001F                     	;# 
   423     0081                     	;# 
   424     0085                     	;# 
   425     0086                     	;# 
   426     0087                     	;# 
   427     0088                     	;# 
   428     0089                     	;# 
   429     008C                     	;# 
   430     008D                     	;# 
   431     008E                     	;# 
   432     008F                     	;# 
   433     0090                     	;# 
   434     0091                     	;# 
   435     0092                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0094                     	;# 
   440     0095                     	;# 
   441     0096                     	;# 
   442     0097                     	;# 
   443     0098                     	;# 
   444     0099                     	;# 
   445     009A                     	;# 
   446     009B                     	;# 
   447     009C                     	;# 
   448     009D                     	;# 
   449     009E                     	;# 
   450     009F                     	;# 
   451     0105                     	;# 
   452     0107                     	;# 
   453     0108                     	;# 
   454     0109                     	;# 
   455     010C                     	;# 
   456     010C                     	;# 
   457     010D                     	;# 
   458     010E                     	;# 
   459     010F                     	;# 
   460     0185                     	;# 
   461     0187                     	;# 
   462     0188                     	;# 
   463     0189                     	;# 
   464     018C                     	;# 
   465     018D                     	;# 
   466     0000                     	;# 
   467     0001                     	;# 
   468     0002                     	;# 
   469     0003                     	;# 
   470     0004                     	;# 
   471     0005                     	;# 
   472     0006                     	;# 
   473     0007                     	;# 
   474     0008                     	;# 
   475     0009                     	;# 
   476     000A                     	;# 
   477     000B                     	;# 
   478     000C                     	;# 
   479     000D                     	;# 
   480     000E                     	;# 
   481     000E                     	;# 
   482     000F                     	;# 
   483     0010                     	;# 
   484     0011                     	;# 
   485     0012                     	;# 
   486     0013                     	;# 
   487     0014                     	;# 
   488     0015                     	;# 
   489     0015                     	;# 
   490     0016                     	;# 
   491     0017                     	;# 
   492     0018                     	;# 
   493     0019                     	;# 
   494     001A                     	;# 
   495     001B                     	;# 
   496     001B                     	;# 
   497     001C                     	;# 
   498     001D                     	;# 
   499     001E                     	;# 
   500     001F                     	;# 
   501     0081                     	;# 
   502     0085                     	;# 
   503     0086                     	;# 
   504     0087                     	;# 
   505     0088                     	;# 
   506     0089                     	;# 
   507     008C                     	;# 
   508     008D                     	;# 
   509     008E                     	;# 
   510     008F                     	;# 
   511     0090                     	;# 
   512     0091                     	;# 
   513     0092                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0094                     	;# 
   518     0095                     	;# 
   519     0096                     	;# 
   520     0097                     	;# 
   521     0098                     	;# 
   522     0099                     	;# 
   523     009A                     	;# 
   524     009B                     	;# 
   525     009C                     	;# 
   526     009D                     	;# 
   527     009E                     	;# 
   528     009F                     	;# 
   529     0105                     	;# 
   530     0107                     	;# 
   531     0108                     	;# 
   532     0109                     	;# 
   533     010C                     	;# 
   534     010C                     	;# 
   535     010D                     	;# 
   536     010E                     	;# 
   537     010F                     	;# 
   538     0185                     	;# 
   539     0187                     	;# 
   540     0188                     	;# 
   541     0189                     	;# 
   542     018C                     	;# 
   543     018D                     	;# 
   544     001A                     _RCREG	set	26
   545     0019                     _TXREG	set	25
   546     0005                     _PORTA	set	5
   547     0007                     _PORTC	set	7
   548     0009                     _PORTE	set	9
   549     0008                     _PORTD	set	8
   550     0006                     _PORTB	set	6
   551     001E                     _ADRESH	set	30
   552     001F                     _ADCON0bits	set	31
   553     0064                     _TXIF	set	100
   554     005E                     _PEIE	set	94
   555     00C4                     _CREN	set	196
   556     00C7                     _SPEN	set	199
   557     0065                     _RCIF	set	101
   558     0049                     _RE1	set	73
   559     0048                     _RE0	set	72
   560     0047                     _RD7	set	71
   561     0046                     _RD6	set	70
   562     0045                     _RD5	set	69
   563     0044                     _RD4	set	68
   564     0043                     _RD3	set	67
   565     0042                     _RD2	set	66
   566     0041                     _RD1	set	65
   567     0040                     _RD0	set	64
   568     00F8                     _ADON	set	248
   569     005F                     _GIE	set	95
   570     005B                     _RBIE	set	91
   571     009A                     _SPBRGH	set	154
   572     0099                     _SPBRG	set	153
   573     008F                     _OSCCONbits	set	143
   574     0085                     _TRISA	set	133
   575     0087                     _TRISC	set	135
   576     0089                     _TRISE	set	137
   577     0088                     _TRISD	set	136
   578     009E                     _ADRESL	set	158
   579     0096                     _IOCB	set	150
   580     0095                     _WPUB	set	149
   581     0086                     _TRISB	set	134
   582     0464                     _TXIE	set	1124
   583     04C5                     _TXEN	set	1221
   584     0465                     _RCIE	set	1125
   585     04C4                     _SYNC	set	1220
   586     0478                     _SCS	set	1144
   587     04FD                     _VCFG1	set	1277
   588     04FC                     _VCFG0	set	1276
   589     04FF                     _ADFM	set	1279
   590     040F                     _nRBPU	set	1039
   591     0189                     _ANSELH	set	393
   592     0188                     _ANSEL	set	392
   593                           
   594                           	psect	strings
   595     0593                     __pstrings:
   596     0593                     stringtab:
   597     0593                     __stringtab:
   598                           
   599                           ;	String table - string pointers are 1 byte each
   600     0593  1BFF               	btfsc	btemp+1,7
   601     0594  2D9D               	ljmp	stringcode
   602     0595  1383               	bcf	3,7
   603     0596  187F               	btfsc	btemp+1,0
   604     0597  1783               	bsf	3,7
   605     0598  0800               	movf	0,w
   606     0599  0A84               	incf	4,f
   607     059A  1903               	skipnz
   608     059B  0AFF               	incf	btemp+1,f
   609     059C  0008               	return
   610     059D                     stringcode:
   611     059D                     stringdir:
   612     059D  3005               	movlw	high stringdir
   613     059E  008A               	movwf	10
   614     059F  0804               	movf	4,w
   615     05A0  0A84               	incf	4,f
   616     05A1  0782               	addwf	2,f
   617     05A2                     __stringbase:
   618     05A2  3400               	retlw	0
   619     05A3                     __end_of__stringtab:
   620     05A3                     STR_3:
   621     05A3  3456               	retlw	86	;'V'
   622     05A4  346F               	retlw	111	;'o'
   623     05A5  346C               	retlw	108	;'l'
   624     05A6  3474               	retlw	116	;'t'
   625     05A7  3461               	retlw	97	;'a'
   626     05A8  346A               	retlw	106	;'j'
   627     05A9  3465               	retlw	101	;'e'
   628     05AA  3420               	retlw	32	;' '
   629     05AB  3464               	retlw	100	;'d'
   630     05AC  3465               	retlw	101	;'e'
   631     05AD  346C               	retlw	108	;'l'
   632     05AE  3420               	retlw	32	;' '
   633     05AF  3470               	retlw	112	;'p'
   634     05B0  346F               	retlw	111	;'o'
   635     05B1  3474               	retlw	116	;'t'
   636     05B2  3465               	retlw	101	;'e'
   637     05B3  346E               	retlw	110	;'n'
   638     05B4  3463               	retlw	99	;'c'
   639     05B5  3469               	retlw	105	;'i'
   640     05B6  346F               	retlw	111	;'o'
   641     05B7  346D               	retlw	109	;'m'
   642     05B8  3465               	retlw	101	;'e'
   643     05B9  3474               	retlw	116	;'t'
   644     05BA  3472               	retlw	114	;'r'
   645     05BB  346F               	retlw	111	;'o'
   646     05BC  343A               	retlw	58	;':'
   647     05BD  3420               	retlw	32	;' '
   648     05BE  3400               	retlw	0
   649     05BF                     STR_2:
   650     05BF  3456               	retlw	86	;'V'
   651     05C0  346F               	retlw	111	;'o'
   652     05C1  346C               	retlw	108	;'l'
   653     05C2  3474               	retlw	116	;'t'
   654     05C3  3461               	retlw	97	;'a'
   655     05C4  3467               	retlw	103	;'g'
   656     05C5  3465               	retlw	101	;'e'
   657     05C6  343A               	retlw	58	;':'
   658     05C7  3420               	retlw	32	;' '
   659     05C8  3400               	retlw	0
   660     05C9                     STR_1:
   661     05C9  3443               	retlw	67	;'C'
   662     05CA  346F               	retlw	111	;'o'
   663     05CB  3475               	retlw	117	;'u'
   664     05CC  346E               	retlw	110	;'n'
   665     05CD  3474               	retlw	116	;'t'
   666     05CE  3465               	retlw	101	;'e'
   667     05CF  3472               	retlw	114	;'r'
   668     05D0  343A               	retlw	58	;':'
   669     05D1  3420               	retlw	32	;' '
   670     05D2  3400               	retlw	0
   671     05D3                     STR_4:
   672     05D3  3456               	retlw	86	;'V'
   673     05D4  340A               	retlw	10
   674     05D5  340D               	retlw	13
   675     05D6  3400               	retlw	0
   676                           
   677                           	psect	cinit
   678     000F                     start_initialization:	
   679                           ; #config settings
   680                           
   681     000F                     __initialization:
   682                           
   683                           ; Clear objects allocated to COMMON
   684     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   685     0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   686                           
   687                           ; Clear objects allocated to BANK0
   688     0011  1283               	bcf	3,5	;RP0=0, select bank0
   689     0012  1303               	bcf	3,6	;RP1=0, select bank0
   690     0013  01C5               	clrf	__pbssBANK0& (0+127)
   691     0014  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   692     0015  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   693     0016  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   694     0017  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   695     0018  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   696     0019  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   697     001A  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   698     001B  01CD               	clrf	(__pbssBANK0+8)& (0+127)
   699     001C  01CE               	clrf	(__pbssBANK0+9)& (0+127)
   700     001D                     end_of_initialization:	
   701                           ;End of C runtime variable initialization code
   702                           
   703     001D                     __end_of__initialization:
   704     001D  0183               	clrf	3
   705     001E  120A  118A  2E9B   	ljmp	_main	;jump to C main() function
   706                           
   707                           	psect	bssCOMMON
   708     007A                     __pbssCOMMON:
   709     007A                     _UART_read:
   710     007A                     	ds	1
   711     007B                     _pot_val:
   712     007B                     	ds	1
   713                           
   714                           	psect	bssBANK0
   715     0045                     __pbssBANK0:
   716     0045                     _pot_volt:
   717     0045                     	ds	2
   718     0047                     _prev:
   719     0047                     	ds	1
   720     0048                     _counter:
   721     0048                     	ds	1
   722     0049                     _volt:
   723     0049                     	ds	3
   724     004C                     _count:
   725     004C                     	ds	3
   726                           
   727                           	psect	cstackCOMMON
   728     0070                     __pcstackCOMMON:
   729     0070                     ?_UART_read_char:
   730     0070                     ??_UART_read_char:	
   731                           ; 1 bytes @ 0x0
   732                           
   733     0070                     ?_setup:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ?_output_LCD:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ?_UART:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ?_UART_write_string:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ?_UART_write_char:	
   746                           ; 1 bytes @ 0x0
   747                           
   748     0070                     ?_Lcd_Port:	
   749                           ; 1 bytes @ 0x0
   750                           
   751     0070                     ?_Lcd_Cmd:	
   752                           ; 1 bytes @ 0x0
   753                           
   754     0070                     ?_Lcd_Clear:	
   755                           ; 1 bytes @ 0x0
   756                           
   757     0070                     ?_Lcd_Init:	
   758                           ; 1 bytes @ 0x0
   759                           
   760     0070                     ?_Lcd_Write_Char:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_isr:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ??_isr:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ?_main:	
   770                           ; 1 bytes @ 0x0
   771                           
   772                           
   773                           ; 2 bytes @ 0x0
   774     0070                     	ds	2
   775     0072                     ??_UART_write_char:
   776     0072                     ?_adc_init:	
   777                           ; 1 bytes @ 0x2
   778                           
   779     0072                     ??_Lcd_Port:	
   780                           ; 1 bytes @ 0x2
   781                           
   782     0072                     ?_adc_read:	
   783                           ; 1 bytes @ 0x2
   784                           
   785     0072                     ?___awdiv:	
   786                           ; 2 bytes @ 0x2
   787                           
   788     0072                     ?___awmod:	
   789                           ; 2 bytes @ 0x2
   790                           
   791     0072                     ?___lwdiv:	
   792                           ; 2 bytes @ 0x2
   793                           
   794     0072                     ?___lwmod:	
   795                           ; 2 bytes @ 0x2
   796                           
   797     0072                     ?___lmul:	
   798                           ; 2 bytes @ 0x2
   799                           
   800     0072                     adc_init@R:	
   801                           ; 4 bytes @ 0x2
   802                           
   803     0072                     Lcd_Port@a:	
   804                           ; 1 bytes @ 0x2
   805                           
   806     0072                     UART_write_char@c:	
   807                           ; 1 bytes @ 0x2
   808                           
   809     0072                     ___awdiv@divisor:	
   810                           ; 1 bytes @ 0x2
   811                           
   812     0072                     ___awmod@divisor:	
   813                           ; 2 bytes @ 0x2
   814                           
   815     0072                     ___lwdiv@divisor:	
   816                           ; 2 bytes @ 0x2
   817                           
   818     0072                     ___lwmod@divisor:	
   819                           ; 2 bytes @ 0x2
   820                           
   821     0072                     ___lmul@multiplier:	
   822                           ; 2 bytes @ 0x2
   823                           
   824                           
   825                           ; 4 bytes @ 0x2
   826     0072                     	ds	1
   827     0073                     ??_UART_write_string:
   828     0073                     ??_Lcd_Cmd:	
   829                           ; 1 bytes @ 0x3
   830                           
   831     0073                     ??_Lcd_Write_Char:	
   832                           ; 1 bytes @ 0x3
   833                           
   834     0073                     adc_init@clock:	
   835                           ; 1 bytes @ 0x3
   836                           
   837     0073                     UART_write_string@i:	
   838                           ; 1 bytes @ 0x3
   839                           
   840                           
   841                           ; 2 bytes @ 0x3
   842     0073                     	ds	1
   843     0074                     ??_adc_read:
   844     0074                     adc_init@channel:	
   845                           ; 1 bytes @ 0x4
   846                           
   847     0074                     Lcd_Write_Char@a:	
   848                           ; 1 bytes @ 0x4
   849                           
   850     0074                     ___awdiv@dividend:	
   851                           ; 1 bytes @ 0x4
   852                           
   853     0074                     ___awmod@dividend:	
   854                           ; 2 bytes @ 0x4
   855                           
   856     0074                     ___lwdiv@dividend:	
   857                           ; 2 bytes @ 0x4
   858                           
   859     0074                     ___lwmod@dividend:	
   860                           ; 2 bytes @ 0x4
   861                           
   862                           
   863                           ; 2 bytes @ 0x4
   864     0074                     	ds	1
   865     0075                     ??_adc_init:
   866     0075                     ?_Lcd_Write_String:	
   867                           ; 1 bytes @ 0x5
   868                           
   869     0075                     Lcd_Cmd@a:	
   870                           ; 1 bytes @ 0x5
   871                           
   872     0075                     UART_write_string@s:	
   873                           ; 1 bytes @ 0x5
   874                           
   875     0075                     Lcd_Write_String@a:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 2 bytes @ 0x5
   880     0075                     	ds	1
   881     0076                     ??_UART:
   882     0076                     ??_Lcd_Clear:	
   883                           ; 1 bytes @ 0x6
   884                           
   885     0076                     ?_Lcd_Set_Cursor:	
   886                           ; 1 bytes @ 0x6
   887                           
   888     0076                     ??_Lcd_Init:	
   889                           ; 1 bytes @ 0x6
   890                           
   891     0076                     ??___awdiv:	
   892                           ; 1 bytes @ 0x6
   893                           
   894     0076                     ??___awmod:	
   895                           ; 1 bytes @ 0x6
   896                           
   897     0076                     ??___lwdiv:	
   898                           ; 1 bytes @ 0x6
   899                           
   900     0076                     ??___lwmod:	
   901                           ; 1 bytes @ 0x6
   902                           
   903     0076                     Lcd_Set_Cursor@b:	
   904                           ; 1 bytes @ 0x6
   905                           
   906     0076                     ___awdiv@counter:	
   907                           ; 1 bytes @ 0x6
   908                           
   909     0076                     ___awmod@counter:	
   910                           ; 1 bytes @ 0x6
   911                           
   912     0076                     ___lwmod@counter:	
   913                           ; 1 bytes @ 0x6
   914                           
   915     0076                     ___lwdiv@quotient:	
   916                           ; 1 bytes @ 0x6
   917                           
   918     0076                     ___lmul@multiplicand:	
   919                           ; 2 bytes @ 0x6
   920                           
   921                           
   922                           ; 4 bytes @ 0x6
   923     0076                     	ds	1
   924     0077                     ??_Lcd_Set_Cursor:
   925     0077                     ??_Lcd_Write_String:	
   926                           ; 1 bytes @ 0x7
   927                           
   928     0077                     adc_init@J:	
   929                           ; 1 bytes @ 0x7
   930                           
   931     0077                     Lcd_Set_Cursor@a:	
   932                           ; 1 bytes @ 0x7
   933                           
   934     0077                     ___awdiv@sign:	
   935                           ; 1 bytes @ 0x7
   936                           
   937     0077                     ___awmod@sign:	
   938                           ; 1 bytes @ 0x7
   939                           
   940                           
   941                           ; 1 bytes @ 0x7
   942     0077                     	ds	1
   943     0078                     ??_setup:
   944     0078                     Lcd_Set_Cursor@temp:	
   945                           ; 1 bytes @ 0x8
   946                           
   947     0078                     ___lwdiv@counter:	
   948                           ; 1 bytes @ 0x8
   949                           
   950     0078                     ___awdiv@quotient:	
   951                           ; 1 bytes @ 0x8
   952                           
   953                           
   954                           ; 2 bytes @ 0x8
   955     0078                     	ds	1
   956     0079                     ??_separar_digitos16:
   957                           
   958                           ; 1 bytes @ 0x9
   959     0079                     	ds	1
   960     007A                     ??_output_LCD:
   961     007A                     ??_main:	
   962                           ; 1 bytes @ 0xA
   963                           
   964                           
   965                           	psect	cstackBANK0
   966     0020                     __pcstackBANK0:	
   967                           ; 1 bytes @ 0xA
   968                           
   969     0020                     ?_separar_digitos8:
   970     0020                     ?_separar_digitos16:	
   971                           ; 1 bytes @ 0x0
   972                           
   973     0020                     ??___lmul:	
   974                           ; 1 bytes @ 0x0
   975                           
   976     0020                     separar_digitos8@dig8:	
   977                           ; 1 bytes @ 0x0
   978                           
   979     0020                     Lcd_Write_String@i:	
   980                           ; 1 bytes @ 0x0
   981                           
   982     0020                     separar_digitos16@num:	
   983                           ; 2 bytes @ 0x0
   984                           
   985                           
   986                           ; 2 bytes @ 0x0
   987     0020                     	ds	1
   988     0021                     ??_separar_digitos8:
   989     0021                     ___lmul@product:	
   990                           ; 1 bytes @ 0x1
   991                           
   992                           
   993                           ; 4 bytes @ 0x1
   994     0021                     	ds	1
   995     0022                     separar_digitos16@dig16:
   996                           
   997                           ; 1 bytes @ 0x2
   998     0022                     	ds	1
   999     0023                     separar_digitos8@div2:
  1000     0023                     separar_digitos16@div2:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0x3
  1005     0023                     	ds	1
  1006     0024                     separar_digitos8@centenas:
  1007                           
  1008                           ; 1 bytes @ 0x4
  1009     0024                     	ds	1
  1010     0025                     ?___aldiv:
  1011     0025                     separar_digitos8@decenas:	
  1012                           ; 4 bytes @ 0x5
  1013                           
  1014     0025                     separar_digitos16@centenas:	
  1015                           ; 1 bytes @ 0x5
  1016                           
  1017     0025                     ___aldiv@divisor:	
  1018                           ; 2 bytes @ 0x5
  1019                           
  1020                           
  1021                           ; 4 bytes @ 0x5
  1022     0025                     	ds	1
  1023     0026                     separar_digitos8@unidades:
  1024                           
  1025                           ; 1 bytes @ 0x6
  1026     0026                     	ds	1
  1027     0027                     separar_digitos8@num:
  1028     0027                     separar_digitos16@decenas:	
  1029                           ; 1 bytes @ 0x7
  1030                           
  1031                           
  1032                           ; 2 bytes @ 0x7
  1033     0027                     	ds	1
  1034     0028                     separar_digitos8@div1:
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037     0028                     	ds	1
  1038     0029                     separar_digitos16@unidades:
  1039     0029                     ___aldiv@dividend:	
  1040                           ; 2 bytes @ 0x9
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x9
  1044     0029                     	ds	2
  1045     002B                     separar_digitos16@div1:
  1046                           
  1047                           ; 2 bytes @ 0xB
  1048     002B                     	ds	2
  1049     002D                     ??___aldiv:
  1050                           
  1051                           ; 1 bytes @ 0xD
  1052     002D                     	ds	1
  1053     002E                     ___aldiv@counter:
  1054                           
  1055                           ; 1 bytes @ 0xE
  1056     002E                     	ds	1
  1057     002F                     ___aldiv@sign:
  1058                           
  1059                           ; 1 bytes @ 0xF
  1060     002F                     	ds	1
  1061     0030                     ___aldiv@quotient:
  1062                           
  1063                           ; 4 bytes @ 0x10
  1064     0030                     	ds	4
  1065     0034                     ?_UART_RX_config:
  1066     0034                     ?_UART_TX_config:	
  1067                           ; 1 bytes @ 0x14
  1068                           
  1069     0034                     ?_map:	
  1070                           ; 1 bytes @ 0x14
  1071                           
  1072     0034                     map@min1:	
  1073                           ; 2 bytes @ 0x14
  1074                           
  1075     0034                     UART_RX_config@baudrate:	
  1076                           ; 1 bytes @ 0x14
  1077                           
  1078     0034                     UART_TX_config@baudrate:	
  1079                           ; 4 bytes @ 0x14
  1080                           
  1081                           
  1082                           ; 4 bytes @ 0x14
  1083     0034                     	ds	1
  1084     0035                     map@max1:
  1085                           
  1086                           ; 1 bytes @ 0x15
  1087     0035                     	ds	1
  1088     0036                     map@min2:
  1089                           
  1090                           ; 1 bytes @ 0x16
  1091     0036                     	ds	1
  1092     0037                     map@max2:
  1093                           
  1094                           ; 4 bytes @ 0x17
  1095     0037                     	ds	1
  1096     0038                     ??_UART_RX_config:
  1097     0038                     ??_UART_TX_config:	
  1098                           ; 1 bytes @ 0x18
  1099                           
  1100                           
  1101                           ; 1 bytes @ 0x18
  1102     0038                     	ds	3
  1103     003B                     ??_map:
  1104                           
  1105                           ; 1 bytes @ 0x1B
  1106     003B                     	ds	2
  1107     003D                     _UART_RX_config$966:
  1108     003D                     _UART_TX_config$967:	
  1109                           ; 4 bytes @ 0x1D
  1110                           
  1111                           
  1112                           ; 4 bytes @ 0x1D
  1113     003D                     	ds	4
  1114     0041                     UART_RX_config@BR:
  1115     0041                     UART_TX_config@BR:	
  1116                           ; 4 bytes @ 0x21
  1117                           
  1118                           
  1119                           ; 4 bytes @ 0x21
  1120     0041                     	ds	2
  1121     0043                     map@val:
  1122                           
  1123                           ; 1 bytes @ 0x23
  1124     0043                     	ds	2
  1125                           
  1126                           	psect	maintext
  1127     069B                     __pmaintext:	
  1128 ;;
  1129 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1130 ;;
  1131 ;; *************** function _main *****************
  1132 ;; Defined at:
  1133 ;;		line 76 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  2  209[None  ] int 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : B00/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0
  1150 ;;      Totals:         0       0       0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels required when called: 6
  1153 ;; This function calls:
  1154 ;;		_Lcd_Init
  1155 ;;		_UART
  1156 ;;		_UART_RX_config
  1157 ;;		_UART_TX_config
  1158 ;;		_adc_read
  1159 ;;		_output_LCD
  1160 ;;		_setup
  1161 ;; This function is called by:
  1162 ;;		Startup code after reset
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166     069B                     _main:	
  1167                           ;psect for function _main
  1168                           
  1169     069B                     l2033:	
  1170                           ;incstack = 0
  1171                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1172                           
  1173                           
  1174                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 77:     setup();
  1175     069B  120A  118A  2712  120A  118A  	fcall	_setup
  1176     06A0                     l2035:
  1177                           
  1178                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 78:     Lcd_Init();
  1179     06A0  120A  118A  24AD  120A  118A  	fcall	_Lcd_Init
  1180     06A5                     l2037:
  1181                           
  1182                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 79:     UART_RX_config(9600);
  1183     06A5  3000               	movlw	0
  1184     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1185     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1186     06A8  00B7               	movwf	UART_RX_config@baudrate+3
  1187     06A9  3000               	movlw	0
  1188     06AA  00B6               	movwf	UART_RX_config@baudrate+2
  1189     06AB  3025               	movlw	37
  1190     06AC  00B5               	movwf	UART_RX_config@baudrate+1
  1191     06AD  3080               	movlw	128
  1192     06AE  00B4               	movwf	UART_RX_config@baudrate
  1193     06AF  120A  118A  2142  120A  118A  	fcall	_UART_RX_config
  1194     06B4                     l2039:
  1195                           
  1196                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 80:     UART_TX_config(9600);
  1197     06B4  3000               	movlw	0
  1198     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1199     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1200     06B7  00B7               	movwf	UART_TX_config@baudrate+3
  1201     06B8  3000               	movlw	0
  1202     06B9  00B6               	movwf	UART_TX_config@baudrate+2
  1203     06BA  3025               	movlw	37
  1204     06BB  00B5               	movwf	UART_TX_config@baudrate+1
  1205     06BC  3080               	movlw	128
  1206     06BD  00B4               	movwf	UART_TX_config@baudrate
  1207     06BE  120A  118A  21C5  120A  118A  	fcall	_UART_TX_config
  1208     06C3                     l2041:
  1209                           
  1210                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 84:         pot_val = (adc_read()>>8) & 0x00FF;
  1211     06C3  120A  118A  27D3  120A  118A  	fcall	_adc_read
  1212     06C8  0873               	movf	?_adc_read+1,w
  1213     06C9  00FB               	movwf	_pot_val
  1214     06CA                     l2043:
  1215                           
  1216                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 86:         output_LCD();
  1217     06CA  120A  118A  20BE  120A  118A  	fcall	_output_LCD
  1218     06CF                     l2045:
  1219                           
  1220                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 88:         UART();
  1221     06CF  120A  118A  261B  120A  118A  	fcall	_UART
  1222     06D4  2EC3               	goto	l2041
  1223     06D5  120A  118A  280C   	ljmp	start
  1224     06D8                     __end_of_main:
  1225                           
  1226                           	psect	text1
  1227     0712                     __ptext1:	
  1228 ;; *************** function _setup *****************
  1229 ;; Defined at:
  1230 ;;		line 92 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;                  1    wreg      void 
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1244 ;;      Params:         0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0
  1246 ;;      Temps:          0       0       0       0       0
  1247 ;;      Totals:         0       0       0       0       0
  1248 ;;Total ram usage:        0 bytes
  1249 ;; Hardware stack levels used: 1
  1250 ;; Hardware stack levels required when called: 3
  1251 ;; This function calls:
  1252 ;;		_adc_init
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258     0712                     _setup:	
  1259                           ;psect for function _setup
  1260                           
  1261     0712                     l1679:	
  1262                           ;incstack = 0
  1263                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1264                           
  1265                           
  1266                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 94:     ANSEL = 0;
  1267     0712  1683               	bsf	3,5	;RP0=1, select bank3
  1268     0713  1703               	bsf	3,6	;RP1=1, select bank3
  1269     0714  0188               	clrf	8	;volatile
  1270     0715                     l1681:
  1271                           
  1272                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 95:     ANSELH= 0b00100000;
  1273     0715  3020               	movlw	32
  1274     0716  0089               	movwf	9	;volatile
  1275     0717                     l1683:
  1276                           
  1277                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 96:     TRISB = 32;
  1278     0717  3020               	movlw	32
  1279     0718  1683               	bsf	3,5	;RP0=1, select bank1
  1280     0719  1303               	bcf	3,6	;RP1=0, select bank1
  1281     071A  0086               	movwf	6	;volatile
  1282                           
  1283                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 97:     PORTB = 0;
  1284     071B  1283               	bcf	3,5	;RP0=0, select bank0
  1285     071C  1303               	bcf	3,6	;RP1=0, select bank0
  1286     071D  0186               	clrf	6	;volatile
  1287                           
  1288                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 98:     TRISD = 0;
  1289     071E  1683               	bsf	3,5	;RP0=1, select bank1
  1290     071F  1303               	bcf	3,6	;RP1=0, select bank1
  1291     0720  0188               	clrf	8	;volatile
  1292                           
  1293                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 99:     PORTD = 0;
  1294     0721  1283               	bcf	3,5	;RP0=0, select bank0
  1295     0722  1303               	bcf	3,6	;RP1=0, select bank0
  1296     0723  0188               	clrf	8	;volatile
  1297                           
  1298                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 100:     TRISE = 0;
  1299     0724  1683               	bsf	3,5	;RP0=1, select bank1
  1300     0725  1303               	bcf	3,6	;RP1=0, select bank1
  1301     0726  0189               	clrf	9	;volatile
  1302                           
  1303                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 101:     PORTE = 0;
  1304     0727  1283               	bcf	3,5	;RP0=0, select bank0
  1305     0728  1303               	bcf	3,6	;RP1=0, select bank0
  1306     0729  0189               	clrf	9	;volatile
  1307     072A                     l1685:
  1308                           
  1309                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 102:     TRISC = 0xFF;
  1310     072A  30FF               	movlw	255
  1311     072B  1683               	bsf	3,5	;RP0=1, select bank1
  1312     072C  1303               	bcf	3,6	;RP1=0, select bank1
  1313     072D  0087               	movwf	7	;volatile
  1314     072E                     l1687:
  1315                           
  1316                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 103:     PORTC = 0;
  1317     072E  1283               	bcf	3,5	;RP0=0, select bank0
  1318     072F  1303               	bcf	3,6	;RP1=0, select bank0
  1319     0730  0187               	clrf	7	;volatile
  1320     0731                     l1689:
  1321                           
  1322                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 104:     TRISA = 0;
  1323     0731  1683               	bsf	3,5	;RP0=1, select bank1
  1324     0732  1303               	bcf	3,6	;RP1=0, select bank1
  1325     0733  0185               	clrf	5	;volatile
  1326     0734                     l1691:
  1327                           
  1328                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 105:     PORTA = 0;
  1329     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1330     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1331     0736  0185               	clrf	5	;volatile
  1332     0737                     l1693:
  1333                           
  1334                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 108:     OSCCONbits.IRCF = 0b111;
  1335     0737  3070               	movlw	112
  1336     0738  1683               	bsf	3,5	;RP0=1, select bank1
  1337     0739  1303               	bcf	3,6	;RP1=0, select bank1
  1338     073A  048F               	iorwf	15,f	;volatile
  1339     073B                     l1695:
  1340                           
  1341                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 109:     SCS = 1;
  1342     073B  140F               	bsf	15,0	;volatile
  1343     073C                     l1697:
  1344                           
  1345                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 111:     adc_init(0, 0, 8, 0b1101);
  1346     073C  01F2               	clrf	adc_init@R
  1347     073D  3008               	movlw	8
  1348     073E  00F3               	movwf	adc_init@clock
  1349     073F  300D               	movlw	13
  1350     0740  00F4               	movwf	adc_init@channel
  1351     0741  3000               	movlw	0
  1352     0742  120A  118A  23FA  120A  118A  	fcall	_adc_init
  1353     0747                     l216:
  1354     0747  0008               	return
  1355     0748                     __end_of_setup:
  1356                           
  1357                           	psect	text2
  1358     03FA                     __ptext2:	
  1359 ;; *************** function _adc_init *****************
  1360 ;; Defined at:
  1361 ;;		line 4 in file "ADC_lib.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  J               1    wreg     unsigned char 
  1364 ;;  R               1    2[COMMON] unsigned char 
  1365 ;;  clock           1    3[COMMON] unsigned char 
  1366 ;;  channel         1    4[COMMON] unsigned char 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  J               1    7[COMMON] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         3       0       0       0       0
  1379 ;;      Locals:         1       0       0       0       0
  1380 ;;      Temps:          2       0       0       0       0
  1381 ;;      Totals:         6       0       0       0       0
  1382 ;;Total ram usage:        6 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 2
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_setup
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392     03FA                     _adc_init:	
  1393                           ;psect for function _adc_init
  1394                           
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1398                           ;adc_init@J stored from wreg
  1399     03FA  00F7               	movwf	adc_init@J
  1400     03FB                     l1587:
  1401                           
  1402                           ;ADC_lib.c: 13:     ADFM = J;
  1403     03FB  1877               	btfsc	adc_init@J,0
  1404     03FC  2BFE               	goto	u1341
  1405     03FD  2C02               	goto	u1340
  1406     03FE                     u1341:
  1407     03FE  1683               	bsf	3,5	;RP0=1, select bank1
  1408     03FF  1303               	bcf	3,6	;RP1=0, select bank1
  1409     0400  179F               	bsf	31,7	;volatile
  1410     0401  2C05               	goto	u1354
  1411     0402                     u1340:
  1412     0402  1683               	bsf	3,5	;RP0=1, select bank1
  1413     0403  1303               	bcf	3,6	;RP1=0, select bank1
  1414     0404  139F               	bcf	31,7	;volatile
  1415     0405                     u1354:
  1416                           
  1417                           ;ADC_lib.c: 14:     VCFG0 = R;
  1418     0405  1872               	btfsc	adc_init@R,0
  1419     0406  2C08               	goto	u1361
  1420     0407  2C0C               	goto	u1360
  1421     0408                     u1361:
  1422     0408  1683               	bsf	3,5	;RP0=1, select bank1
  1423     0409  1303               	bcf	3,6	;RP1=0, select bank1
  1424     040A  161F               	bsf	31,4	;volatile
  1425     040B  2C0F               	goto	u1374
  1426     040C                     u1360:
  1427     040C  1683               	bsf	3,5	;RP0=1, select bank1
  1428     040D  1303               	bcf	3,6	;RP1=0, select bank1
  1429     040E  121F               	bcf	31,4	;volatile
  1430     040F                     u1374:
  1431                           
  1432                           ;ADC_lib.c: 15:     VCFG1 = R;
  1433     040F  1872               	btfsc	adc_init@R,0
  1434     0410  2C12               	goto	u1381
  1435     0411  2C16               	goto	u1380
  1436     0412                     u1381:
  1437     0412  1683               	bsf	3,5	;RP0=1, select bank1
  1438     0413  1303               	bcf	3,6	;RP1=0, select bank1
  1439     0414  169F               	bsf	31,5	;volatile
  1440     0415  2C19               	goto	u1394
  1441     0416                     u1380:
  1442     0416  1683               	bsf	3,5	;RP0=1, select bank1
  1443     0417  1303               	bcf	3,6	;RP1=0, select bank1
  1444     0418  129F               	bcf	31,5	;volatile
  1445     0419                     u1394:
  1446                           
  1447                           ;ADC_lib.c: 17:     switch(clock){
  1448     0419  2C32               	goto	l1599
  1449     041A                     l1589:
  1450                           
  1451                           ;ADC_lib.c: 19:             ADCON0bits.ADCS = 0b00;
  1452     041A  303F               	movlw	-193
  1453     041B  1283               	bcf	3,5	;RP0=0, select bank0
  1454     041C  1303               	bcf	3,6	;RP1=0, select bank0
  1455     041D  059F               	andwf	31,f	;volatile
  1456                           
  1457                           ;ADC_lib.c: 21:             break;
  1458     041E  2C48               	goto	l1601
  1459     041F                     l1591:
  1460                           
  1461                           ;ADC_lib.c: 23:             ADCON0bits.ADCS = 0b01;
  1462     041F  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0420  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0421  081F               	movf	31,w	;volatile
  1465     0422  393F               	andlw	-193
  1466     0423  3840               	iorlw	64
  1467     0424  009F               	movwf	31	;volatile
  1468                           
  1469                           ;ADC_lib.c: 25:             break;
  1470     0425  2C48               	goto	l1601
  1471     0426                     l1593:
  1472                           
  1473                           ;ADC_lib.c: 27:             ADCON0bits.ADCS = 0b10;
  1474     0426  1283               	bcf	3,5	;RP0=0, select bank0
  1475     0427  1303               	bcf	3,6	;RP1=0, select bank0
  1476     0428  081F               	movf	31,w	;volatile
  1477     0429  393F               	andlw	-193
  1478     042A  3880               	iorlw	128
  1479     042B  009F               	movwf	31	;volatile
  1480                           
  1481                           ;ADC_lib.c: 29:             break;
  1482     042C  2C48               	goto	l1601
  1483     042D                     l1595:
  1484                           
  1485                           ;ADC_lib.c: 31:             ADCON0bits.ADCS = 0b11;
  1486     042D  30C0               	movlw	192
  1487     042E  1283               	bcf	3,5	;RP0=0, select bank0
  1488     042F  1303               	bcf	3,6	;RP1=0, select bank0
  1489     0430  049F               	iorwf	31,f	;volatile
  1490                           
  1491                           ;ADC_lib.c: 33:             break;
  1492     0431  2C48               	goto	l1601
  1493     0432                     l1599:
  1494     0432  0873               	movf	adc_init@clock,w
  1495     0433  00F5               	movwf	??_adc_init
  1496     0434  01F6               	clrf	??_adc_init+1
  1497                           
  1498                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1499                           ; Switch size 1, requested type "simple"
  1500                           ; Number of cases is 1, Range of values is 0 to 0
  1501                           ; switch strategies available:
  1502                           ; Name         Instructions Cycles
  1503                           ; simple_byte            4     3 (average)
  1504                           ; direct_byte           11     8 (fixed)
  1505                           ; jumptable            260     6 (fixed)
  1506                           ;	Chosen strategy is simple_byte
  1507     0435  0876               	movf	??_adc_init+1,w
  1508     0436  3A00               	xorlw	0	; case 0
  1509     0437  1903               	skipnz
  1510     0438  2C3A               	goto	l2067
  1511     0439  2C48               	goto	l1601
  1512     043A                     l2067:
  1513                           
  1514                           ; Switch size 1, requested type "simple"
  1515                           ; Number of cases is 4, Range of values is 1 to 20
  1516                           ; switch strategies available:
  1517                           ; Name         Instructions Cycles
  1518                           ; simple_byte           13     7 (average)
  1519                           ; direct_byte           71    11 (fixed)
  1520                           ; jumptable            263     9 (fixed)
  1521                           ;	Chosen strategy is simple_byte
  1522     043A  0875               	movf	??_adc_init,w
  1523     043B  3A01               	xorlw	1	; case 1
  1524     043C  1903               	skipnz
  1525     043D  2C1A               	goto	l1589
  1526     043E  3A05               	xorlw	5	; case 4
  1527     043F  1903               	skipnz
  1528     0440  2C1F               	goto	l1591
  1529     0441  3A0C               	xorlw	12	; case 8
  1530     0442  1903               	skipnz
  1531     0443  2C26               	goto	l1593
  1532     0444  3A1C               	xorlw	28	; case 20
  1533     0445  1903               	skipnz
  1534     0446  2C2D               	goto	l1595
  1535     0447  2C48               	goto	l1601
  1536     0448                     l1601:
  1537                           
  1538                           ;ADC_lib.c: 35:     ADCON0bits.CHS = channel;
  1539     0448  0874               	movf	adc_init@channel,w
  1540     0449  00F5               	movwf	??_adc_init
  1541     044A  0DF5               	rlf	??_adc_init,f
  1542     044B  0DF5               	rlf	??_adc_init,f
  1543     044C  1283               	bcf	3,5	;RP0=0, select bank0
  1544     044D  081F               	movf	31,w	;volatile
  1545     044E  0675               	xorwf	??_adc_init,w
  1546     044F  39C3               	andlw	-61
  1547     0450  0675               	xorwf	??_adc_init,w
  1548     0451  009F               	movwf	31	;volatile
  1549     0452                     l1603:
  1550                           
  1551                           ;ADC_lib.c: 38:     ADON = 1;
  1552     0452  141F               	bsf	31,0	;volatile
  1553     0453                     l38:
  1554     0453  0008               	return
  1555     0454                     __end_of_adc_init:
  1556                           
  1557                           	psect	text3
  1558     00BE                     __ptext3:	
  1559 ;; *************** function _output_LCD *****************
  1560 ;; Defined at:
  1561 ;;		line 115 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1575 ;;      Params:         0       0       0       0       0
  1576 ;;      Locals:         0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0
  1578 ;;      Totals:         0       0       0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 5
  1582 ;; This function calls:
  1583 ;;		_Lcd_Clear
  1584 ;;		_Lcd_Set_Cursor
  1585 ;;		_Lcd_Write_Char
  1586 ;;		_Lcd_Write_String
  1587 ;;		_map
  1588 ;;		_separar_digitos16
  1589 ;;		_separar_digitos8
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595     00BE                     _output_LCD:	
  1596                           ;psect for function _output_LCD
  1597                           
  1598     00BE                     l2003:	
  1599                           ;incstack = 0
  1600                           ; Regs used in _output_LCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1601                           
  1602                           
  1603                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 116:     Lcd_Clear();
  1604     00BE  120A  118A  27EC  120A  118A  	fcall	_Lcd_Clear
  1605                           
  1606                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 117:     Lcd_Set_Cursor(1,1);
  1607     00C3  01F6               	clrf	Lcd_Set_Cursor@b
  1608     00C4  0AF6               	incf	Lcd_Set_Cursor@b,f
  1609     00C5  3001               	movlw	1
  1610     00C6  120A  118A  276D  120A  118A  	fcall	_Lcd_Set_Cursor
  1611     00CB                     l2005:
  1612                           
  1613                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 118:     Lcd_Write_String("Counter: ");
  1614     00CB  3027               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1615     00CC  00F5               	movwf	Lcd_Write_String@a
  1616     00CD  3080               	movlw	128
  1617     00CE  00F6               	movwf	Lcd_Write_String@a+1
  1618     00CF  120A  118A  254D  120A  118A  	fcall	_Lcd_Write_String
  1619     00D4                     l2007:
  1620                           
  1621                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 120:     separar_digitos8(counter, count);
  1622     00D4  304C               	movlw	(low (_count| 0))& (0+255)
  1623     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1624     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1625     00D7  00A0               	movwf	separar_digitos8@dig8
  1626     00D8  0848               	movf	_counter,w
  1627     00D9  120A  118A  2246  120A  118A  	fcall	_separar_digitos8
  1628     00DE                     l2009:
  1629                           
  1630                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 122:     Lcd_Write_String(count);
  1631     00DE  304C               	movlw	(low (_count| 0))& (0+255)
  1632     00DF  00F5               	movwf	Lcd_Write_String@a
  1633     00E0  3000               	movlw	0
  1634     00E1  00F6               	movwf	Lcd_Write_String@a+1
  1635     00E2  120A  118A  254D  120A  118A  	fcall	_Lcd_Write_String
  1636     00E7                     l2011:
  1637                           
  1638                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 124:     pot_volt = map(pot_val,0,255,0,500);
  1639     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1640     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1641     00E9  01B4               	clrf	map@min1
  1642     00EA  30FF               	movlw	255
  1643     00EB  00B5               	movwf	map@max1
  1644     00EC  01B6               	clrf	map@min2
  1645     00ED  3000               	movlw	0
  1646     00EE  00BA               	movwf	map@max2+3
  1647     00EF  3000               	movlw	0
  1648     00F0  00B9               	movwf	map@max2+2
  1649     00F1  3001               	movlw	1
  1650     00F2  00B8               	movwf	map@max2+1
  1651     00F3  30F4               	movlw	244
  1652     00F4  00B7               	movwf	map@max2
  1653     00F5  087B               	movf	_pot_val,w
  1654     00F6  120A  118A  2399  120A  118A  	fcall	_map
  1655     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1656     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1657     00FD  0835               	movf	?_map+1,w
  1658     00FE  00C6               	movwf	_pot_volt+1
  1659     00FF  0834               	movf	?_map,w
  1660     0100  00C5               	movwf	_pot_volt
  1661     0101                     l2013:
  1662                           
  1663                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 125:     separar_digitos16(pot_volt, volt);
  1664     0101  0846               	movf	_pot_volt+1,w
  1665     0102  00A1               	movwf	separar_digitos16@num+1
  1666     0103  0845               	movf	_pot_volt,w
  1667     0104  00A0               	movwf	separar_digitos16@num
  1668     0105  3049               	movlw	(low (_volt| 0))& (0+255)
  1669     0106  00A2               	movwf	separar_digitos16@dig16
  1670     0107  120A  118A  22BF  120A  118A  	fcall	_separar_digitos16
  1671     010C                     l2015:
  1672                           
  1673                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 126:     Lcd_Set_Cursor(2,1);
  1674     010C  01F6               	clrf	Lcd_Set_Cursor@b
  1675     010D  0AF6               	incf	Lcd_Set_Cursor@b,f
  1676     010E  3002               	movlw	2
  1677     010F  120A  118A  276D  120A  118A  	fcall	_Lcd_Set_Cursor
  1678     0114                     l2017:
  1679                           
  1680                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 127:     Lcd_Write_String("Voltage: ");
  1681     0114  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1682     0115  00F5               	movwf	Lcd_Write_String@a
  1683     0116  3080               	movlw	128
  1684     0117  00F6               	movwf	Lcd_Write_String@a+1
  1685     0118  120A  118A  254D  120A  118A  	fcall	_Lcd_Write_String
  1686     011D                     l2019:
  1687                           
  1688                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 129:     Lcd_Write_Char(volt[0]);
  1689     011D  1283               	bcf	3,5	;RP0=0, select bank0
  1690     011E  1303               	bcf	3,6	;RP1=0, select bank0
  1691     011F  0849               	movf	_volt,w
  1692     0120  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1693     0125                     l2021:
  1694                           
  1695                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 130:     Lcd_Write_Char('.');
  1696     0125  302E               	movlw	46
  1697     0126  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1698     012B                     l2023:
  1699                           
  1700                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 131:     Lcd_Write_Char(volt[1]);
  1701     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1702     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1703     012D  084A               	movf	_volt+1,w
  1704     012E  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1705     0133                     l2025:
  1706                           
  1707                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 132:     Lcd_Write_Char(volt[2]);
  1708     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1709     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1710     0135  084B               	movf	_volt+2,w
  1711     0136  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1712     013B                     l2027:
  1713                           
  1714                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 133:     Lcd_Write_Char('V');
  1715     013B  3056               	movlw	86
  1716     013C  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  1717     0141                     l219:
  1718     0141  0008               	return
  1719     0142                     __end_of_output_LCD:
  1720                           
  1721                           	psect	text4
  1722     0246                     __ptext4:	
  1723 ;; *************** function _separar_digitos8 *****************
  1724 ;; Defined at:
  1725 ;;		line 137 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  num             1    wreg     unsigned char 
  1728 ;;  dig8            1    0[BANK0 ] PTR unsigned char 
  1729 ;;		 -> count(3), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  num             1    7[BANK0 ] unsigned char 
  1732 ;;  div1            1    8[BANK0 ] unsigned char 
  1733 ;;  unidades        1    6[BANK0 ] unsigned char 
  1734 ;;  decenas         1    5[BANK0 ] unsigned char 
  1735 ;;  centenas        1    4[BANK0 ] unsigned char 
  1736 ;;  div2            1    3[BANK0 ] unsigned char 
  1737 ;;  div3            1    0        unsigned char 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       1       0       0       0
  1748 ;;      Locals:         0       6       0       0       0
  1749 ;;      Temps:          0       2       0       0       0
  1750 ;;      Totals:         0       9       0       0       0
  1751 ;;Total ram usage:        9 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		___awdiv
  1756 ;;		___awmod
  1757 ;; This function is called by:
  1758 ;;		_output_LCD
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762     0246                     _separar_digitos8:	
  1763                           ;psect for function _separar_digitos8
  1764                           
  1765                           
  1766                           ;incstack = 0
  1767                           ; Regs used in _separar_digitos8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1768                           ;separar_digitos8@num stored from wreg
  1769     0246  1283               	bcf	3,5	;RP0=0, select bank0
  1770     0247  1303               	bcf	3,6	;RP1=0, select bank0
  1771     0248  00A7               	movwf	separar_digitos8@num
  1772     0249                     l1933:
  1773                           
  1774                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 138:     uint8_t div1,div2,div3,centenas,decenas,
      +                          unidades;;../../laboratorio2/Lab2_ED2.X/Lab2.c: 139:     div1 = num / 10;
  1775     0249  300A               	movlw	10
  1776     024A  00F2               	movwf	___awdiv@divisor
  1777     024B  3000               	movlw	0
  1778     024C  00F3               	movwf	___awdiv@divisor+1
  1779     024D  0827               	movf	separar_digitos8@num,w
  1780     024E  00A1               	movwf	??_separar_digitos8
  1781     024F  01A2               	clrf	??_separar_digitos8+1
  1782     0250  0821               	movf	??_separar_digitos8,w
  1783     0251  00F4               	movwf	___awdiv@dividend
  1784     0252  0822               	movf	??_separar_digitos8+1,w
  1785     0253  00F5               	movwf	___awdiv@dividend+1
  1786     0254  120A  118A  2332  120A  118A  	fcall	___awdiv
  1787     0259  0872               	movf	?___awdiv,w
  1788     025A  1283               	bcf	3,5	;RP0=0, select bank0
  1789     025B  1303               	bcf	3,6	;RP1=0, select bank0
  1790     025C  00A8               	movwf	separar_digitos8@div1
  1791                           
  1792                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 140:     unidades = num % 10;
  1793     025D  300A               	movlw	10
  1794     025E  00F2               	movwf	___awmod@divisor
  1795     025F  3000               	movlw	0
  1796     0260  00F3               	movwf	___awmod@divisor+1
  1797     0261  0827               	movf	separar_digitos8@num,w
  1798     0262  00A1               	movwf	??_separar_digitos8
  1799     0263  01A2               	clrf	??_separar_digitos8+1
  1800     0264  0821               	movf	??_separar_digitos8,w
  1801     0265  00F4               	movwf	___awmod@dividend
  1802     0266  0822               	movf	??_separar_digitos8+1,w
  1803     0267  00F5               	movwf	___awmod@dividend+1
  1804     0268  120A  118A  2454  120A  118A  	fcall	___awmod
  1805     026D  0872               	movf	?___awmod,w
  1806     026E  1283               	bcf	3,5	;RP0=0, select bank0
  1807     026F  1303               	bcf	3,6	;RP1=0, select bank0
  1808     0270  00A6               	movwf	separar_digitos8@unidades
  1809                           
  1810                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 141:     div2 = div1 / 10;
  1811     0271  300A               	movlw	10
  1812     0272  00F2               	movwf	___awdiv@divisor
  1813     0273  3000               	movlw	0
  1814     0274  00F3               	movwf	___awdiv@divisor+1
  1815     0275  0828               	movf	separar_digitos8@div1,w
  1816     0276  00A1               	movwf	??_separar_digitos8
  1817     0277  01A2               	clrf	??_separar_digitos8+1
  1818     0278  0821               	movf	??_separar_digitos8,w
  1819     0279  00F4               	movwf	___awdiv@dividend
  1820     027A  0822               	movf	??_separar_digitos8+1,w
  1821     027B  00F5               	movwf	___awdiv@dividend+1
  1822     027C  120A  118A  2332  120A  118A  	fcall	___awdiv
  1823     0281  0872               	movf	?___awdiv,w
  1824     0282  1283               	bcf	3,5	;RP0=0, select bank0
  1825     0283  1303               	bcf	3,6	;RP1=0, select bank0
  1826     0284  00A3               	movwf	separar_digitos8@div2
  1827                           
  1828                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 142:     decenas = div1 % 10;
  1829     0285  300A               	movlw	10
  1830     0286  00F2               	movwf	___awmod@divisor
  1831     0287  3000               	movlw	0
  1832     0288  00F3               	movwf	___awmod@divisor+1
  1833     0289  0828               	movf	separar_digitos8@div1,w
  1834     028A  00A1               	movwf	??_separar_digitos8
  1835     028B  01A2               	clrf	??_separar_digitos8+1
  1836     028C  0821               	movf	??_separar_digitos8,w
  1837     028D  00F4               	movwf	___awmod@dividend
  1838     028E  0822               	movf	??_separar_digitos8+1,w
  1839     028F  00F5               	movwf	___awmod@dividend+1
  1840     0290  120A  118A  2454  120A  118A  	fcall	___awmod
  1841     0295  0872               	movf	?___awmod,w
  1842     0296  1283               	bcf	3,5	;RP0=0, select bank0
  1843     0297  1303               	bcf	3,6	;RP1=0, select bank0
  1844     0298  00A5               	movwf	separar_digitos8@decenas
  1845                           
  1846                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 144:     centenas = div2 % 10;
  1847     0299  300A               	movlw	10
  1848     029A  00F2               	movwf	___awmod@divisor
  1849     029B  3000               	movlw	0
  1850     029C  00F3               	movwf	___awmod@divisor+1
  1851     029D  0823               	movf	separar_digitos8@div2,w
  1852     029E  00A1               	movwf	??_separar_digitos8
  1853     029F  01A2               	clrf	??_separar_digitos8+1
  1854     02A0  0821               	movf	??_separar_digitos8,w
  1855     02A1  00F4               	movwf	___awmod@dividend
  1856     02A2  0822               	movf	??_separar_digitos8+1,w
  1857     02A3  00F5               	movwf	___awmod@dividend+1
  1858     02A4  120A  118A  2454  120A  118A  	fcall	___awmod
  1859     02A9  0872               	movf	?___awmod,w
  1860     02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1861     02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1862     02AC  00A4               	movwf	separar_digitos8@centenas
  1863     02AD                     l1935:
  1864                           
  1865                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 146:     dig8[2] = unidades + 0x30;
  1866     02AD  0820               	movf	separar_digitos8@dig8,w
  1867     02AE  3E02               	addlw	2
  1868     02AF  0084               	movwf	4
  1869     02B0  0826               	movf	separar_digitos8@unidades,w
  1870     02B1  3E30               	addlw	48
  1871     02B2  1383               	bcf	3,7	;select IRP bank0
  1872     02B3  0080               	movwf	0
  1873     02B4                     l1937:
  1874                           
  1875                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 147:     dig8[1] = decenas + 0x30;
  1876     02B4  0A20               	incf	separar_digitos8@dig8,w
  1877     02B5  0084               	movwf	4
  1878     02B6  0825               	movf	separar_digitos8@decenas,w
  1879     02B7  3E30               	addlw	48
  1880     02B8  0080               	movwf	0
  1881     02B9                     l1939:
  1882                           
  1883                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 148:     dig8[0] = centenas + 0x30;
  1884     02B9  0820               	movf	separar_digitos8@dig8,w
  1885     02BA  0084               	movwf	4
  1886     02BB  0824               	movf	separar_digitos8@centenas,w
  1887     02BC  3E30               	addlw	48
  1888     02BD  0080               	movwf	0
  1889     02BE                     l222:
  1890     02BE  0008               	return
  1891     02BF                     __end_of_separar_digitos8:
  1892                           
  1893                           	psect	text5
  1894     0454                     __ptext5:	
  1895 ;; *************** function ___awmod *****************
  1896 ;; Defined at:
  1897 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  divisor         2    2[COMMON] int 
  1900 ;;  dividend        2    4[COMMON] int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  sign            1    7[COMMON] unsigned char 
  1903 ;;  counter         1    6[COMMON] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2    2[COMMON] int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, btemp+1
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         4       0       0       0       0
  1914 ;;      Locals:         2       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         6       0       0       0       0
  1917 ;;Total ram usage:        6 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 2
  1920 ;; This function calls:
  1921 ;;		Nothing
  1922 ;; This function is called by:
  1923 ;;		_separar_digitos8
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927     0454                     ___awmod:	
  1928                           ;psect for function ___awmod
  1929                           
  1930     0454                     l1501:	
  1931                           ;incstack = 0
  1932                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1933                           
  1934     0454  01F7               	clrf	___awmod@sign
  1935     0455                     l1503:
  1936     0455  1FF5               	btfss	___awmod@dividend+1,7
  1937     0456  2C58               	goto	u1121
  1938     0457  2C59               	goto	u1120
  1939     0458                     u1121:
  1940     0458  2C60               	goto	l1509
  1941     0459                     u1120:
  1942     0459                     l1505:
  1943     0459  09F4               	comf	___awmod@dividend,f
  1944     045A  09F5               	comf	___awmod@dividend+1,f
  1945     045B  0AF4               	incf	___awmod@dividend,f
  1946     045C  1903               	skipnz
  1947     045D  0AF5               	incf	___awmod@dividend+1,f
  1948     045E                     l1507:
  1949     045E  01F7               	clrf	___awmod@sign
  1950     045F  0AF7               	incf	___awmod@sign,f
  1951     0460                     l1509:
  1952     0460  1FF3               	btfss	___awmod@divisor+1,7
  1953     0461  2C63               	goto	u1131
  1954     0462  2C64               	goto	u1130
  1955     0463                     u1131:
  1956     0463  2C69               	goto	l1513
  1957     0464                     u1130:
  1958     0464                     l1511:
  1959     0464  09F2               	comf	___awmod@divisor,f
  1960     0465  09F3               	comf	___awmod@divisor+1,f
  1961     0466  0AF2               	incf	___awmod@divisor,f
  1962     0467  1903               	skipnz
  1963     0468  0AF3               	incf	___awmod@divisor+1,f
  1964     0469                     l1513:
  1965     0469  0872               	movf	___awmod@divisor,w
  1966     046A  0473               	iorwf	___awmod@divisor+1,w
  1967     046B  1903               	btfsc	3,2
  1968     046C  2C6E               	goto	u1141
  1969     046D  2C6F               	goto	u1140
  1970     046E                     u1141:
  1971     046E  2C9E               	goto	l1531
  1972     046F                     u1140:
  1973     046F                     l1515:
  1974     046F  01F6               	clrf	___awmod@counter
  1975     0470  0AF6               	incf	___awmod@counter,f
  1976     0471  2C7D               	goto	l1521
  1977     0472                     l1517:
  1978     0472  3001               	movlw	1
  1979     0473                     u1155:
  1980     0473  1003               	clrc
  1981     0474  0DF2               	rlf	___awmod@divisor,f
  1982     0475  0DF3               	rlf	___awmod@divisor+1,f
  1983     0476  3EFF               	addlw	-1
  1984     0477  1D03               	skipz
  1985     0478  2C73               	goto	u1155
  1986     0479                     l1519:
  1987     0479  3001               	movlw	1
  1988     047A  00FF               	movwf	btemp+1
  1989     047B  087F               	movf	btemp+1,w
  1990     047C  07F6               	addwf	___awmod@counter,f
  1991     047D                     l1521:
  1992     047D  1FF3               	btfss	___awmod@divisor+1,7
  1993     047E  2C80               	goto	u1161
  1994     047F  2C81               	goto	u1160
  1995     0480                     u1161:
  1996     0480  2C72               	goto	l1517
  1997     0481                     u1160:
  1998     0481                     l1523:
  1999     0481  0873               	movf	___awmod@divisor+1,w
  2000     0482  0275               	subwf	___awmod@dividend+1,w
  2001     0483  1D03               	skipz
  2002     0484  2C87               	goto	u1175
  2003     0485  0872               	movf	___awmod@divisor,w
  2004     0486  0274               	subwf	___awmod@dividend,w
  2005     0487                     u1175:
  2006     0487  1C03               	skipc
  2007     0488  2C8A               	goto	u1171
  2008     0489  2C8B               	goto	u1170
  2009     048A                     u1171:
  2010     048A  2C91               	goto	l1527
  2011     048B                     u1170:
  2012     048B                     l1525:
  2013     048B  0872               	movf	___awmod@divisor,w
  2014     048C  02F4               	subwf	___awmod@dividend,f
  2015     048D  0873               	movf	___awmod@divisor+1,w
  2016     048E  1C03               	skipc
  2017     048F  03F5               	decf	___awmod@dividend+1,f
  2018     0490  02F5               	subwf	___awmod@dividend+1,f
  2019     0491                     l1527:
  2020     0491  3001               	movlw	1
  2021     0492                     u1185:
  2022     0492  1003               	clrc
  2023     0493  0CF3               	rrf	___awmod@divisor+1,f
  2024     0494  0CF2               	rrf	___awmod@divisor,f
  2025     0495  3EFF               	addlw	-1
  2026     0496  1D03               	skipz
  2027     0497  2C92               	goto	u1185
  2028     0498                     l1529:
  2029     0498  3001               	movlw	1
  2030     0499  02F6               	subwf	___awmod@counter,f
  2031     049A  1D03               	btfss	3,2
  2032     049B  2C9D               	goto	u1191
  2033     049C  2C9E               	goto	u1190
  2034     049D                     u1191:
  2035     049D  2C81               	goto	l1523
  2036     049E                     u1190:
  2037     049E                     l1531:
  2038     049E  0877               	movf	___awmod@sign,w
  2039     049F  1903               	btfsc	3,2
  2040     04A0  2CA2               	goto	u1201
  2041     04A1  2CA3               	goto	u1200
  2042     04A2                     u1201:
  2043     04A2  2CA8               	goto	l1535
  2044     04A3                     u1200:
  2045     04A3                     l1533:
  2046     04A3  09F4               	comf	___awmod@dividend,f
  2047     04A4  09F5               	comf	___awmod@dividend+1,f
  2048     04A5  0AF4               	incf	___awmod@dividend,f
  2049     04A6  1903               	skipnz
  2050     04A7  0AF5               	incf	___awmod@dividend+1,f
  2051     04A8                     l1535:
  2052     04A8  0875               	movf	___awmod@dividend+1,w
  2053     04A9  00F3               	movwf	?___awmod+1
  2054     04AA  0874               	movf	___awmod@dividend,w
  2055     04AB  00F2               	movwf	?___awmod
  2056     04AC                     l537:
  2057     04AC  0008               	return
  2058     04AD                     __end_of___awmod:
  2059                           
  2060                           	psect	text6
  2061     0332                     __ptext6:	
  2062 ;; *************** function ___awdiv *****************
  2063 ;; Defined at:
  2064 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  divisor         2    2[COMMON] int 
  2067 ;;  dividend        2    4[COMMON] int 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  quotient        2    8[COMMON] int 
  2070 ;;  sign            1    7[COMMON] unsigned char 
  2071 ;;  counter         1    6[COMMON] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  2    2[COMMON] int 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, btemp+1
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2081 ;;      Params:         4       0       0       0       0
  2082 ;;      Locals:         4       0       0       0       0
  2083 ;;      Temps:          0       0       0       0       0
  2084 ;;      Totals:         8       0       0       0       0
  2085 ;;Total ram usage:        8 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 2
  2088 ;; This function calls:
  2089 ;;		Nothing
  2090 ;; This function is called by:
  2091 ;;		_separar_digitos8
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095     0332                     ___awdiv:	
  2096                           ;psect for function ___awdiv
  2097                           
  2098     0332                     l1457:	
  2099                           ;incstack = 0
  2100                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2101                           
  2102     0332  01F7               	clrf	___awdiv@sign
  2103     0333                     l1459:
  2104     0333  1FF3               	btfss	___awdiv@divisor+1,7
  2105     0334  2B36               	goto	u1021
  2106     0335  2B37               	goto	u1020
  2107     0336                     u1021:
  2108     0336  2B3E               	goto	l1465
  2109     0337                     u1020:
  2110     0337                     l1461:
  2111     0337  09F2               	comf	___awdiv@divisor,f
  2112     0338  09F3               	comf	___awdiv@divisor+1,f
  2113     0339  0AF2               	incf	___awdiv@divisor,f
  2114     033A  1903               	skipnz
  2115     033B  0AF3               	incf	___awdiv@divisor+1,f
  2116     033C                     l1463:
  2117     033C  01F7               	clrf	___awdiv@sign
  2118     033D  0AF7               	incf	___awdiv@sign,f
  2119     033E                     l1465:
  2120     033E  1FF5               	btfss	___awdiv@dividend+1,7
  2121     033F  2B41               	goto	u1031
  2122     0340  2B42               	goto	u1030
  2123     0341                     u1031:
  2124     0341  2B4B               	goto	l1471
  2125     0342                     u1030:
  2126     0342                     l1467:
  2127     0342  09F4               	comf	___awdiv@dividend,f
  2128     0343  09F5               	comf	___awdiv@dividend+1,f
  2129     0344  0AF4               	incf	___awdiv@dividend,f
  2130     0345  1903               	skipnz
  2131     0346  0AF5               	incf	___awdiv@dividend+1,f
  2132     0347                     l1469:
  2133     0347  3001               	movlw	1
  2134     0348  00FF               	movwf	btemp+1
  2135     0349  087F               	movf	btemp+1,w
  2136     034A  06F7               	xorwf	___awdiv@sign,f
  2137     034B                     l1471:
  2138     034B  01F8               	clrf	___awdiv@quotient
  2139     034C  01F9               	clrf	___awdiv@quotient+1
  2140     034D                     l1473:
  2141     034D  0872               	movf	___awdiv@divisor,w
  2142     034E  0473               	iorwf	___awdiv@divisor+1,w
  2143     034F  1903               	btfsc	3,2
  2144     0350  2B52               	goto	u1041
  2145     0351  2B53               	goto	u1040
  2146     0352                     u1041:
  2147     0352  2B8A               	goto	l1493
  2148     0353                     u1040:
  2149     0353                     l1475:
  2150     0353  01F6               	clrf	___awdiv@counter
  2151     0354  0AF6               	incf	___awdiv@counter,f
  2152     0355  2B61               	goto	l1481
  2153     0356                     l1477:
  2154     0356  3001               	movlw	1
  2155     0357                     u1055:
  2156     0357  1003               	clrc
  2157     0358  0DF2               	rlf	___awdiv@divisor,f
  2158     0359  0DF3               	rlf	___awdiv@divisor+1,f
  2159     035A  3EFF               	addlw	-1
  2160     035B  1D03               	skipz
  2161     035C  2B57               	goto	u1055
  2162     035D                     l1479:
  2163     035D  3001               	movlw	1
  2164     035E  00FF               	movwf	btemp+1
  2165     035F  087F               	movf	btemp+1,w
  2166     0360  07F6               	addwf	___awdiv@counter,f
  2167     0361                     l1481:
  2168     0361  1FF3               	btfss	___awdiv@divisor+1,7
  2169     0362  2B64               	goto	u1061
  2170     0363  2B65               	goto	u1060
  2171     0364                     u1061:
  2172     0364  2B56               	goto	l1477
  2173     0365                     u1060:
  2174     0365                     l1483:
  2175     0365  3001               	movlw	1
  2176     0366                     u1075:
  2177     0366  1003               	clrc
  2178     0367  0DF8               	rlf	___awdiv@quotient,f
  2179     0368  0DF9               	rlf	___awdiv@quotient+1,f
  2180     0369  3EFF               	addlw	-1
  2181     036A  1D03               	skipz
  2182     036B  2B66               	goto	u1075
  2183     036C  0873               	movf	___awdiv@divisor+1,w
  2184     036D  0275               	subwf	___awdiv@dividend+1,w
  2185     036E  1D03               	skipz
  2186     036F  2B72               	goto	u1085
  2187     0370  0872               	movf	___awdiv@divisor,w
  2188     0371  0274               	subwf	___awdiv@dividend,w
  2189     0372                     u1085:
  2190     0372  1C03               	skipc
  2191     0373  2B75               	goto	u1081
  2192     0374  2B76               	goto	u1080
  2193     0375                     u1081:
  2194     0375  2B7D               	goto	l1489
  2195     0376                     u1080:
  2196     0376                     l1485:
  2197     0376  0872               	movf	___awdiv@divisor,w
  2198     0377  02F4               	subwf	___awdiv@dividend,f
  2199     0378  0873               	movf	___awdiv@divisor+1,w
  2200     0379  1C03               	skipc
  2201     037A  03F5               	decf	___awdiv@dividend+1,f
  2202     037B  02F5               	subwf	___awdiv@dividend+1,f
  2203     037C                     l1487:
  2204     037C  1478               	bsf	___awdiv@quotient,0
  2205     037D                     l1489:
  2206     037D  3001               	movlw	1
  2207     037E                     u1095:
  2208     037E  1003               	clrc
  2209     037F  0CF3               	rrf	___awdiv@divisor+1,f
  2210     0380  0CF2               	rrf	___awdiv@divisor,f
  2211     0381  3EFF               	addlw	-1
  2212     0382  1D03               	skipz
  2213     0383  2B7E               	goto	u1095
  2214     0384                     l1491:
  2215     0384  3001               	movlw	1
  2216     0385  02F6               	subwf	___awdiv@counter,f
  2217     0386  1D03               	btfss	3,2
  2218     0387  2B89               	goto	u1101
  2219     0388  2B8A               	goto	u1100
  2220     0389                     u1101:
  2221     0389  2B65               	goto	l1483
  2222     038A                     u1100:
  2223     038A                     l1493:
  2224     038A  0877               	movf	___awdiv@sign,w
  2225     038B  1903               	btfsc	3,2
  2226     038C  2B8E               	goto	u1111
  2227     038D  2B8F               	goto	u1110
  2228     038E                     u1111:
  2229     038E  2B94               	goto	l1497
  2230     038F                     u1110:
  2231     038F                     l1495:
  2232     038F  09F8               	comf	___awdiv@quotient,f
  2233     0390  09F9               	comf	___awdiv@quotient+1,f
  2234     0391  0AF8               	incf	___awdiv@quotient,f
  2235     0392  1903               	skipnz
  2236     0393  0AF9               	incf	___awdiv@quotient+1,f
  2237     0394                     l1497:
  2238     0394  0879               	movf	___awdiv@quotient+1,w
  2239     0395  00F3               	movwf	?___awdiv+1
  2240     0396  0878               	movf	___awdiv@quotient,w
  2241     0397  00F2               	movwf	?___awdiv
  2242     0398                     l524:
  2243     0398  0008               	return
  2244     0399                     __end_of___awdiv:
  2245                           
  2246                           	psect	text7
  2247     02BF                     __ptext7:	
  2248 ;; *************** function _separar_digitos16 *****************
  2249 ;; Defined at:
  2250 ;;		line 151 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  num             2    0[BANK0 ] unsigned int 
  2253 ;;  dig16           1    2[BANK0 ] PTR unsigned char 
  2254 ;;		 -> volt(3), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;  div1            2   11[BANK0 ] unsigned int 
  2257 ;;  unidades        2    9[BANK0 ] unsigned int 
  2258 ;;  decenas         2    7[BANK0 ] unsigned int 
  2259 ;;  centenas        2    5[BANK0 ] unsigned int 
  2260 ;;  div2            2    3[BANK0 ] unsigned int 
  2261 ;;  div3            2    0        unsigned int 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       3       0       0       0
  2272 ;;      Locals:         0      10       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0      13       0       0       0
  2275 ;;Total ram usage:       13 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 3
  2278 ;; This function calls:
  2279 ;;		___lwdiv
  2280 ;;		___lwmod
  2281 ;; This function is called by:
  2282 ;;		_output_LCD
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     02BF                     _separar_digitos16:	
  2287                           ;psect for function _separar_digitos16
  2288                           
  2289     02BF                     l1945:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _separar_digitos16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2292                           
  2293                           
  2294                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 152:     uint16_t div1,div2,div3,centenas,decenas
      +                          ,unidades;;../../laboratorio2/Lab2_ED2.X/Lab2.c: 153:     div1 = num / 10;
  2295     02BF  300A               	movlw	10
  2296     02C0  00F2               	movwf	___lwdiv@divisor
  2297     02C1  3000               	movlw	0
  2298     02C2  00F3               	movwf	___lwdiv@divisor+1
  2299     02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2300     02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2301     02C5  0821               	movf	separar_digitos16@num+1,w
  2302     02C6  00F5               	movwf	___lwdiv@dividend+1
  2303     02C7  0820               	movf	separar_digitos16@num,w
  2304     02C8  00F4               	movwf	___lwdiv@dividend
  2305     02C9  120A  118A  25D7  120A  118A  	fcall	___lwdiv
  2306     02CE  0873               	movf	?___lwdiv+1,w
  2307     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2308     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2309     02D1  00AC               	movwf	separar_digitos16@div1+1
  2310     02D2  0872               	movf	?___lwdiv,w
  2311     02D3  00AB               	movwf	separar_digitos16@div1
  2312                           
  2313                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 154:     unidades = num % 10;
  2314     02D4  300A               	movlw	10
  2315     02D5  00F2               	movwf	___lwmod@divisor
  2316     02D6  3000               	movlw	0
  2317     02D7  00F3               	movwf	___lwmod@divisor+1
  2318     02D8  0821               	movf	separar_digitos16@num+1,w
  2319     02D9  00F5               	movwf	___lwmod@dividend+1
  2320     02DA  0820               	movf	separar_digitos16@num,w
  2321     02DB  00F4               	movwf	___lwmod@dividend
  2322     02DC  120A  118A  26D8  120A  118A  	fcall	___lwmod
  2323     02E1  0873               	movf	?___lwmod+1,w
  2324     02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2325     02E3  1303               	bcf	3,6	;RP1=0, select bank0
  2326     02E4  00AA               	movwf	separar_digitos16@unidades+1
  2327     02E5  0872               	movf	?___lwmod,w
  2328     02E6  00A9               	movwf	separar_digitos16@unidades
  2329                           
  2330                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 155:     div2 = div1 / 10;
  2331     02E7  300A               	movlw	10
  2332     02E8  00F2               	movwf	___lwdiv@divisor
  2333     02E9  3000               	movlw	0
  2334     02EA  00F3               	movwf	___lwdiv@divisor+1
  2335     02EB  082C               	movf	separar_digitos16@div1+1,w
  2336     02EC  00F5               	movwf	___lwdiv@dividend+1
  2337     02ED  082B               	movf	separar_digitos16@div1,w
  2338     02EE  00F4               	movwf	___lwdiv@dividend
  2339     02EF  120A  118A  25D7  120A  118A  	fcall	___lwdiv
  2340     02F4  0873               	movf	?___lwdiv+1,w
  2341     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2342     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2343     02F7  00A4               	movwf	separar_digitos16@div2+1
  2344     02F8  0872               	movf	?___lwdiv,w
  2345     02F9  00A3               	movwf	separar_digitos16@div2
  2346                           
  2347                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 156:     decenas = div1 % 10;
  2348     02FA  300A               	movlw	10
  2349     02FB  00F2               	movwf	___lwmod@divisor
  2350     02FC  3000               	movlw	0
  2351     02FD  00F3               	movwf	___lwmod@divisor+1
  2352     02FE  082C               	movf	separar_digitos16@div1+1,w
  2353     02FF  00F5               	movwf	___lwmod@dividend+1
  2354     0300  082B               	movf	separar_digitos16@div1,w
  2355     0301  00F4               	movwf	___lwmod@dividend
  2356     0302  120A  118A  26D8  120A  118A  	fcall	___lwmod
  2357     0307  0873               	movf	?___lwmod+1,w
  2358     0308  1283               	bcf	3,5	;RP0=0, select bank0
  2359     0309  1303               	bcf	3,6	;RP1=0, select bank0
  2360     030A  00A8               	movwf	separar_digitos16@decenas+1
  2361     030B  0872               	movf	?___lwmod,w
  2362     030C  00A7               	movwf	separar_digitos16@decenas
  2363                           
  2364                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 158:     centenas = div2 % 10;
  2365     030D  300A               	movlw	10
  2366     030E  00F2               	movwf	___lwmod@divisor
  2367     030F  3000               	movlw	0
  2368     0310  00F3               	movwf	___lwmod@divisor+1
  2369     0311  0824               	movf	separar_digitos16@div2+1,w
  2370     0312  00F5               	movwf	___lwmod@dividend+1
  2371     0313  0823               	movf	separar_digitos16@div2,w
  2372     0314  00F4               	movwf	___lwmod@dividend
  2373     0315  120A  118A  26D8  120A  118A  	fcall	___lwmod
  2374     031A  0873               	movf	?___lwmod+1,w
  2375     031B  1283               	bcf	3,5	;RP0=0, select bank0
  2376     031C  1303               	bcf	3,6	;RP1=0, select bank0
  2377     031D  00A6               	movwf	separar_digitos16@centenas+1
  2378     031E  0872               	movf	?___lwmod,w
  2379     031F  00A5               	movwf	separar_digitos16@centenas
  2380     0320                     l1947:
  2381                           
  2382                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 160:     dig16[2] = unidades + 0x30;
  2383     0320  0822               	movf	separar_digitos16@dig16,w
  2384     0321  3E02               	addlw	2
  2385     0322  0084               	movwf	4
  2386     0323  0829               	movf	separar_digitos16@unidades,w
  2387     0324  3E30               	addlw	48
  2388     0325  1383               	bcf	3,7	;select IRP bank0
  2389     0326  0080               	movwf	0
  2390     0327                     l1949:
  2391                           
  2392                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 161:     dig16[1] = decenas + 0x30;
  2393     0327  0A22               	incf	separar_digitos16@dig16,w
  2394     0328  0084               	movwf	4
  2395     0329  0827               	movf	separar_digitos16@decenas,w
  2396     032A  3E30               	addlw	48
  2397     032B  0080               	movwf	0
  2398     032C                     l1951:
  2399                           
  2400                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 162:     dig16[0] = centenas + 0x30;
  2401     032C  0822               	movf	separar_digitos16@dig16,w
  2402     032D  0084               	movwf	4
  2403     032E  0825               	movf	separar_digitos16@centenas,w
  2404     032F  3E30               	addlw	48
  2405     0330  0080               	movwf	0
  2406     0331                     l225:
  2407     0331  0008               	return
  2408     0332                     __end_of_separar_digitos16:
  2409                           
  2410                           	psect	text8
  2411     06D8                     __ptext8:	
  2412 ;; *************** function ___lwmod *****************
  2413 ;; Defined at:
  2414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  divisor         2    2[COMMON] unsigned int 
  2417 ;;  dividend        2    4[COMMON] unsigned int 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  counter         1    6[COMMON] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    2[COMMON] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, btemp+1
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         4       0       0       0       0
  2430 ;;      Locals:         1       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0
  2432 ;;      Totals:         5       0       0       0       0
  2433 ;;Total ram usage:        5 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 2
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_separar_digitos16
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443     06D8                     ___lwmod:	
  2444                           ;psect for function ___lwmod
  2445                           
  2446     06D8                     l1565:	
  2447                           ;incstack = 0
  2448                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2449                           
  2450     06D8  0872               	movf	___lwmod@divisor,w
  2451     06D9  0473               	iorwf	___lwmod@divisor+1,w
  2452     06DA  1903               	btfsc	3,2
  2453     06DB  2EDD               	goto	u1281
  2454     06DC  2EDE               	goto	u1280
  2455     06DD                     u1281:
  2456     06DD  2F0D               	goto	l1583
  2457     06DE                     u1280:
  2458     06DE                     l1567:
  2459     06DE  01F6               	clrf	___lwmod@counter
  2460     06DF  0AF6               	incf	___lwmod@counter,f
  2461     06E0  2EEC               	goto	l1573
  2462     06E1                     l1569:
  2463     06E1  3001               	movlw	1
  2464     06E2                     u1295:
  2465     06E2  1003               	clrc
  2466     06E3  0DF2               	rlf	___lwmod@divisor,f
  2467     06E4  0DF3               	rlf	___lwmod@divisor+1,f
  2468     06E5  3EFF               	addlw	-1
  2469     06E6  1D03               	skipz
  2470     06E7  2EE2               	goto	u1295
  2471     06E8                     l1571:
  2472     06E8  3001               	movlw	1
  2473     06E9  00FF               	movwf	btemp+1
  2474     06EA  087F               	movf	btemp+1,w
  2475     06EB  07F6               	addwf	___lwmod@counter,f
  2476     06EC                     l1573:
  2477     06EC  1FF3               	btfss	___lwmod@divisor+1,7
  2478     06ED  2EEF               	goto	u1301
  2479     06EE  2EF0               	goto	u1300
  2480     06EF                     u1301:
  2481     06EF  2EE1               	goto	l1569
  2482     06F0                     u1300:
  2483     06F0                     l1575:
  2484     06F0  0873               	movf	___lwmod@divisor+1,w
  2485     06F1  0275               	subwf	___lwmod@dividend+1,w
  2486     06F2  1D03               	skipz
  2487     06F3  2EF6               	goto	u1315
  2488     06F4  0872               	movf	___lwmod@divisor,w
  2489     06F5  0274               	subwf	___lwmod@dividend,w
  2490     06F6                     u1315:
  2491     06F6  1C03               	skipc
  2492     06F7  2EF9               	goto	u1311
  2493     06F8  2EFA               	goto	u1310
  2494     06F9                     u1311:
  2495     06F9  2F00               	goto	l1579
  2496     06FA                     u1310:
  2497     06FA                     l1577:
  2498     06FA  0872               	movf	___lwmod@divisor,w
  2499     06FB  02F4               	subwf	___lwmod@dividend,f
  2500     06FC  0873               	movf	___lwmod@divisor+1,w
  2501     06FD  1C03               	skipc
  2502     06FE  03F5               	decf	___lwmod@dividend+1,f
  2503     06FF  02F5               	subwf	___lwmod@dividend+1,f
  2504     0700                     l1579:
  2505     0700  3001               	movlw	1
  2506     0701                     u1325:
  2507     0701  1003               	clrc
  2508     0702  0CF3               	rrf	___lwmod@divisor+1,f
  2509     0703  0CF2               	rrf	___lwmod@divisor,f
  2510     0704  3EFF               	addlw	-1
  2511     0705  1D03               	skipz
  2512     0706  2F01               	goto	u1325
  2513     0707                     l1581:
  2514     0707  3001               	movlw	1
  2515     0708  02F6               	subwf	___lwmod@counter,f
  2516     0709  1D03               	btfss	3,2
  2517     070A  2F0C               	goto	u1331
  2518     070B  2F0D               	goto	u1330
  2519     070C                     u1331:
  2520     070C  2EF0               	goto	l1575
  2521     070D                     u1330:
  2522     070D                     l1583:
  2523     070D  0875               	movf	___lwmod@dividend+1,w
  2524     070E  00F3               	movwf	?___lwmod+1
  2525     070F  0874               	movf	___lwmod@dividend,w
  2526     0710  00F2               	movwf	?___lwmod
  2527     0711                     l653:
  2528     0711  0008               	return
  2529     0712                     __end_of___lwmod:
  2530                           
  2531                           	psect	text9
  2532     05D7                     __ptext9:	
  2533 ;; *************** function ___lwdiv *****************
  2534 ;; Defined at:
  2535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  divisor         2    2[COMMON] unsigned int 
  2538 ;;  dividend        2    4[COMMON] unsigned int 
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;  quotient        2    6[COMMON] unsigned int 
  2541 ;;  counter         1    8[COMMON] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2    2[COMMON] unsigned int 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, btemp+1
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         4       0       0       0       0
  2552 ;;      Locals:         3       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         7       0       0       0       0
  2555 ;;Total ram usage:        7 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 2
  2558 ;; This function calls:
  2559 ;;		Nothing
  2560 ;; This function is called by:
  2561 ;;		_separar_digitos16
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565     05D7                     ___lwdiv:	
  2566                           ;psect for function ___lwdiv
  2567                           
  2568     05D7                     l1539:	
  2569                           ;incstack = 0
  2570                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2571                           
  2572     05D7  01F6               	clrf	___lwdiv@quotient
  2573     05D8  01F7               	clrf	___lwdiv@quotient+1
  2574     05D9                     l1541:
  2575     05D9  0872               	movf	___lwdiv@divisor,w
  2576     05DA  0473               	iorwf	___lwdiv@divisor+1,w
  2577     05DB  1903               	btfsc	3,2
  2578     05DC  2DDE               	goto	u1211
  2579     05DD  2DDF               	goto	u1210
  2580     05DE                     u1211:
  2581     05DE  2E16               	goto	l1561
  2582     05DF                     u1210:
  2583     05DF                     l1543:
  2584     05DF  01F8               	clrf	___lwdiv@counter
  2585     05E0  0AF8               	incf	___lwdiv@counter,f
  2586     05E1  2DED               	goto	l1549
  2587     05E2                     l1545:
  2588     05E2  3001               	movlw	1
  2589     05E3                     u1225:
  2590     05E3  1003               	clrc
  2591     05E4  0DF2               	rlf	___lwdiv@divisor,f
  2592     05E5  0DF3               	rlf	___lwdiv@divisor+1,f
  2593     05E6  3EFF               	addlw	-1
  2594     05E7  1D03               	skipz
  2595     05E8  2DE3               	goto	u1225
  2596     05E9                     l1547:
  2597     05E9  3001               	movlw	1
  2598     05EA  00FF               	movwf	btemp+1
  2599     05EB  087F               	movf	btemp+1,w
  2600     05EC  07F8               	addwf	___lwdiv@counter,f
  2601     05ED                     l1549:
  2602     05ED  1FF3               	btfss	___lwdiv@divisor+1,7
  2603     05EE  2DF0               	goto	u1231
  2604     05EF  2DF1               	goto	u1230
  2605     05F0                     u1231:
  2606     05F0  2DE2               	goto	l1545
  2607     05F1                     u1230:
  2608     05F1                     l1551:
  2609     05F1  3001               	movlw	1
  2610     05F2                     u1245:
  2611     05F2  1003               	clrc
  2612     05F3  0DF6               	rlf	___lwdiv@quotient,f
  2613     05F4  0DF7               	rlf	___lwdiv@quotient+1,f
  2614     05F5  3EFF               	addlw	-1
  2615     05F6  1D03               	skipz
  2616     05F7  2DF2               	goto	u1245
  2617     05F8  0873               	movf	___lwdiv@divisor+1,w
  2618     05F9  0275               	subwf	___lwdiv@dividend+1,w
  2619     05FA  1D03               	skipz
  2620     05FB  2DFE               	goto	u1255
  2621     05FC  0872               	movf	___lwdiv@divisor,w
  2622     05FD  0274               	subwf	___lwdiv@dividend,w
  2623     05FE                     u1255:
  2624     05FE  1C03               	skipc
  2625     05FF  2E01               	goto	u1251
  2626     0600  2E02               	goto	u1250
  2627     0601                     u1251:
  2628     0601  2E09               	goto	l1557
  2629     0602                     u1250:
  2630     0602                     l1553:
  2631     0602  0872               	movf	___lwdiv@divisor,w
  2632     0603  02F4               	subwf	___lwdiv@dividend,f
  2633     0604  0873               	movf	___lwdiv@divisor+1,w
  2634     0605  1C03               	skipc
  2635     0606  03F5               	decf	___lwdiv@dividend+1,f
  2636     0607  02F5               	subwf	___lwdiv@dividend+1,f
  2637     0608                     l1555:
  2638     0608  1476               	bsf	___lwdiv@quotient,0
  2639     0609                     l1557:
  2640     0609  3001               	movlw	1
  2641     060A                     u1265:
  2642     060A  1003               	clrc
  2643     060B  0CF3               	rrf	___lwdiv@divisor+1,f
  2644     060C  0CF2               	rrf	___lwdiv@divisor,f
  2645     060D  3EFF               	addlw	-1
  2646     060E  1D03               	skipz
  2647     060F  2E0A               	goto	u1265
  2648     0610                     l1559:
  2649     0610  3001               	movlw	1
  2650     0611  02F8               	subwf	___lwdiv@counter,f
  2651     0612  1D03               	btfss	3,2
  2652     0613  2E15               	goto	u1271
  2653     0614  2E16               	goto	u1270
  2654     0615                     u1271:
  2655     0615  2DF1               	goto	l1551
  2656     0616                     u1270:
  2657     0616                     l1561:
  2658     0616  0877               	movf	___lwdiv@quotient+1,w
  2659     0617  00F3               	movwf	?___lwdiv+1
  2660     0618  0876               	movf	___lwdiv@quotient,w
  2661     0619  00F2               	movwf	?___lwdiv
  2662     061A                     l643:
  2663     061A  0008               	return
  2664     061B                     __end_of___lwdiv:
  2665                           
  2666                           	psect	text10
  2667     0399                     __ptext10:	
  2668 ;; *************** function _map *****************
  2669 ;; Defined at:
  2670 ;;		line 165 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  val             1    wreg     unsigned char 
  2673 ;;  min1            1   20[BANK0 ] unsigned char 
  2674 ;;  max1            1   21[BANK0 ] unsigned char 
  2675 ;;  min2            1   22[BANK0 ] unsigned char 
  2676 ;;  max2            4   23[BANK0 ] long 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  val             1   35[BANK0 ] unsigned char 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  2   20[BANK0 ] unsigned int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       7       0       0       0
  2689 ;;      Locals:         0       1       0       0       0
  2690 ;;      Temps:          0       8       0       0       0
  2691 ;;      Totals:         0      16       0       0       0
  2692 ;;Total ram usage:       16 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 3
  2695 ;; This function calls:
  2696 ;;		___aldiv
  2697 ;;		___lmul
  2698 ;; This function is called by:
  2699 ;;		_output_LCD
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703     0399                     _map:	
  2704                           ;psect for function _map
  2705                           
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2709                           ;map@val stored from wreg
  2710     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2711     039A  1303               	bcf	3,6	;RP1=0, select bank0
  2712     039B  00C3               	movwf	map@val
  2713     039C                     l1941:
  2714                           
  2715                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 166:     return ((val-min1)*(max2-min2)/(max1-min
      +                          1))+min2;
  2716     039C  0834               	movf	map@min1,w
  2717     039D  0235               	subwf	map@max1,w
  2718     039E  00A5               	movwf	___aldiv@divisor
  2719     039F  01A6               	clrf	___aldiv@divisor+1
  2720     03A0  1C03               	skipc
  2721     03A1  03A6               	decf	___aldiv@divisor+1,f
  2722     03A2  01A7               	clrf	___aldiv@divisor+2
  2723     03A3  1BA6               	btfsc	___aldiv@divisor+1,7
  2724     03A4  03A7               	decf	___aldiv@divisor+2,f
  2725     03A5  0827               	movf	___aldiv@divisor+2,w
  2726     03A6  00A8               	movwf	___aldiv@divisor+3
  2727     03A7  0834               	movf	map@min1,w
  2728     03A8  0243               	subwf	map@val,w
  2729     03A9  00F2               	movwf	___lmul@multiplier
  2730     03AA  01F3               	clrf	___lmul@multiplier+1
  2731     03AB  1C03               	skipc
  2732     03AC  03F3               	decf	___lmul@multiplier+1,f
  2733     03AD  01F4               	clrf	___lmul@multiplier+2
  2734     03AE  1BF3               	btfsc	___lmul@multiplier+1,7
  2735     03AF  03F4               	decf	___lmul@multiplier+2,f
  2736     03B0  0874               	movf	___lmul@multiplier+2,w
  2737     03B1  00F5               	movwf	___lmul@multiplier+3
  2738     03B2  0836               	movf	map@min2,w
  2739     03B3  00BB               	movwf	??_map
  2740     03B4  01BC               	clrf	??_map+1
  2741     03B5  01BD               	clrf	??_map+2
  2742     03B6  01BE               	clrf	??_map+3
  2743     03B7  0837               	movf	map@max2,w
  2744     03B8  00BF               	movwf	??_map+4
  2745     03B9  0838               	movf	map@max2+1,w
  2746     03BA  00C0               	movwf	??_map+5
  2747     03BB  0839               	movf	map@max2+2,w
  2748     03BC  00C1               	movwf	??_map+6
  2749     03BD  083A               	movf	map@max2+3,w
  2750     03BE  00C2               	movwf	??_map+7
  2751     03BF  083B               	movf	??_map,w
  2752     03C0  02BF               	subwf	??_map+4,f
  2753     03C1  083C               	movf	??_map+1,w
  2754     03C2  1C03               	skipc
  2755     03C3  0F3C               	incfsz	??_map+1,w
  2756     03C4  2BC6               	goto	u1821
  2757     03C5  2BC7               	goto	u1822
  2758     03C6                     u1821:
  2759     03C6  02C0               	subwf	??_map+5,f
  2760     03C7                     u1822:
  2761     03C7  083D               	movf	??_map+2,w
  2762     03C8  1C03               	skipc
  2763     03C9  0F3D               	incfsz	??_map+2,w
  2764     03CA  2BCC               	goto	u1823
  2765     03CB  2BCD               	goto	u1824
  2766     03CC                     u1823:
  2767     03CC  02C1               	subwf	??_map+6,f
  2768     03CD                     u1824:
  2769     03CD  083E               	movf	??_map+3,w
  2770     03CE  1C03               	skipc
  2771     03CF  0F3E               	incfsz	??_map+3,w
  2772     03D0  2BD2               	goto	u1825
  2773     03D1  2BD3               	goto	u1826
  2774     03D2                     u1825:
  2775     03D2  02C2               	subwf	??_map+7,f
  2776     03D3                     u1826:
  2777     03D3  0842               	movf	??_map+7,w
  2778     03D4  00F9               	movwf	___lmul@multiplicand+3
  2779     03D5  0841               	movf	??_map+6,w
  2780     03D6  00F8               	movwf	___lmul@multiplicand+2
  2781     03D7  0840               	movf	??_map+5,w
  2782     03D8  00F7               	movwf	___lmul@multiplicand+1
  2783     03D9  083F               	movf	??_map+4,w
  2784     03DA  00F6               	movwf	___lmul@multiplicand
  2785     03DB  120A  118A  2505  120A  118A  	fcall	___lmul
  2786     03E0  0875               	movf	?___lmul+3,w
  2787     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2788     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  2789     03E3  00AC               	movwf	___aldiv@dividend+3
  2790     03E4  0874               	movf	?___lmul+2,w
  2791     03E5  00AB               	movwf	___aldiv@dividend+2
  2792     03E6  0873               	movf	?___lmul+1,w
  2793     03E7  00AA               	movwf	___aldiv@dividend+1
  2794     03E8  0872               	movf	?___lmul,w
  2795     03E9  00A9               	movwf	___aldiv@dividend
  2796     03EA  120A  118A  2021  120A  118A  	fcall	___aldiv
  2797     03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2798     03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2799     03F1  0836               	movf	map@min2,w
  2800     03F2  0725               	addwf	?___aldiv,w
  2801     03F3  00B4               	movwf	?_map
  2802     03F4  3000               	movlw	0
  2803     03F5  1803               	skipnc
  2804     03F6  3001               	movlw	1
  2805     03F7  0726               	addwf	?___aldiv+1,w
  2806     03F8  00B5               	movwf	?_map+1
  2807     03F9                     l228:
  2808     03F9  0008               	return
  2809     03FA                     __end_of_map:
  2810                           
  2811                           	psect	text11
  2812     0505                     __ptext11:	
  2813 ;; *************** function ___lmul *****************
  2814 ;; Defined at:
  2815 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  multiplier      4    2[COMMON] unsigned long 
  2818 ;;  multiplicand    4    6[COMMON] unsigned long 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  product         4    1[BANK0 ] unsigned long 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  4    2[COMMON] unsigned long 
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         8       0       0       0       0
  2831 ;;      Locals:         0       4       0       0       0
  2832 ;;      Temps:          0       1       0       0       0
  2833 ;;      Totals:         8       5       0       0       0
  2834 ;;Total ram usage:       13 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_map
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844     0505                     ___lmul:	
  2845                           ;psect for function ___lmul
  2846                           
  2847     0505                     l1855:	
  2848                           ;incstack = 0
  2849                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2850                           
  2851     0505  3000               	movlw	0
  2852     0506  1283               	bcf	3,5	;RP0=0, select bank0
  2853     0507  1303               	bcf	3,6	;RP1=0, select bank0
  2854     0508  00A4               	movwf	___lmul@product+3
  2855     0509  3000               	movlw	0
  2856     050A  00A3               	movwf	___lmul@product+2
  2857     050B  3000               	movlw	0
  2858     050C  00A2               	movwf	___lmul@product+1
  2859     050D  3000               	movlw	0
  2860     050E  00A1               	movwf	___lmul@product
  2861     050F                     l1857:
  2862     050F  1C72               	btfss	___lmul@multiplier,0
  2863     0510  2D12               	goto	u1621
  2864     0511  2D13               	goto	u1620
  2865     0512                     u1621:
  2866     0512  2D2A               	goto	l1861
  2867     0513                     u1620:
  2868     0513                     l1859:
  2869     0513  0876               	movf	___lmul@multiplicand,w
  2870     0514  07A1               	addwf	___lmul@product,f
  2871     0515  0877               	movf	___lmul@multiplicand+1,w
  2872     0516  1103               	clrz
  2873     0517  1803               	skipnc
  2874     0518  3E01               	addlw	1
  2875     0519  1903               	skipnz
  2876     051A  2D1C               	goto	u1631
  2877     051B  07A2               	addwf	___lmul@product+1,f
  2878     051C                     u1631:
  2879     051C  0878               	movf	___lmul@multiplicand+2,w
  2880     051D  1103               	clrz
  2881     051E  1803               	skipnc
  2882     051F  3E01               	addlw	1
  2883     0520  1903               	skipnz
  2884     0521  2D23               	goto	u1632
  2885     0522  07A3               	addwf	___lmul@product+2,f
  2886     0523                     u1632:
  2887     0523  0879               	movf	___lmul@multiplicand+3,w
  2888     0524  1103               	clrz
  2889     0525  1803               	skipnc
  2890     0526  3E01               	addlw	1
  2891     0527  1903               	skipnz
  2892     0528  2D2A               	goto	u1633
  2893     0529  07A4               	addwf	___lmul@product+3,f
  2894     052A                     u1633:
  2895     052A                     l1861:
  2896     052A  3001               	movlw	1
  2897     052B  00A0               	movwf	??___lmul
  2898     052C                     u1645:
  2899     052C  1003               	clrc
  2900     052D  0DF6               	rlf	___lmul@multiplicand,f
  2901     052E  0DF7               	rlf	___lmul@multiplicand+1,f
  2902     052F  0DF8               	rlf	___lmul@multiplicand+2,f
  2903     0530  0DF9               	rlf	___lmul@multiplicand+3,f
  2904     0531  0BA0               	decfsz	??___lmul,f
  2905     0532  2D2C               	goto	u1645
  2906     0533                     l1863:
  2907     0533  3001               	movlw	1
  2908     0534                     u1655:
  2909     0534  1003               	clrc
  2910     0535  0CF5               	rrf	___lmul@multiplier+3,f
  2911     0536  0CF4               	rrf	___lmul@multiplier+2,f
  2912     0537  0CF3               	rrf	___lmul@multiplier+1,f
  2913     0538  0CF2               	rrf	___lmul@multiplier,f
  2914     0539  3EFF               	addlw	-1
  2915     053A  1D03               	skipz
  2916     053B  2D34               	goto	u1655
  2917     053C  0875               	movf	___lmul@multiplier+3,w
  2918     053D  0474               	iorwf	___lmul@multiplier+2,w
  2919     053E  0473               	iorwf	___lmul@multiplier+1,w
  2920     053F  0472               	iorwf	___lmul@multiplier,w
  2921     0540  1D03               	skipz
  2922     0541  2D43               	goto	u1661
  2923     0542  2D44               	goto	u1660
  2924     0543                     u1661:
  2925     0543  2D0F               	goto	l1857
  2926     0544                     u1660:
  2927     0544                     l1865:
  2928     0544  0824               	movf	___lmul@product+3,w
  2929     0545  00F5               	movwf	?___lmul+3
  2930     0546  0823               	movf	___lmul@product+2,w
  2931     0547  00F4               	movwf	?___lmul+2
  2932     0548  0822               	movf	___lmul@product+1,w
  2933     0549  00F3               	movwf	?___lmul+1
  2934     054A  0821               	movf	___lmul@product,w
  2935     054B  00F2               	movwf	?___lmul
  2936     054C                     l385:
  2937     054C  0008               	return
  2938     054D                     __end_of___lmul:
  2939                           
  2940                           	psect	text12
  2941     054D                     __ptext12:	
  2942 ;; *************** function _Lcd_Write_String *****************
  2943 ;; Defined at:
  2944 ;;		line 105 in file "LCD.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  a               2    5[COMMON] PTR unsigned char 
  2947 ;;		 -> STR_2(10), count(3), STR_1(10), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  i               2    0[BANK0 ] int 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2959 ;;      Params:         2       0       0       0       0
  2960 ;;      Locals:         0       2       0       0       0
  2961 ;;      Temps:          3       0       0       0       0
  2962 ;;      Totals:         5       2       0       0       0
  2963 ;;Total ram usage:        7 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; Hardware stack levels required when called: 4
  2966 ;; This function calls:
  2967 ;;		_Lcd_Write_Char
  2968 ;; This function is called by:
  2969 ;;		_output_LCD
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973     054D                     _Lcd_Write_String:	
  2974                           ;psect for function _Lcd_Write_String
  2975                           
  2976     054D                     l1925:	
  2977                           ;incstack = 0
  2978                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2979                           
  2980                           
  2981                           ;LCD.c: 106:     int i;;LCD.c: 107:     for (i = 0; a[i] != '\0'; i++)
  2982     054D  1283               	bcf	3,5	;RP0=0, select bank0
  2983     054E  1303               	bcf	3,6	;RP1=0, select bank0
  2984     054F  01A0               	clrf	Lcd_Write_String@i
  2985     0550  01A1               	clrf	Lcd_Write_String@i+1
  2986     0551  2D76               	goto	l1931
  2987     0552                     l1927:
  2988                           
  2989                           ;LCD.c: 108:         Lcd_Write_Char(a[i]);
  2990     0552  0820               	movf	Lcd_Write_String@i,w
  2991     0553  0775               	addwf	Lcd_Write_String@a,w
  2992     0554  00F8               	movwf	??_Lcd_Write_String+1
  2993     0555  0876               	movf	Lcd_Write_String@a+1,w
  2994     0556  00F7               	movwf	??_Lcd_Write_String
  2995     0557  1803               	skipnc
  2996     0558  0AF7               	incf	??_Lcd_Write_String,f
  2997     0559  1FA0               	btfss	Lcd_Write_String@i,7
  2998     055A  2D5C               	goto	u1790
  2999     055B  03F7               	decf	??_Lcd_Write_String,f
  3000     055C                     u1790:
  3001     055C  0877               	movf	??_Lcd_Write_String,w
  3002     055D  00F9               	movwf	??_Lcd_Write_String+2
  3003     055E  0879               	movf	??_Lcd_Write_String+2,w
  3004     055F  1283               	bcf	3,5	;RP0=0, select bank0
  3005     0560  1303               	bcf	3,6	;RP1=0, select bank0
  3006     0561  00FF               	movwf	btemp+1
  3007     0562  0878               	movf	??_Lcd_Write_String+1,w
  3008     0563  0084               	movwf	4
  3009     0564  120A  118A  2593  120A  118A  	fcall	stringtab
  3010     0569  120A  118A  27A7  120A  118A  	fcall	_Lcd_Write_Char
  3011     056E                     l1929:
  3012     056E  3001               	movlw	1
  3013     056F  1283               	bcf	3,5	;RP0=0, select bank0
  3014     0570  1303               	bcf	3,6	;RP1=0, select bank0
  3015     0571  07A0               	addwf	Lcd_Write_String@i,f
  3016     0572  1803               	skipnc
  3017     0573  0AA1               	incf	Lcd_Write_String@i+1,f
  3018     0574  3000               	movlw	0
  3019     0575  07A1               	addwf	Lcd_Write_String@i+1,f
  3020     0576                     l1931:
  3021     0576  0820               	movf	Lcd_Write_String@i,w
  3022     0577  0775               	addwf	Lcd_Write_String@a,w
  3023     0578  00F8               	movwf	??_Lcd_Write_String+1
  3024     0579  0876               	movf	Lcd_Write_String@a+1,w
  3025     057A  00F7               	movwf	??_Lcd_Write_String
  3026     057B  1803               	skipnc
  3027     057C  0AF7               	incf	??_Lcd_Write_String,f
  3028     057D  1FA0               	btfss	Lcd_Write_String@i,7
  3029     057E  2D80               	goto	u1800
  3030     057F  03F7               	decf	??_Lcd_Write_String,f
  3031     0580                     u1800:
  3032     0580  0877               	movf	??_Lcd_Write_String,w
  3033     0581  00F9               	movwf	??_Lcd_Write_String+2
  3034     0582  0879               	movf	??_Lcd_Write_String+2,w
  3035     0583  1283               	bcf	3,5	;RP0=0, select bank0
  3036     0584  1303               	bcf	3,6	;RP1=0, select bank0
  3037     0585  00FF               	movwf	btemp+1
  3038     0586  0878               	movf	??_Lcd_Write_String+1,w
  3039     0587  0084               	movwf	4
  3040     0588  120A  118A  2593  120A  118A  	fcall	stringtab
  3041     058D  3A00               	xorlw	0
  3042     058E  1D03               	skipz
  3043     058F  2D91               	goto	u1811
  3044     0590  2D92               	goto	u1810
  3045     0591                     u1811:
  3046     0591  2D52               	goto	l1927
  3047     0592                     u1810:
  3048     0592                     l115:
  3049     0592  0008               	return
  3050     0593                     __end_of_Lcd_Write_String:
  3051                           
  3052                           	psect	text13
  3053     07A7                     __ptext13:	
  3054 ;; *************** function _Lcd_Write_Char *****************
  3055 ;; Defined at:
  3056 ;;		line 97 in file "LCD.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  a               1    wreg     unsigned char 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  a               1    4[COMMON] unsigned char 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, status,2, status,0, pclath, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3070 ;;      Params:         0       0       0       0       0
  3071 ;;      Locals:         1       0       0       0       0
  3072 ;;      Temps:          1       0       0       0       0
  3073 ;;      Totals:         2       0       0       0       0
  3074 ;;Total ram usage:        2 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 3
  3077 ;; This function calls:
  3078 ;;		_Lcd_Port
  3079 ;; This function is called by:
  3080 ;;		_Lcd_Write_String
  3081 ;;		_output_LCD
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085     07A7                     _Lcd_Write_Char:	
  3086                           ;psect for function _Lcd_Write_Char
  3087                           
  3088                           
  3089                           ;incstack = 0
  3090                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3091                           ;Lcd_Write_Char@a stored from wreg
  3092     07A7  00F4               	movwf	Lcd_Write_Char@a
  3093     07A8                     l1845:
  3094                           
  3095                           ;LCD.c: 98:     RE0 = 1;
  3096     07A8  1283               	bcf	3,5	;RP0=0, select bank0
  3097     07A9  1303               	bcf	3,6	;RP1=0, select bank0
  3098     07AA  1409               	bsf	9,0	;volatile
  3099     07AB                     l1847:
  3100                           
  3101                           ;LCD.c: 99:     Lcd_Port(a);
  3102     07AB  0874               	movf	Lcd_Write_Char@a,w
  3103     07AC  120A  118A  265D  120A  118A  	fcall	_Lcd_Port
  3104     07B1                     l1849:
  3105                           
  3106                           ;LCD.c: 100:     RE1 = 1;
  3107     07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3108     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3109     07B3  1489               	bsf	9,1	;volatile
  3110     07B4                     l1851:
  3111                           
  3112                           ;LCD.c: 101:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3113     07B4  301A               	movlw	26
  3114     07B5  00F3               	movwf	??_Lcd_Write_Char
  3115     07B6                     u1877:
  3116     07B6  0BF3               	decfsz	??_Lcd_Write_Char,f
  3117     07B7  2FB6               	goto	u1877
  3118     07B8  0000               	nop
  3119     07B9                     l1853:
  3120                           
  3121                           ;LCD.c: 102:     RE1 = 0;
  3122     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3123     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  3124     07BB  1089               	bcf	9,1	;volatile
  3125     07BC                     l109:
  3126     07BC  0008               	return
  3127     07BD                     __end_of_Lcd_Write_Char:
  3128                           
  3129                           	psect	text14
  3130     076D                     __ptext14:	
  3131 ;; *************** function _Lcd_Set_Cursor *****************
  3132 ;; Defined at:
  3133 ;;		line 68 in file "LCD.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  a               1    wreg     unsigned char 
  3136 ;;  b               1    6[COMMON] unsigned char 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  a               1    7[COMMON] unsigned char 
  3139 ;;  temp            1    8[COMMON] unsigned char 
  3140 ;;  y               1    0        unsigned char 
  3141 ;;  z               1    0        unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, pclath, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3151 ;;      Params:         1       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0
  3154 ;;      Totals:         3       0       0       0       0
  3155 ;;Total ram usage:        3 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_Lcd_Cmd
  3160 ;; This function is called by:
  3161 ;;		_output_LCD
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165     076D                     _Lcd_Set_Cursor:	
  3166                           ;psect for function _Lcd_Set_Cursor
  3167                           
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3171                           ;Lcd_Set_Cursor@a stored from wreg
  3172     076D  00F7               	movwf	Lcd_Set_Cursor@a
  3173     076E                     l1913:
  3174                           
  3175                           ;LCD.c: 69:     char temp, z, y;;LCD.c: 70:     if (a == 1) {
  3176     076E  0377               	decf	Lcd_Set_Cursor@a,w
  3177     076F  1D03               	btfss	3,2
  3178     0770  2F72               	goto	u1771
  3179     0771  2F73               	goto	u1770
  3180     0772                     u1771:
  3181     0772  2F7D               	goto	l1919
  3182     0773                     u1770:
  3183     0773                     l1915:
  3184                           
  3185                           ;LCD.c: 71:         temp = 0x80 + b - 1;
  3186     0773  0876               	movf	Lcd_Set_Cursor@b,w
  3187     0774  3E7F               	addlw	127
  3188     0775  00F8               	movwf	Lcd_Set_Cursor@temp
  3189     0776                     l1917:
  3190                           
  3191                           ;LCD.c: 72:         Lcd_Cmd(temp);
  3192     0776  0878               	movf	Lcd_Set_Cursor@temp,w
  3193     0777  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  3194                           
  3195                           ;LCD.c: 73:     } else if (a == 2) {
  3196     077C  2F8C               	goto	l103
  3197     077D                     l1919:
  3198     077D  3002               	movlw	2
  3199     077E  0677               	xorwf	Lcd_Set_Cursor@a,w
  3200     077F  1D03               	btfss	3,2
  3201     0780  2F82               	goto	u1781
  3202     0781  2F83               	goto	u1780
  3203     0782                     u1781:
  3204     0782  2F8C               	goto	l103
  3205     0783                     u1780:
  3206     0783                     l1921:
  3207                           
  3208                           ;LCD.c: 74:         temp = 0xC0 + b - 1;
  3209     0783  0876               	movf	Lcd_Set_Cursor@b,w
  3210     0784  3EBF               	addlw	191
  3211     0785  00F8               	movwf	Lcd_Set_Cursor@temp
  3212     0786                     l1923:
  3213                           
  3214                           ;LCD.c: 75:         Lcd_Cmd(temp);
  3215     0786  0878               	movf	Lcd_Set_Cursor@temp,w
  3216     0787  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  3217     078C                     l103:
  3218     078C  0008               	return
  3219     078D                     __end_of_Lcd_Set_Cursor:
  3220                           
  3221                           	psect	text15
  3222     07EC                     __ptext15:	
  3223 ;; *************** function _Lcd_Clear *****************
  3224 ;; Defined at:
  3225 ;;		line 64 in file "LCD.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, pclath, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3239 ;;      Params:         0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 4
  3246 ;; This function calls:
  3247 ;;		_Lcd_Cmd
  3248 ;; This function is called by:
  3249 ;;		_output_LCD
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253     07EC                     _Lcd_Clear:	
  3254                           ;psect for function _Lcd_Clear
  3255                           
  3256     07EC                     l1911:	
  3257                           ;incstack = 0
  3258                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3259                           
  3260                           
  3261                           ;LCD.c: 65:     Lcd_Cmd(0x01);
  3262     07EC  3001               	movlw	1
  3263     07ED  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  3264     07F2                     l97:
  3265     07F2  0008               	return
  3266     07F3                     __end_of_Lcd_Clear:
  3267                           
  3268                           	psect	text16
  3269     07D3                     __ptext16:	
  3270 ;; *************** function _adc_read *****************
  3271 ;; Defined at:
  3272 ;;		line 42 in file "ADC_lib.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2    2[COMMON] unsigned int 
  3279 ;; Registers used:
  3280 ;;		wreg
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3286 ;;      Params:         2       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         2       0       0       0       0
  3290 ;;Total ram usage:        2 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 2
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_main
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300     07D3                     _adc_read:	
  3301                           ;psect for function _adc_read
  3302                           
  3303     07D3                     l1659:	
  3304                           ;incstack = 0
  3305                           ; Regs used in _adc_read: [wreg]
  3306                           
  3307                           
  3308                           ;ADC_lib.c: 43:     ADCON0bits.GO = 1;
  3309     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  3310     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  3311     07D5  149F               	bsf	31,1	;volatile
  3312     07D6                     l41:	
  3313                           ;ADC_lib.c: 44:     while(ADCON0bits.GO);
  3314                           
  3315     07D6  189F               	btfsc	31,1	;volatile
  3316     07D7  2FD9               	goto	u1471
  3317     07D8  2FDA               	goto	u1470
  3318     07D9                     u1471:
  3319     07D9  2FD6               	goto	l41
  3320     07DA                     u1470:
  3321     07DA                     l1661:
  3322                           
  3323                           ;ADC_lib.c: 45:     return (ADRESH<<8) | ADRESL;
  3324     07DA  081E               	movf	30,w	;volatile
  3325     07DB  00F3               	movwf	?_adc_read+1
  3326     07DC  1683               	bsf	3,5	;RP0=1, select bank1
  3327     07DD  1303               	bcf	3,6	;RP1=0, select bank1
  3328     07DE  081E               	movf	30,w	;volatile
  3329     07DF  00F2               	movwf	?_adc_read
  3330     07E0                     l44:
  3331     07E0  0008               	return
  3332     07E1                     __end_of_adc_read:
  3333                           
  3334                           	psect	text17
  3335     01C5                     __ptext17:	
  3336 ;; *************** function _UART_TX_config *****************
  3337 ;; Defined at:
  3338 ;;		line 25 in file "UART.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  baudrate        4   20[BANK0 ] long 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  BR              4   33[BANK0 ] long 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         0       4       0       0       0
  3353 ;;      Locals:         0       8       0       0       0
  3354 ;;      Temps:          0       5       0       0       0
  3355 ;;      Totals:         0      17       0       0       0
  3356 ;;Total ram usage:       17 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 3
  3359 ;; This function calls:
  3360 ;;		___aldiv
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366     01C5                     _UART_TX_config:	
  3367                           ;psect for function _UART_TX_config
  3368                           
  3369     01C5                     l1987:	
  3370                           ;incstack = 0
  3371                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3372                           
  3373                           
  3374                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  3375     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3376     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3377     01C7  0837               	movf	UART_TX_config@baudrate+3,w
  3378     01C8  00A8               	movwf	___aldiv@divisor+3
  3379     01C9  0836               	movf	UART_TX_config@baudrate+2,w
  3380     01CA  00A7               	movwf	___aldiv@divisor+2
  3381     01CB  0835               	movf	UART_TX_config@baudrate+1,w
  3382     01CC  00A6               	movwf	___aldiv@divisor+1
  3383     01CD  0834               	movf	UART_TX_config@baudrate,w
  3384     01CE  00A5               	movwf	___aldiv@divisor
  3385     01CF  3000               	movlw	0
  3386     01D0  00AC               	movwf	___aldiv@dividend+3
  3387     01D1  307A               	movlw	122
  3388     01D2  00AB               	movwf	___aldiv@dividend+2
  3389     01D3  3012               	movlw	18
  3390     01D4  00AA               	movwf	___aldiv@dividend+1
  3391     01D5  3000               	movlw	0
  3392     01D6  00A9               	movwf	___aldiv@dividend
  3393     01D7  120A  118A  2021  120A  118A  	fcall	___aldiv
  3394     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3395     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3396     01DE  0828               	movf	?___aldiv+3,w
  3397     01DF  00C0               	movwf	_UART_TX_config$967+3
  3398     01E0  0827               	movf	?___aldiv+2,w
  3399     01E1  00BF               	movwf	_UART_TX_config$967+2
  3400     01E2  0826               	movf	?___aldiv+1,w
  3401     01E3  00BE               	movwf	_UART_TX_config$967+1
  3402     01E4  0825               	movf	?___aldiv,w
  3403     01E5  00BD               	movwf	_UART_TX_config$967
  3404                           
  3405                           ;UART.c: 28:     long BR;;UART.c: 29:     BR = ((8000000/baudrate)/64) - 1;
  3406     01E6  30FF               	movlw	255
  3407     01E7  00B8               	movwf	??_UART_TX_config
  3408     01E8  30FF               	movlw	255
  3409     01E9  00B9               	movwf	??_UART_TX_config+1
  3410     01EA  30FF               	movlw	255
  3411     01EB  00BA               	movwf	??_UART_TX_config+2
  3412     01EC  30FF               	movlw	255
  3413     01ED  00BB               	movwf	??_UART_TX_config+3
  3414     01EE  3000               	movlw	0
  3415     01EF  00A8               	movwf	___aldiv@divisor+3
  3416     01F0  3000               	movlw	0
  3417     01F1  00A7               	movwf	___aldiv@divisor+2
  3418     01F2  3000               	movlw	0
  3419     01F3  00A6               	movwf	___aldiv@divisor+1
  3420     01F4  3040               	movlw	64
  3421     01F5  00A5               	movwf	___aldiv@divisor
  3422     01F6  0840               	movf	_UART_TX_config$967+3,w
  3423     01F7  00AC               	movwf	___aldiv@dividend+3
  3424     01F8  083F               	movf	_UART_TX_config$967+2,w
  3425     01F9  00AB               	movwf	___aldiv@dividend+2
  3426     01FA  083E               	movf	_UART_TX_config$967+1,w
  3427     01FB  00AA               	movwf	___aldiv@dividend+1
  3428     01FC  083D               	movf	_UART_TX_config$967,w
  3429     01FD  00A9               	movwf	___aldiv@dividend
  3430     01FE  120A  118A  2021  120A  118A  	fcall	___aldiv
  3431     0203  1283               	bcf	3,5	;RP0=0, select bank0
  3432     0204  1303               	bcf	3,6	;RP1=0, select bank0
  3433     0205  0825               	movf	?___aldiv,w
  3434     0206  07B8               	addwf	??_UART_TX_config,f
  3435     0207  0826               	movf	?___aldiv+1,w
  3436     0208  1803               	skipnc
  3437     0209  0F26               	incfsz	?___aldiv+1,w
  3438     020A  2A0C               	goto	u1850
  3439     020B  2A0D               	goto	u1851
  3440     020C                     u1850:
  3441     020C  07B9               	addwf	??_UART_TX_config+1,f
  3442     020D                     u1851:
  3443     020D  0827               	movf	?___aldiv+2,w
  3444     020E  1803               	skipnc
  3445     020F  0F27               	incfsz	?___aldiv+2,w
  3446     0210  2A12               	goto	u1852
  3447     0211  2A13               	goto	u1853
  3448     0212                     u1852:
  3449     0212  07BA               	addwf	??_UART_TX_config+2,f
  3450     0213                     u1853:
  3451     0213  0828               	movf	?___aldiv+3,w
  3452     0214  1803               	skipnc
  3453     0215  0A28               	incf	?___aldiv+3,w
  3454     0216  07BB               	addwf	??_UART_TX_config+3,f
  3455     0217  083B               	movf	??_UART_TX_config+3,w
  3456     0218  00C4               	movwf	UART_TX_config@BR+3
  3457     0219  083A               	movf	??_UART_TX_config+2,w
  3458     021A  00C3               	movwf	UART_TX_config@BR+2
  3459     021B  0839               	movf	??_UART_TX_config+1,w
  3460     021C  00C2               	movwf	UART_TX_config@BR+1
  3461     021D  0838               	movf	??_UART_TX_config,w
  3462     021E  00C1               	movwf	UART_TX_config@BR
  3463     021F                     l1989:
  3464                           
  3465                           ;UART.c: 30:     SPBRG = BR & 0x00FF;
  3466     021F  0841               	movf	UART_TX_config@BR,w
  3467     0220  1683               	bsf	3,5	;RP0=1, select bank1
  3468     0221  1303               	bcf	3,6	;RP1=0, select bank1
  3469     0222  0099               	movwf	25	;volatile
  3470     0223                     l1991:
  3471                           
  3472                           ;UART.c: 31:     SPBRGH = (BR & 0xFF00) >> 8;
  3473     0223  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0224  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0225  0841               	movf	UART_TX_config@BR,w
  3476     0226  00B8               	movwf	??_UART_TX_config
  3477     0227  0842               	movf	UART_TX_config@BR+1,w
  3478     0228  00B9               	movwf	??_UART_TX_config+1
  3479     0229  0843               	movf	UART_TX_config@BR+2,w
  3480     022A  00BA               	movwf	??_UART_TX_config+2
  3481     022B  0844               	movf	UART_TX_config@BR+3,w
  3482     022C  00BB               	movwf	??_UART_TX_config+3
  3483     022D  3008               	movlw	8
  3484     022E  00BC               	movwf	??_UART_TX_config+4
  3485     022F                     u1865:
  3486     022F  0D3B               	rlf	??_UART_TX_config+3,w
  3487     0230  0CBB               	rrf	??_UART_TX_config+3,f
  3488     0231  0CBA               	rrf	??_UART_TX_config+2,f
  3489     0232  0CB9               	rrf	??_UART_TX_config+1,f
  3490     0233  0CB8               	rrf	??_UART_TX_config,f
  3491     0234                     u1860:
  3492     0234  0BBC               	decfsz	??_UART_TX_config+4,f
  3493     0235  2A2F               	goto	u1865
  3494     0236  0838               	movf	??_UART_TX_config,w
  3495     0237  1683               	bsf	3,5	;RP0=1, select bank1
  3496     0238  1303               	bcf	3,6	;RP1=0, select bank1
  3497     0239  009A               	movwf	26	;volatile
  3498     023A                     l1993:
  3499                           
  3500                           ;UART.c: 33:     SYNC = 0;
  3501     023A  1218               	bcf	24,4	;volatile
  3502     023B                     l1995:
  3503                           
  3504                           ;UART.c: 34:     SPEN = 1;
  3505     023B  1283               	bcf	3,5	;RP0=0, select bank0
  3506     023C  1303               	bcf	3,6	;RP1=0, select bank0
  3507     023D  1798               	bsf	24,7	;volatile
  3508     023E                     l1997:
  3509                           
  3510                           ;UART.c: 36:     TXEN = 1;
  3511     023E  1683               	bsf	3,5	;RP0=1, select bank1
  3512     023F  1303               	bcf	3,6	;RP1=0, select bank1
  3513     0240  1698               	bsf	24,5	;volatile
  3514     0241                     l1999:
  3515                           
  3516                           ;UART.c: 37:     TXIE = 0;
  3517     0241  120C               	bcf	12,4	;volatile
  3518     0242                     l2001:
  3519                           
  3520                           ;UART.c: 38:     TXIF = 0;
  3521     0242  1283               	bcf	3,5	;RP0=0, select bank0
  3522     0243  1303               	bcf	3,6	;RP1=0, select bank0
  3523     0244  120C               	bcf	12,4	;volatile
  3524     0245                     l270:
  3525     0245  0008               	return
  3526     0246                     __end_of_UART_TX_config:
  3527                           
  3528                           	psect	text18
  3529     0142                     __ptext18:	
  3530 ;; *************** function _UART_RX_config *****************
  3531 ;; Defined at:
  3532 ;;		line 6 in file "UART.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;  baudrate        4   20[BANK0 ] long 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  BR              4   33[BANK0 ] long 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  1    wreg      void 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3546 ;;      Params:         0       4       0       0       0
  3547 ;;      Locals:         0       8       0       0       0
  3548 ;;      Temps:          0       5       0       0       0
  3549 ;;      Totals:         0      17       0       0       0
  3550 ;;Total ram usage:       17 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 3
  3553 ;; This function calls:
  3554 ;;		___aldiv
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0142                     _UART_RX_config:	
  3561                           ;psect for function _UART_RX_config
  3562                           
  3563     0142                     l1967:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3566                           
  3567                           
  3568                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  3569     0142  1283               	bcf	3,5	;RP0=0, select bank0
  3570     0143  1303               	bcf	3,6	;RP1=0, select bank0
  3571     0144  0837               	movf	UART_RX_config@baudrate+3,w
  3572     0145  00A8               	movwf	___aldiv@divisor+3
  3573     0146  0836               	movf	UART_RX_config@baudrate+2,w
  3574     0147  00A7               	movwf	___aldiv@divisor+2
  3575     0148  0835               	movf	UART_RX_config@baudrate+1,w
  3576     0149  00A6               	movwf	___aldiv@divisor+1
  3577     014A  0834               	movf	UART_RX_config@baudrate,w
  3578     014B  00A5               	movwf	___aldiv@divisor
  3579     014C  3000               	movlw	0
  3580     014D  00AC               	movwf	___aldiv@dividend+3
  3581     014E  307A               	movlw	122
  3582     014F  00AB               	movwf	___aldiv@dividend+2
  3583     0150  3012               	movlw	18
  3584     0151  00AA               	movwf	___aldiv@dividend+1
  3585     0152  3000               	movlw	0
  3586     0153  00A9               	movwf	___aldiv@dividend
  3587     0154  120A  118A  2021  120A  118A  	fcall	___aldiv
  3588     0159  1283               	bcf	3,5	;RP0=0, select bank0
  3589     015A  1303               	bcf	3,6	;RP1=0, select bank0
  3590     015B  0828               	movf	?___aldiv+3,w
  3591     015C  00C0               	movwf	_UART_RX_config$966+3
  3592     015D  0827               	movf	?___aldiv+2,w
  3593     015E  00BF               	movwf	_UART_RX_config$966+2
  3594     015F  0826               	movf	?___aldiv+1,w
  3595     0160  00BE               	movwf	_UART_RX_config$966+1
  3596     0161  0825               	movf	?___aldiv,w
  3597     0162  00BD               	movwf	_UART_RX_config$966
  3598                           
  3599                           ;UART.c: 9:     long BR;;UART.c: 10:     BR = ((8000000/baudrate)/64) - 1;
  3600     0163  30FF               	movlw	255
  3601     0164  00B8               	movwf	??_UART_RX_config
  3602     0165  30FF               	movlw	255
  3603     0166  00B9               	movwf	??_UART_RX_config+1
  3604     0167  30FF               	movlw	255
  3605     0168  00BA               	movwf	??_UART_RX_config+2
  3606     0169  30FF               	movlw	255
  3607     016A  00BB               	movwf	??_UART_RX_config+3
  3608     016B  3000               	movlw	0
  3609     016C  00A8               	movwf	___aldiv@divisor+3
  3610     016D  3000               	movlw	0
  3611     016E  00A7               	movwf	___aldiv@divisor+2
  3612     016F  3000               	movlw	0
  3613     0170  00A6               	movwf	___aldiv@divisor+1
  3614     0171  3040               	movlw	64
  3615     0172  00A5               	movwf	___aldiv@divisor
  3616     0173  0840               	movf	_UART_RX_config$966+3,w
  3617     0174  00AC               	movwf	___aldiv@dividend+3
  3618     0175  083F               	movf	_UART_RX_config$966+2,w
  3619     0176  00AB               	movwf	___aldiv@dividend+2
  3620     0177  083E               	movf	_UART_RX_config$966+1,w
  3621     0178  00AA               	movwf	___aldiv@dividend+1
  3622     0179  083D               	movf	_UART_RX_config$966,w
  3623     017A  00A9               	movwf	___aldiv@dividend
  3624     017B  120A  118A  2021  120A  118A  	fcall	___aldiv
  3625     0180  1283               	bcf	3,5	;RP0=0, select bank0
  3626     0181  1303               	bcf	3,6	;RP1=0, select bank0
  3627     0182  0825               	movf	?___aldiv,w
  3628     0183  07B8               	addwf	??_UART_RX_config,f
  3629     0184  0826               	movf	?___aldiv+1,w
  3630     0185  1803               	skipnc
  3631     0186  0F26               	incfsz	?___aldiv+1,w
  3632     0187  2989               	goto	u1830
  3633     0188  298A               	goto	u1831
  3634     0189                     u1830:
  3635     0189  07B9               	addwf	??_UART_RX_config+1,f
  3636     018A                     u1831:
  3637     018A  0827               	movf	?___aldiv+2,w
  3638     018B  1803               	skipnc
  3639     018C  0F27               	incfsz	?___aldiv+2,w
  3640     018D  298F               	goto	u1832
  3641     018E  2990               	goto	u1833
  3642     018F                     u1832:
  3643     018F  07BA               	addwf	??_UART_RX_config+2,f
  3644     0190                     u1833:
  3645     0190  0828               	movf	?___aldiv+3,w
  3646     0191  1803               	skipnc
  3647     0192  0A28               	incf	?___aldiv+3,w
  3648     0193  07BB               	addwf	??_UART_RX_config+3,f
  3649     0194  083B               	movf	??_UART_RX_config+3,w
  3650     0195  00C4               	movwf	UART_RX_config@BR+3
  3651     0196  083A               	movf	??_UART_RX_config+2,w
  3652     0197  00C3               	movwf	UART_RX_config@BR+2
  3653     0198  0839               	movf	??_UART_RX_config+1,w
  3654     0199  00C2               	movwf	UART_RX_config@BR+1
  3655     019A  0838               	movf	??_UART_RX_config,w
  3656     019B  00C1               	movwf	UART_RX_config@BR
  3657     019C                     l1969:
  3658                           
  3659                           ;UART.c: 11:     SPBRG = BR & 0x00FF;
  3660     019C  0841               	movf	UART_RX_config@BR,w
  3661     019D  1683               	bsf	3,5	;RP0=1, select bank1
  3662     019E  1303               	bcf	3,6	;RP1=0, select bank1
  3663     019F  0099               	movwf	25	;volatile
  3664     01A0                     l1971:
  3665                           
  3666                           ;UART.c: 12:     SPBRGH = (BR & 0xFF00) >> 8;
  3667     01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3668     01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3669     01A2  0841               	movf	UART_RX_config@BR,w
  3670     01A3  00B8               	movwf	??_UART_RX_config
  3671     01A4  0842               	movf	UART_RX_config@BR+1,w
  3672     01A5  00B9               	movwf	??_UART_RX_config+1
  3673     01A6  0843               	movf	UART_RX_config@BR+2,w
  3674     01A7  00BA               	movwf	??_UART_RX_config+2
  3675     01A8  0844               	movf	UART_RX_config@BR+3,w
  3676     01A9  00BB               	movwf	??_UART_RX_config+3
  3677     01AA  3008               	movlw	8
  3678     01AB  00BC               	movwf	??_UART_RX_config+4
  3679     01AC                     u1845:
  3680     01AC  0D3B               	rlf	??_UART_RX_config+3,w
  3681     01AD  0CBB               	rrf	??_UART_RX_config+3,f
  3682     01AE  0CBA               	rrf	??_UART_RX_config+2,f
  3683     01AF  0CB9               	rrf	??_UART_RX_config+1,f
  3684     01B0  0CB8               	rrf	??_UART_RX_config,f
  3685     01B1                     u1840:
  3686     01B1  0BBC               	decfsz	??_UART_RX_config+4,f
  3687     01B2  29AC               	goto	u1845
  3688     01B3  0838               	movf	??_UART_RX_config,w
  3689     01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3690     01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3691     01B6  009A               	movwf	26	;volatile
  3692     01B7                     l1973:
  3693                           
  3694                           ;UART.c: 14:     SYNC = 0;
  3695     01B7  1218               	bcf	24,4	;volatile
  3696     01B8                     l1975:
  3697                           
  3698                           ;UART.c: 15:     SPEN = 1;
  3699     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  3700     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  3701     01BA  1798               	bsf	24,7	;volatile
  3702     01BB                     l1977:
  3703                           
  3704                           ;UART.c: 17:     CREN = 1;
  3705     01BB  1618               	bsf	24,4	;volatile
  3706     01BC                     l1979:
  3707                           
  3708                           ;UART.c: 18:     RCIE = 1;
  3709     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  3710     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  3711     01BE  168C               	bsf	12,5	;volatile
  3712     01BF                     l1981:
  3713                           
  3714                           ;UART.c: 19:     PEIE = 1;
  3715     01BF  170B               	bsf	11,6	;volatile
  3716     01C0                     l1983:
  3717                           
  3718                           ;UART.c: 20:     GIE = 1;
  3719     01C0  178B               	bsf	11,7	;volatile
  3720     01C1                     l1985:
  3721                           
  3722                           ;UART.c: 21:     RCIF = 0;
  3723     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3724     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3725     01C3  128C               	bcf	12,5	;volatile
  3726     01C4                     l267:
  3727     01C4  0008               	return
  3728     01C5                     __end_of_UART_RX_config:
  3729                           
  3730                           	psect	text19
  3731     0021                     __ptext19:	
  3732 ;; *************** function ___aldiv *****************
  3733 ;; Defined at:
  3734 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  divisor         4    5[BANK0 ] long 
  3737 ;;  dividend        4    9[BANK0 ] long 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  quotient        4   16[BANK0 ] long 
  3740 ;;  sign            1   15[BANK0 ] unsigned char 
  3741 ;;  counter         1   14[BANK0 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;                  4    5[BANK0 ] long 
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0, btemp+1
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3751 ;;      Params:         0       8       0       0       0
  3752 ;;      Locals:         0       6       0       0       0
  3753 ;;      Temps:          0       1       0       0       0
  3754 ;;      Totals:         0      15       0       0       0
  3755 ;;Total ram usage:       15 bytes
  3756 ;; Hardware stack levels used: 1
  3757 ;; Hardware stack levels required when called: 2
  3758 ;; This function calls:
  3759 ;;		Nothing
  3760 ;; This function is called by:
  3761 ;;		_map
  3762 ;;		_UART_RX_config
  3763 ;;		_UART_TX_config
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767     0021                     ___aldiv:	
  3768                           ;psect for function ___aldiv
  3769                           
  3770     0021                     l1869:	
  3771                           ;incstack = 0
  3772                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3773                           
  3774     0021  1283               	bcf	3,5	;RP0=0, select bank0
  3775     0022  1303               	bcf	3,6	;RP1=0, select bank0
  3776     0023  01AF               	clrf	___aldiv@sign
  3777     0024                     l1871:
  3778     0024  1FA8               	btfss	___aldiv@divisor+3,7
  3779     0025  2827               	goto	u1671
  3780     0026  2828               	goto	u1670
  3781     0027                     u1671:
  3782     0027  2835               	goto	l436
  3783     0028                     u1670:
  3784     0028                     l1873:
  3785     0028  09A5               	comf	___aldiv@divisor,f
  3786     0029  09A6               	comf	___aldiv@divisor+1,f
  3787     002A  09A7               	comf	___aldiv@divisor+2,f
  3788     002B  09A8               	comf	___aldiv@divisor+3,f
  3789     002C  0AA5               	incf	___aldiv@divisor,f
  3790     002D  1903               	skipnz
  3791     002E  0AA6               	incf	___aldiv@divisor+1,f
  3792     002F  1903               	skipnz
  3793     0030  0AA7               	incf	___aldiv@divisor+2,f
  3794     0031  1903               	skipnz
  3795     0032  0AA8               	incf	___aldiv@divisor+3,f
  3796     0033  01AF               	clrf	___aldiv@sign
  3797     0034  0AAF               	incf	___aldiv@sign,f
  3798     0035                     l436:
  3799     0035  1FAC               	btfss	___aldiv@dividend+3,7
  3800     0036  2838               	goto	u1681
  3801     0037  2839               	goto	u1680
  3802     0038                     u1681:
  3803     0038  2848               	goto	l1879
  3804     0039                     u1680:
  3805     0039                     l1875:
  3806     0039  09A9               	comf	___aldiv@dividend,f
  3807     003A  09AA               	comf	___aldiv@dividend+1,f
  3808     003B  09AB               	comf	___aldiv@dividend+2,f
  3809     003C  09AC               	comf	___aldiv@dividend+3,f
  3810     003D  0AA9               	incf	___aldiv@dividend,f
  3811     003E  1903               	skipnz
  3812     003F  0AAA               	incf	___aldiv@dividend+1,f
  3813     0040  1903               	skipnz
  3814     0041  0AAB               	incf	___aldiv@dividend+2,f
  3815     0042  1903               	skipnz
  3816     0043  0AAC               	incf	___aldiv@dividend+3,f
  3817     0044                     l1877:
  3818     0044  3001               	movlw	1
  3819     0045  00FF               	movwf	btemp+1
  3820     0046  087F               	movf	btemp+1,w
  3821     0047  06AF               	xorwf	___aldiv@sign,f
  3822     0048                     l1879:
  3823     0048  3000               	movlw	0
  3824     0049  00B3               	movwf	___aldiv@quotient+3
  3825     004A  3000               	movlw	0
  3826     004B  00B2               	movwf	___aldiv@quotient+2
  3827     004C  3000               	movlw	0
  3828     004D  00B1               	movwf	___aldiv@quotient+1
  3829     004E  3000               	movlw	0
  3830     004F  00B0               	movwf	___aldiv@quotient
  3831     0050                     l1881:
  3832     0050  0828               	movf	___aldiv@divisor+3,w
  3833     0051  0427               	iorwf	___aldiv@divisor+2,w
  3834     0052  0426               	iorwf	___aldiv@divisor+1,w
  3835     0053  0425               	iorwf	___aldiv@divisor,w
  3836     0054  1903               	skipnz
  3837     0055  2857               	goto	u1691
  3838     0056  2858               	goto	u1690
  3839     0057                     u1691:
  3840     0057  28A5               	goto	l1903
  3841     0058                     u1690:
  3842     0058                     l1883:
  3843     0058  01AE               	clrf	___aldiv@counter
  3844     0059  0AAE               	incf	___aldiv@counter,f
  3845     005A  2868               	goto	l1889
  3846     005B                     l1885:
  3847     005B  3001               	movlw	1
  3848     005C  00AD               	movwf	??___aldiv
  3849     005D                     u1705:
  3850     005D  1003               	clrc
  3851     005E  0DA5               	rlf	___aldiv@divisor,f
  3852     005F  0DA6               	rlf	___aldiv@divisor+1,f
  3853     0060  0DA7               	rlf	___aldiv@divisor+2,f
  3854     0061  0DA8               	rlf	___aldiv@divisor+3,f
  3855     0062  0BAD               	decfsz	??___aldiv,f
  3856     0063  285D               	goto	u1705
  3857     0064                     l1887:
  3858     0064  3001               	movlw	1
  3859     0065  00FF               	movwf	btemp+1
  3860     0066  087F               	movf	btemp+1,w
  3861     0067  07AE               	addwf	___aldiv@counter,f
  3862     0068                     l1889:
  3863     0068  1FA8               	btfss	___aldiv@divisor+3,7
  3864     0069  286B               	goto	u1711
  3865     006A  286C               	goto	u1710
  3866     006B                     u1711:
  3867     006B  285B               	goto	l1885
  3868     006C                     u1710:
  3869     006C                     l1891:
  3870     006C  3001               	movlw	1
  3871     006D  00AD               	movwf	??___aldiv
  3872     006E                     u1725:
  3873     006E  1003               	clrc
  3874     006F  0DB0               	rlf	___aldiv@quotient,f
  3875     0070  0DB1               	rlf	___aldiv@quotient+1,f
  3876     0071  0DB2               	rlf	___aldiv@quotient+2,f
  3877     0072  0DB3               	rlf	___aldiv@quotient+3,f
  3878     0073  0BAD               	decfsz	??___aldiv,f
  3879     0074  286E               	goto	u1725
  3880     0075                     l1893:
  3881     0075  0828               	movf	___aldiv@divisor+3,w
  3882     0076  022C               	subwf	___aldiv@dividend+3,w
  3883     0077  1D03               	skipz
  3884     0078  2883               	goto	u1735
  3885     0079  0827               	movf	___aldiv@divisor+2,w
  3886     007A  022B               	subwf	___aldiv@dividend+2,w
  3887     007B  1D03               	skipz
  3888     007C  2883               	goto	u1735
  3889     007D  0826               	movf	___aldiv@divisor+1,w
  3890     007E  022A               	subwf	___aldiv@dividend+1,w
  3891     007F  1D03               	skipz
  3892     0080  2883               	goto	u1735
  3893     0081  0825               	movf	___aldiv@divisor,w
  3894     0082  0229               	subwf	___aldiv@dividend,w
  3895     0083                     u1735:
  3896     0083  1C03               	skipc
  3897     0084  2886               	goto	u1731
  3898     0085  2887               	goto	u1730
  3899     0086                     u1731:
  3900     0086  2896               	goto	l1899
  3901     0087                     u1730:
  3902     0087                     l1895:
  3903     0087  0825               	movf	___aldiv@divisor,w
  3904     0088  02A9               	subwf	___aldiv@dividend,f
  3905     0089  0826               	movf	___aldiv@divisor+1,w
  3906     008A  1C03               	skipc
  3907     008B  0F26               	incfsz	___aldiv@divisor+1,w
  3908     008C  02AA               	subwf	___aldiv@dividend+1,f
  3909     008D  0827               	movf	___aldiv@divisor+2,w
  3910     008E  1C03               	skipc
  3911     008F  0F27               	incfsz	___aldiv@divisor+2,w
  3912     0090  02AB               	subwf	___aldiv@dividend+2,f
  3913     0091  0828               	movf	___aldiv@divisor+3,w
  3914     0092  1C03               	skipc
  3915     0093  0F28               	incfsz	___aldiv@divisor+3,w
  3916     0094  02AC               	subwf	___aldiv@dividend+3,f
  3917     0095                     l1897:
  3918     0095  1430               	bsf	___aldiv@quotient,0
  3919     0096                     l1899:
  3920     0096  3001               	movlw	1
  3921     0097                     u1745:
  3922     0097  1003               	clrc
  3923     0098  0CA8               	rrf	___aldiv@divisor+3,f
  3924     0099  0CA7               	rrf	___aldiv@divisor+2,f
  3925     009A  0CA6               	rrf	___aldiv@divisor+1,f
  3926     009B  0CA5               	rrf	___aldiv@divisor,f
  3927     009C  3EFF               	addlw	-1
  3928     009D  1D03               	skipz
  3929     009E  2897               	goto	u1745
  3930     009F                     l1901:
  3931     009F  3001               	movlw	1
  3932     00A0  02AE               	subwf	___aldiv@counter,f
  3933     00A1  1D03               	btfss	3,2
  3934     00A2  28A4               	goto	u1751
  3935     00A3  28A5               	goto	u1750
  3936     00A4                     u1751:
  3937     00A4  286C               	goto	l1891
  3938     00A5                     u1750:
  3939     00A5                     l1903:
  3940     00A5  082F               	movf	___aldiv@sign,w
  3941     00A6  1903               	btfsc	3,2
  3942     00A7  28A9               	goto	u1761
  3943     00A8  28AA               	goto	u1760
  3944     00A9                     u1761:
  3945     00A9  28B5               	goto	l1907
  3946     00AA                     u1760:
  3947     00AA                     l1905:
  3948     00AA  09B0               	comf	___aldiv@quotient,f
  3949     00AB  09B1               	comf	___aldiv@quotient+1,f
  3950     00AC  09B2               	comf	___aldiv@quotient+2,f
  3951     00AD  09B3               	comf	___aldiv@quotient+3,f
  3952     00AE  0AB0               	incf	___aldiv@quotient,f
  3953     00AF  1903               	skipnz
  3954     00B0  0AB1               	incf	___aldiv@quotient+1,f
  3955     00B1  1903               	skipnz
  3956     00B2  0AB2               	incf	___aldiv@quotient+2,f
  3957     00B3  1903               	skipnz
  3958     00B4  0AB3               	incf	___aldiv@quotient+3,f
  3959     00B5                     l1907:
  3960     00B5  0833               	movf	___aldiv@quotient+3,w
  3961     00B6  00A8               	movwf	?___aldiv+3
  3962     00B7  0832               	movf	___aldiv@quotient+2,w
  3963     00B8  00A7               	movwf	?___aldiv+2
  3964     00B9  0831               	movf	___aldiv@quotient+1,w
  3965     00BA  00A6               	movwf	?___aldiv+1
  3966     00BB  0830               	movf	___aldiv@quotient,w
  3967     00BC  00A5               	movwf	?___aldiv
  3968     00BD                     l446:
  3969     00BD  0008               	return
  3970     00BE                     __end_of___aldiv:
  3971                           
  3972                           	psect	text20
  3973     061B                     __ptext20:	
  3974 ;; *************** function _UART *****************
  3975 ;; Defined at:
  3976 ;;		line 169 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3990 ;;      Params:         0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 4
  3997 ;; This function calls:
  3998 ;;		_UART_write_char
  3999 ;;		_UART_write_string
  4000 ;; This function is called by:
  4001 ;;		_main
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005     061B                     _UART:	
  4006                           ;psect for function _UART
  4007                           
  4008     061B                     l1761:	
  4009                           ;incstack = 0
  4010                           ; Regs used in _UART: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4011                           
  4012                           
  4013                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 171:         UART_write_string("Voltaje del poten
      +                          ciometro: ");
  4014     061B  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  4015     061C  120A  118A  2748  120A  118A  	fcall	_UART_write_string
  4016     0621                     l1763:
  4017                           
  4018                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 172:         UART_write_char(volt[0]);
  4019     0621  1283               	bcf	3,5	;RP0=0, select bank0
  4020     0622  1303               	bcf	3,6	;RP1=0, select bank0
  4021     0623  0849               	movf	_volt,w
  4022     0624  120A  118A  27E1  120A  118A  	fcall	_UART_write_char
  4023     0629                     l1765:
  4024                           
  4025                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 173:         UART_write_char('.');
  4026     0629  302E               	movlw	46
  4027     062A  120A  118A  27E1  120A  118A  	fcall	_UART_write_char
  4028     062F                     l1767:
  4029                           
  4030                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 174:         UART_write_char(volt[1]);
  4031     062F  1283               	bcf	3,5	;RP0=0, select bank0
  4032     0630  1303               	bcf	3,6	;RP1=0, select bank0
  4033     0631  084A               	movf	_volt+1,w
  4034     0632  120A  118A  27E1  120A  118A  	fcall	_UART_write_char
  4035     0637                     l1769:
  4036                           
  4037                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 175:         UART_write_char(volt[2]);
  4038     0637  1283               	bcf	3,5	;RP0=0, select bank0
  4039     0638  1303               	bcf	3,6	;RP1=0, select bank0
  4040     0639  084B               	movf	_volt+2,w
  4041     063A  120A  118A  27E1  120A  118A  	fcall	_UART_write_char
  4042                           
  4043                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 176:         UART_write_string("V\n\r");
  4044     063F  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  4045     0640  120A  118A  2748  120A  118A  	fcall	_UART_write_string
  4046     0645                     l1771:
  4047                           
  4048                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 178:         if(UART_read == '+')
  4049     0645  302B               	movlw	43
  4050     0646  067A               	xorwf	_UART_read,w
  4051     0647  1D03               	btfss	3,2
  4052     0648  2E4A               	goto	u1521
  4053     0649  2E4B               	goto	u1520
  4054     064A                     u1521:
  4055     064A  2E52               	goto	l1775
  4056     064B                     u1520:
  4057     064B                     l1773:
  4058                           
  4059                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 179:             counter++;
  4060     064B  3001               	movlw	1
  4061     064C  00FF               	movwf	btemp+1
  4062     064D  087F               	movf	btemp+1,w
  4063     064E  1283               	bcf	3,5	;RP0=0, select bank0
  4064     064F  1303               	bcf	3,6	;RP1=0, select bank0
  4065     0650  07C8               	addwf	_counter,f
  4066     0651  2E5C               	goto	l234
  4067     0652                     l1775:
  4068     0652  302D               	movlw	45
  4069     0653  067A               	xorwf	_UART_read,w
  4070     0654  1D03               	btfss	3,2
  4071     0655  2E57               	goto	u1531
  4072     0656  2E58               	goto	u1530
  4073     0657                     u1531:
  4074     0657  2E5C               	goto	l234
  4075     0658                     u1530:
  4076     0658                     l1777:
  4077                           
  4078                           ;../../laboratorio2/Lab2_ED2.X/Lab2.c: 181:             counter--;
  4079     0658  3001               	movlw	1
  4080     0659  1283               	bcf	3,5	;RP0=0, select bank0
  4081     065A  1303               	bcf	3,6	;RP1=0, select bank0
  4082     065B  02C8               	subwf	_counter,f
  4083     065C                     l234:
  4084     065C  0008               	return
  4085     065D                     __end_of_UART:
  4086                           
  4087                           	psect	text21
  4088     0748                     __ptext21:	
  4089 ;; *************** function _UART_write_string *****************
  4090 ;; Defined at:
  4091 ;;		line 49 in file "UART.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;  s               1    wreg     PTR unsigned char 
  4094 ;;		 -> STR_4(4), STR_3(28), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  s               1    5[COMMON] PTR unsigned char 
  4097 ;;		 -> STR_4(4), STR_3(28), 
  4098 ;;  i               2    3[COMMON] int 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  1    wreg      void 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       0       0       0
  4109 ;;      Locals:         3       0       0       0       0
  4110 ;;      Temps:          0       0       0       0       0
  4111 ;;      Totals:         3       0       0       0       0
  4112 ;;Total ram usage:        3 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 3
  4115 ;; This function calls:
  4116 ;;		_UART_write_char
  4117 ;; This function is called by:
  4118 ;;		_UART
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122     0748                     _UART_write_string:	
  4123                           ;psect for function _UART_write_string
  4124                           
  4125                           
  4126                           ;incstack = 0
  4127                           ; Regs used in _UART_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4128                           ;UART_write_string@s stored from wreg
  4129     0748  00F5               	movwf	UART_write_string@s
  4130     0749                     l1651:
  4131                           
  4132                           ;UART.c: 50:     int i;;UART.c: 51:     for (i = 0; s[i] != '\0'; i++)
  4133     0749  01F3               	clrf	UART_write_string@i
  4134     074A  01F4               	clrf	UART_write_string@i+1
  4135     074B  2F5F               	goto	l1657
  4136     074C                     l1653:
  4137                           
  4138                           ;UART.c: 52:         UART_write_char(s[i]);
  4139     074C  0873               	movf	UART_write_string@i,w
  4140     074D  0775               	addwf	UART_write_string@s,w
  4141     074E  0084               	movwf	4
  4142     074F  120A  118A  259D  120A  118A  	fcall	stringdir
  4143     0754  120A  118A  27E1  120A  118A  	fcall	_UART_write_char
  4144     0759                     l1655:
  4145     0759  3001               	movlw	1
  4146     075A  07F3               	addwf	UART_write_string@i,f
  4147     075B  1803               	skipnc
  4148     075C  0AF4               	incf	UART_write_string@i+1,f
  4149     075D  3000               	movlw	0
  4150     075E  07F4               	addwf	UART_write_string@i+1,f
  4151     075F                     l1657:
  4152     075F  0873               	movf	UART_write_string@i,w
  4153     0760  0775               	addwf	UART_write_string@s,w
  4154     0761  0084               	movwf	4
  4155     0762  120A  118A  259D  120A  118A  	fcall	stringdir
  4156     0767  3A00               	xorlw	0
  4157     0768  1D03               	skipz
  4158     0769  2F6B               	goto	u1461
  4159     076A  2F6C               	goto	u1460
  4160     076B                     u1461:
  4161     076B  2F4C               	goto	l1653
  4162     076C                     u1460:
  4163     076C                     l282:
  4164     076C  0008               	return
  4165     076D                     __end_of_UART_write_string:
  4166                           
  4167                           	psect	text22
  4168     07E1                     __ptext22:	
  4169 ;; *************** function _UART_write_char *****************
  4170 ;; Defined at:
  4171 ;;		line 42 in file "UART.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  c               1    wreg     unsigned char 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  c               1    2[COMMON] unsigned char 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         1       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0
  4188 ;;      Totals:         1       0       0       0       0
  4189 ;;Total ram usage:        1 bytes
  4190 ;; Hardware stack levels used: 1
  4191 ;; Hardware stack levels required when called: 2
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_UART
  4196 ;;		_UART_write_string
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200     07E1                     _UART_write_char:	
  4201                           ;psect for function _UART_write_char
  4202                           
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _UART_write_char: [wreg]
  4206                           ;UART_write_char@c stored from wreg
  4207     07E1  00F2               	movwf	UART_write_char@c
  4208     07E2                     l1397:
  4209     07E2                     l273:	
  4210                           ;UART.c: 43:     while(!TXIF);
  4211                           
  4212     07E2  1283               	bcf	3,5	;RP0=0, select bank0
  4213     07E3  1303               	bcf	3,6	;RP1=0, select bank0
  4214     07E4  1E0C               	btfss	12,4	;volatile
  4215     07E5  2FE7               	goto	u861
  4216     07E6  2FE8               	goto	u860
  4217     07E7                     u861:
  4218     07E7  2FE2               	goto	l273
  4219     07E8                     u860:
  4220     07E8                     l275:
  4221                           
  4222                           ;UART.c: 44:     TXIF = 0;
  4223     07E8  120C               	bcf	12,4	;volatile
  4224     07E9                     l1399:
  4225                           
  4226                           ;UART.c: 45:     TXREG = c;
  4227     07E9  0872               	movf	UART_write_char@c,w
  4228     07EA  0099               	movwf	25	;volatile
  4229     07EB                     l276:
  4230     07EB  0008               	return
  4231     07EC                     __end_of_UART_write_char:
  4232                           
  4233                           	psect	text23
  4234     04AD                     __ptext23:	
  4235 ;; *************** function _Lcd_Init *****************
  4236 ;; Defined at:
  4237 ;;		line 79 in file "LCD.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, pclath, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4251 ;;      Params:         0       0       0       0       0
  4252 ;;      Locals:         0       0       0       0       0
  4253 ;;      Temps:          3       0       0       0       0
  4254 ;;      Totals:         3       0       0       0       0
  4255 ;;Total ram usage:        3 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 4
  4258 ;; This function calls:
  4259 ;;		_Lcd_Cmd
  4260 ;;		_Lcd_Port
  4261 ;; This function is called by:
  4262 ;;		_main
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266     04AD                     _Lcd_Init:	
  4267                           ;psect for function _Lcd_Init
  4268                           
  4269     04AD                     l1953:	
  4270                           ;incstack = 0
  4271                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4272                           
  4273                           
  4274                           ;LCD.c: 80:     RE0 = 0;
  4275     04AD  1283               	bcf	3,5	;RP0=0, select bank0
  4276     04AE  1303               	bcf	3,6	;RP1=0, select bank0
  4277     04AF  1009               	bcf	9,0	;volatile
  4278     04B0                     l1955:
  4279                           
  4280                           ;LCD.c: 81:     Lcd_Port(0x00);
  4281     04B0  3000               	movlw	0
  4282     04B1  120A  118A  265D  120A  118A  	fcall	_Lcd_Port
  4283     04B6                     l1957:
  4284                           
  4285                           ;LCD.c: 83:     _delay((unsigned long)((50)*(8000000/4000.0)));
  4286     04B6  3082               	movlw	130
  4287     04B7  00F7               	movwf	??_Lcd_Init+1
  4288     04B8  30DD               	movlw	221
  4289     04B9  00F6               	movwf	??_Lcd_Init
  4290     04BA                     u1887:
  4291     04BA  0BF6               	decfsz	??_Lcd_Init,f
  4292     04BB  2CBA               	goto	u1887
  4293     04BC  0BF7               	decfsz	??_Lcd_Init+1,f
  4294     04BD  2CBA               	goto	u1887
  4295     04BE  2CBF               	nop2
  4296     04BF                     l1959:
  4297                           
  4298                           ;LCD.c: 84:     Lcd_Cmd(0x30);
  4299     04BF  3030               	movlw	48
  4300     04C0  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4301                           
  4302                           ;LCD.c: 85:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4303     04C5  300D               	movlw	13
  4304     04C6  00F7               	movwf	??_Lcd_Init+1
  4305     04C7  30FB               	movlw	251
  4306     04C8  00F6               	movwf	??_Lcd_Init
  4307     04C9                     u1897:
  4308     04C9  0BF6               	decfsz	??_Lcd_Init,f
  4309     04CA  2CC9               	goto	u1897
  4310     04CB  0BF7               	decfsz	??_Lcd_Init+1,f
  4311     04CC  2CC9               	goto	u1897
  4312     04CD  2CCE               	nop2
  4313     04CE                     l1961:
  4314                           
  4315                           ;LCD.c: 86:     Lcd_Cmd(0x30);
  4316     04CE  3030               	movlw	48
  4317     04CF  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4318     04D4                     l1963:
  4319                           
  4320                           ;LCD.c: 87:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  4321     04D4  3042               	movlw	66
  4322     04D5  00F6               	movwf	??_Lcd_Init
  4323     04D6                     u1907:
  4324     04D6  0BF6               	decfsz	??_Lcd_Init,f
  4325     04D7  2CD6               	goto	u1907
  4326     04D8  0000               	nop
  4327                           
  4328                           ;LCD.c: 88:     Lcd_Cmd(0x30);
  4329     04D9  3030               	movlw	48
  4330     04DA  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4331                           
  4332                           ;LCD.c: 90:     Lcd_Cmd(0x38);
  4333     04DF  3038               	movlw	56
  4334     04E0  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4335                           
  4336                           ;LCD.c: 91:     Lcd_Cmd(0x0C);
  4337     04E5  300C               	movlw	12
  4338     04E6  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4339                           
  4340                           ;LCD.c: 92:     Lcd_Cmd(0x01);
  4341     04EB  3001               	movlw	1
  4342     04EC  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4343                           
  4344                           ;LCD.c: 93:     Lcd_Cmd(0x06);
  4345     04F1  3006               	movlw	6
  4346     04F2  120A  118A  278D  120A  118A  	fcall	_Lcd_Cmd
  4347     04F7                     l1965:
  4348                           
  4349                           ;LCD.c: 94:     _delay((unsigned long)((500)*(8000000/4000.0)));
  4350     04F7  3006               	movlw	6
  4351     04F8  00F8               	movwf	??_Lcd_Init+2
  4352     04F9  3013               	movlw	19
  4353     04FA  00F7               	movwf	??_Lcd_Init+1
  4354     04FB  30AD               	movlw	173
  4355     04FC  00F6               	movwf	??_Lcd_Init
  4356     04FD                     u1917:
  4357     04FD  0BF6               	decfsz	??_Lcd_Init,f
  4358     04FE  2CFD               	goto	u1917
  4359     04FF  0BF7               	decfsz	??_Lcd_Init+1,f
  4360     0500  2CFD               	goto	u1917
  4361     0501  0BF8               	decfsz	??_Lcd_Init+2,f
  4362     0502  2CFD               	goto	u1917
  4363     0503  2D04               	nop2
  4364     0504                     l106:
  4365     0504  0008               	return
  4366     0505                     __end_of_Lcd_Init:
  4367                           
  4368                           	psect	text24
  4369     078D                     __ptext24:	
  4370 ;; *************** function _Lcd_Cmd *****************
  4371 ;; Defined at:
  4372 ;;		line 56 in file "LCD.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;  a               1    wreg     unsigned char 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;  a               1    5[COMMON] unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4386 ;;      Params:         0       0       0       0       0
  4387 ;;      Locals:         1       0       0       0       0
  4388 ;;      Temps:          2       0       0       0       0
  4389 ;;      Totals:         3       0       0       0       0
  4390 ;;Total ram usage:        3 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 3
  4393 ;; This function calls:
  4394 ;;		_Lcd_Port
  4395 ;; This function is called by:
  4396 ;;		_Lcd_Clear
  4397 ;;		_Lcd_Set_Cursor
  4398 ;;		_Lcd_Init
  4399 ;;		_Lcd_Shift_Right
  4400 ;;		_Lcd_Shift_Left
  4401 ;; This function uses a non-reentrant model
  4402 ;;
  4403                           
  4404     078D                     _Lcd_Cmd:	
  4405                           ;psect for function _Lcd_Cmd
  4406                           
  4407                           
  4408                           ;incstack = 0
  4409                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4410                           ;Lcd_Cmd@a stored from wreg
  4411     078D  00F5               	movwf	Lcd_Cmd@a
  4412     078E                     l1835:
  4413                           
  4414                           ;LCD.c: 57:     RE0 = 0;
  4415     078E  1283               	bcf	3,5	;RP0=0, select bank0
  4416     078F  1303               	bcf	3,6	;RP1=0, select bank0
  4417     0790  1009               	bcf	9,0	;volatile
  4418     0791                     l1837:
  4419                           
  4420                           ;LCD.c: 58:     Lcd_Port(a);
  4421     0791  0875               	movf	Lcd_Cmd@a,w
  4422     0792  120A  118A  265D  120A  118A  	fcall	_Lcd_Port
  4423     0797                     l1839:
  4424                           
  4425                           ;LCD.c: 59:     RE1 = 1;
  4426     0797  1283               	bcf	3,5	;RP0=0, select bank0
  4427     0798  1303               	bcf	3,6	;RP1=0, select bank0
  4428     0799  1489               	bsf	9,1	;volatile
  4429     079A                     l1841:
  4430                           
  4431                           ;LCD.c: 60:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4432     079A  300B               	movlw	11
  4433     079B  00F4               	movwf	??_Lcd_Cmd+1
  4434     079C  3062               	movlw	98
  4435     079D  00F3               	movwf	??_Lcd_Cmd
  4436     079E                     u1927:
  4437     079E  0BF3               	decfsz	??_Lcd_Cmd,f
  4438     079F  2F9E               	goto	u1927
  4439     07A0  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4440     07A1  2F9E               	goto	u1927
  4441     07A2  0000               	nop
  4442     07A3                     l1843:
  4443                           
  4444                           ;LCD.c: 61:     RE1 = 0;
  4445     07A3  1283               	bcf	3,5	;RP0=0, select bank0
  4446     07A4  1303               	bcf	3,6	;RP1=0, select bank0
  4447     07A5  1089               	bcf	9,1	;volatile
  4448     07A6                     l94:
  4449     07A6  0008               	return
  4450     07A7                     __end_of_Lcd_Cmd:
  4451                           
  4452                           	psect	text25
  4453     065D                     __ptext25:	
  4454 ;; *************** function _Lcd_Port *****************
  4455 ;; Defined at:
  4456 ;;		line 13 in file "LCD.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  a               1    wreg     unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  a               1    2[COMMON] unsigned char 
  4461 ;; Return value:  Size  Location     Type
  4462 ;;                  1    wreg      void 
  4463 ;; Registers used:
  4464 ;;		wreg
  4465 ;; Tracked objects:
  4466 ;;		On entry : 0/0
  4467 ;;		On exit  : 0/0
  4468 ;;		Unchanged: 0/0
  4469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4470 ;;      Params:         0       0       0       0       0
  4471 ;;      Locals:         1       0       0       0       0
  4472 ;;      Temps:          0       0       0       0       0
  4473 ;;      Totals:         1       0       0       0       0
  4474 ;;Total ram usage:        1 bytes
  4475 ;; Hardware stack levels used: 1
  4476 ;; Hardware stack levels required when called: 2
  4477 ;; This function calls:
  4478 ;;		Nothing
  4479 ;; This function is called by:
  4480 ;;		_Lcd_Cmd
  4481 ;;		_Lcd_Init
  4482 ;;		_Lcd_Write_Char
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     065D                     _Lcd_Port:	
  4487                           ;psect for function _Lcd_Port
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _Lcd_Port: [wreg]
  4492                           ;Lcd_Port@a stored from wreg
  4493     065D  00F2               	movwf	Lcd_Port@a
  4494     065E                     l1817:
  4495                           
  4496                           ;LCD.c: 14:     if (a & 1)
  4497     065E  1C72               	btfss	Lcd_Port@a,0
  4498     065F  2E61               	goto	u1541
  4499     0660  2E62               	goto	u1540
  4500     0661                     u1541:
  4501     0661  2E66               	goto	l75
  4502     0662                     u1540:
  4503     0662                     l1819:
  4504                           
  4505                           ;LCD.c: 15:         RD0 = 1;
  4506     0662  1283               	bcf	3,5	;RP0=0, select bank0
  4507     0663  1303               	bcf	3,6	;RP1=0, select bank0
  4508     0664  1408               	bsf	8,0	;volatile
  4509     0665  2E69               	goto	l76
  4510     0666                     l75:	
  4511                           ;LCD.c: 16:     else
  4512                           
  4513                           
  4514                           ;LCD.c: 17:         RD0 = 0;
  4515     0666  1283               	bcf	3,5	;RP0=0, select bank0
  4516     0667  1303               	bcf	3,6	;RP1=0, select bank0
  4517     0668  1008               	bcf	8,0	;volatile
  4518     0669                     l76:
  4519                           
  4520                           ;LCD.c: 19:     if (a & 2)
  4521     0669  1CF2               	btfss	Lcd_Port@a,1
  4522     066A  2E6C               	goto	u1551
  4523     066B  2E6D               	goto	u1550
  4524     066C                     u1551:
  4525     066C  2E6F               	goto	l77
  4526     066D                     u1550:
  4527     066D                     l1821:
  4528                           
  4529                           ;LCD.c: 20:         RD1 = 1;
  4530     066D  1488               	bsf	8,1	;volatile
  4531     066E  2E70               	goto	l78
  4532     066F                     l77:	
  4533                           ;LCD.c: 21:     else
  4534                           
  4535                           
  4536                           ;LCD.c: 22:         RD1 = 0;
  4537     066F  1088               	bcf	8,1	;volatile
  4538     0670                     l78:
  4539                           
  4540                           ;LCD.c: 24:     if (a & 4)
  4541     0670  1D72               	btfss	Lcd_Port@a,2
  4542     0671  2E73               	goto	u1561
  4543     0672  2E74               	goto	u1560
  4544     0673                     u1561:
  4545     0673  2E76               	goto	l79
  4546     0674                     u1560:
  4547     0674                     l1823:
  4548                           
  4549                           ;LCD.c: 25:         RD2 = 1;
  4550     0674  1508               	bsf	8,2	;volatile
  4551     0675  2E77               	goto	l80
  4552     0676                     l79:	
  4553                           ;LCD.c: 26:     else
  4554                           
  4555                           
  4556                           ;LCD.c: 27:         RD2 = 0;
  4557     0676  1108               	bcf	8,2	;volatile
  4558     0677                     l80:
  4559                           
  4560                           ;LCD.c: 29:     if (a & 8)
  4561     0677  1DF2               	btfss	Lcd_Port@a,3
  4562     0678  2E7A               	goto	u1571
  4563     0679  2E7B               	goto	u1570
  4564     067A                     u1571:
  4565     067A  2E7D               	goto	l81
  4566     067B                     u1570:
  4567     067B                     l1825:
  4568                           
  4569                           ;LCD.c: 30:         RD3 = 1;
  4570     067B  1588               	bsf	8,3	;volatile
  4571     067C  2E7E               	goto	l82
  4572     067D                     l81:	
  4573                           ;LCD.c: 31:     else
  4574                           
  4575                           
  4576                           ;LCD.c: 32:         RD3 = 0;
  4577     067D  1188               	bcf	8,3	;volatile
  4578     067E                     l82:
  4579                           
  4580                           ;LCD.c: 34:     if (a & 16)
  4581     067E  1E72               	btfss	Lcd_Port@a,4
  4582     067F  2E81               	goto	u1581
  4583     0680  2E82               	goto	u1580
  4584     0681                     u1581:
  4585     0681  2E84               	goto	l83
  4586     0682                     u1580:
  4587     0682                     l1827:
  4588                           
  4589                           ;LCD.c: 35:         RD4 = 1;
  4590     0682  1608               	bsf	8,4	;volatile
  4591     0683  2E85               	goto	l84
  4592     0684                     l83:	
  4593                           ;LCD.c: 36:     else
  4594                           
  4595                           
  4596                           ;LCD.c: 37:         RD4 = 0;
  4597     0684  1208               	bcf	8,4	;volatile
  4598     0685                     l84:
  4599                           
  4600                           ;LCD.c: 39:     if (a & 32)
  4601     0685  1EF2               	btfss	Lcd_Port@a,5
  4602     0686  2E88               	goto	u1591
  4603     0687  2E89               	goto	u1590
  4604     0688                     u1591:
  4605     0688  2E8B               	goto	l85
  4606     0689                     u1590:
  4607     0689                     l1829:
  4608                           
  4609                           ;LCD.c: 40:         RD5 = 1;
  4610     0689  1688               	bsf	8,5	;volatile
  4611     068A  2E8C               	goto	l86
  4612     068B                     l85:	
  4613                           ;LCD.c: 41:     else
  4614                           
  4615                           
  4616                           ;LCD.c: 42:         RD5 = 0;
  4617     068B  1288               	bcf	8,5	;volatile
  4618     068C                     l86:
  4619                           
  4620                           ;LCD.c: 44:     if (a & 64)
  4621     068C  1F72               	btfss	Lcd_Port@a,6
  4622     068D  2E8F               	goto	u1601
  4623     068E  2E90               	goto	u1600
  4624     068F                     u1601:
  4625     068F  2E92               	goto	l87
  4626     0690                     u1600:
  4627     0690                     l1831:
  4628                           
  4629                           ;LCD.c: 45:         RD6 = 1;
  4630     0690  1708               	bsf	8,6	;volatile
  4631     0691  2E93               	goto	l88
  4632     0692                     l87:	
  4633                           ;LCD.c: 46:     else
  4634                           
  4635                           
  4636                           ;LCD.c: 47:         RD6 = 0;
  4637     0692  1308               	bcf	8,6	;volatile
  4638     0693                     l88:
  4639                           
  4640                           ;LCD.c: 49:     if (a & 128)
  4641     0693  1FF2               	btfss	Lcd_Port@a,7
  4642     0694  2E96               	goto	u1611
  4643     0695  2E97               	goto	u1610
  4644     0696                     u1611:
  4645     0696  2E99               	goto	l89
  4646     0697                     u1610:
  4647     0697                     l1833:
  4648                           
  4649                           ;LCD.c: 50:         RD7 = 1;
  4650     0697  1788               	bsf	8,7	;volatile
  4651     0698  2E9A               	goto	l91
  4652     0699                     l89:	
  4653                           ;LCD.c: 51:     else
  4654                           
  4655                           
  4656                           ;LCD.c: 52:         RD7 = 0;
  4657     0699  1388               	bcf	8,7	;volatile
  4658     069A                     l91:
  4659     069A  0008               	return
  4660     069B                     __end_of_Lcd_Port:
  4661                           
  4662                           	psect	text26
  4663     07BD                     __ptext26:	
  4664 ;; *************** function _isr *****************
  4665 ;; Defined at:
  4666 ;;		line 61 in file "../../laboratorio2/Lab2_ED2.X/Lab2.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4680 ;;      Params:         0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0
  4682 ;;      Temps:          2       0       0       0       0
  4683 ;;      Totals:         2       0       0       0       0
  4684 ;;Total ram usage:        2 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 1
  4687 ;; This function calls:
  4688 ;;		_UART_read_char
  4689 ;; This function is called by:
  4690 ;;		Interrupt level 1
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     07BD                     _isr:	
  4695                           ;psect for function _isr
  4696                           
  4697     07BD                     i1l1319:
  4698     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  4699     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  4700     07BF  1E8C               	btfss	12,5	;volatile
  4701     07C0  2FC2               	goto	u77_21
  4702     07C1  2FC3               	goto	u77_20
  4703     07C2                     u77_21:
  4704     07C2  2FCC               	goto	i1l205
  4705     07C3                     u77_20:
  4706     07C3                     i1l1321:
  4707     07C3  120A  118A  27F3  120A  118A  	fcall	_UART_read_char
  4708     07C8  00FA               	movwf	_UART_read
  4709     07C9                     i1l1323:
  4710     07C9  1283               	bcf	3,5	;RP0=0, select bank0
  4711     07CA  1303               	bcf	3,6	;RP1=0, select bank0
  4712     07CB  128C               	bcf	12,5	;volatile
  4713     07CC                     i1l205:
  4714     07CC  0871               	movf	??_isr+1,w
  4715     07CD  008A               	movwf	10
  4716     07CE  0E70               	swapf	??_isr,w
  4717     07CF  0083               	movwf	3
  4718     07D0  0EFE               	swapf	btemp,f
  4719     07D1  0E7E               	swapf	btemp,w
  4720     07D2  0009               	retfie
  4721     07D3                     __end_of_isr:
  4722                           
  4723                           	psect	intentry
  4724     0004                     __pintentry:	
  4725                           ;incstack = 0
  4726                           ; Regs used in _isr: [wreg+pclath+cstack]
  4727                           
  4728     0004                     interrupt_function:
  4729     007E                     saved_w	set	btemp
  4730     0004  00FE               	movwf	btemp
  4731     0005  0E03               	swapf	3,w
  4732     0006  00F0               	movwf	??_isr
  4733     0007  080A               	movf	10,w
  4734     0008  00F1               	movwf	??_isr+1
  4735     0009  120A  118A  2FBD   	ljmp	_isr
  4736                           
  4737                           	psect	text27
  4738     07F3                     __ptext27:	
  4739 ;; *************** function _UART_read_char *****************
  4740 ;; Defined at:
  4741 ;;		line 57 in file "UART.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      unsigned char 
  4748 ;; Registers used:
  4749 ;;		wreg
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_isr
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768     07F3                     _UART_read_char:	
  4769                           ;psect for function _UART_read_char
  4770                           
  4771     07F3                     i1l1197:	
  4772                           ;incstack = 0
  4773                           ; Regs used in _UART_read_char: [wreg]
  4774                           
  4775                           
  4776                           ;UART.c: 68:     return RCREG;
  4777     07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4778     07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4779     07F5  081A               	movf	26,w	;volatile
  4780     07F6                     i1l285:
  4781     07F6  0008               	return
  4782     07F7                     __end_of_UART_read_char:
  4783     007E                     btemp	set	126	;btemp
  4784     007E                     wtemp0	set	126
  4785                           
  4786                           	psect	config
  4787                           
  4788                           ;Config register CONFIG1 @ 0x2007
  4789                           ;	Oscillator Selection bits
  4790                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4791                           ;	Watchdog Timer Enable bit
  4792                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4793                           ;	Power-up Timer Enable bit
  4794                           ;	PWRTE = OFF, PWRT disabled
  4795                           ;	RE3/MCLR pin function select bit
  4796                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4797                           ;	Code Protection bit
  4798                           ;	CP = OFF, Program memory code protection is disabled
  4799                           ;	Data Code Protection bit
  4800                           ;	CPD = OFF, Data memory code protection is disabled
  4801                           ;	Brown Out Reset Selection bits
  4802                           ;	BOREN = OFF, BOR disabled
  4803                           ;	Internal External Switchover bit
  4804                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4805                           ;	Fail-Safe Clock Monitor Enabled bit
  4806                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4807                           ;	Low Voltage Programming Enable bit
  4808                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4809                           ;	In-Circuit Debugger Mode bit
  4810                           ;	DEBUG = 0x1, unprogrammed default
  4811     2007                     	org	8199
  4812     2007  20D4               	dw	8404
  4813                           
  4814                           ;Config register CONFIG2 @ 0x2008
  4815                           ;	Brown-out Reset Selection bit
  4816                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4817                           ;	Flash Program Memory Self Write Enable bits
  4818                           ;	WRT = OFF, Write protection off
  4819     2008                     	org	8200
  4820     2008  3FFF               	dw	16383

Data Sizes:
    Strings     52
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     37      47
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_write_string@s	PTR unsigned char  size(1) Largest target is 28
		 -> STR_4(CODE[4]), STR_3(CODE[28]), 

    separar_digitos16@dig16	PTR unsigned char  size(1) Largest target is 3
		 -> volt(BANK0[3]), 

    separar_digitos8@dig8	PTR unsigned char  size(1) Largest target is 3
		 -> count(BANK0[3]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 10
		 -> STR_2(CODE[10]), count(BANK0[3]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _setup->_adc_init
    _output_LCD->_Lcd_Write_String
    _separar_digitos8->___awdiv
    _separar_digitos16->___lwdiv
    _map->___lmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    ___aldiv->___lmul
    _UART->_UART_write_string
    _UART_write_string->_UART_write_char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_RX_config
    _main->_UART_TX_config
    _output_LCD->_map
    _map->___aldiv
    _UART_TX_config->___aldiv
    _UART_RX_config->___aldiv
    ___aldiv->___lmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11740
                           _Lcd_Init
                               _UART
                     _UART_RX_config
                     _UART_TX_config
                           _adc_read
                         _output_LCD
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     338
                           _adc_init
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     3      3     338
                                              2 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _output_LCD                                           0     0      0    7545
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                                _map
                  _separar_digitos16
                   _separar_digitos8
 ---------------------------------------------------------------------------------
 (2) _separar_digitos8                                    10     9      1    1802
                                              0 BANK0      9     8      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     752
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _separar_digitos16                                   15    12      3    1617
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              2 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _map                                                 16     9      7    2238
                                             20 BANK0     16     9      7
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     316
                                              2 COMMON     8     0      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     679
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0     279
                                              3 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1     651
                                              6 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     279
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _UART_TX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _UART_RX_config                                      17    13      4    1565
                                             20 BANK0     17    13      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8    1345
                                              5 BANK0     15     7      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART                                                 0     0      0     200
                    _UART_write_char
                  _UART_write_string
 ---------------------------------------------------------------------------------
 (2) _UART_write_string                                    3     3      0     178
                                              3 COMMON     3     3      0
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (3) _UART_write_char                                      1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             3     3      0     527
                                              6 COMMON     3     3      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     279
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     248
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                     _UART_read_char
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _UART
     _UART_write_char
     _UART_write_string
       _UART_write_char
   _UART_RX_config
     ___aldiv
       ___lmul (ARG)
   _UART_TX_config
     ___aldiv
   _adc_read
   _output_LCD
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
     _map
       ___aldiv
       ___lmul
     _separar_digitos16
       ___lwdiv
       ___lwmod
     _separar_digitos8
       ___awdiv
       ___awmod
   _setup
     _adc_init

 _isr (ROOT)
   _UART_read_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      2F       5       58.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jul 28 13:41:56 2023

 separar_digitos8@centenas 0024                          pc 0002                         l41 07D6  
                       l44 07E0                         l38 0453                         l80 0677  
                       l81 067D                         l82 067E                         l91 069A  
                       l83 0684                         l75 0666                         l84 0685  
                       l76 0669                         l85 068B                         l77 066F  
                       l86 068C                         l78 0670                         l94 07A6  
                       l87 0692                         l79 0676                         l88 0693  
                       l89 0699                         l97 07F2               ___awdiv@sign 0077  
                       fsr 0004                        l103 078C                        l106 0504  
                      l115 0592                        l109 07BC                        l222 02BE  
                      l216 0747                        l225 0331                        l234 065C  
                      l219 0141                        l228 03F9                        l270 0245  
                      l273 07E2                        l282 076C                        l275 07E8  
                      l267 01C4                        l276 07EB                        l436 0035  
                      l524 0398                        l446 00BD                        l385 054C  
                      l537 04AC                        l643 061A                        l653 0711  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RE0 0048                        _RD3 0043  
                      _RE1 0049                        _RD4 0044                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        _SCS 0478  
                      u860 07E8                        u861 07E7                        _map 0399  
                      _isr 07BD                        fsr0 0004                        indf 0000  
             ___awmod@sign 0077                       l2001 0242   separar_digitos8@unidades 0026  
                     l2011 00E7                       l2003 00BE                       l2021 0125  
                     l2013 0101                       l2005 00CB                       l2023 012B  
                     l2015 010C                       l2007 00D4                       l2025 0133  
                     l2017 0114                       l2009 00DE                       l2041 06C3  
                     l2033 069B                       l2027 013B                       l2019 011D  
                     l2043 06CA                       l2035 06A0                       l1501 0454  
                     l2045 06CF                       l2037 06A5                       l1511 0464  
                     l1503 0455                       l2039 06B4                       l1521 047D  
                     l1513 0469                       l1505 0459                       l1601 0448  
                     l1523 0481                       l1515 046F                       l1531 049E  
                     l1507 045E                       l1603 0452                       l2067 043A  
                     l1541 05D9                       l1461 0337                       l1533 04A3  
                     l1525 048B                       l1517 0472                       l1509 0460  
                     l1551 05F1                       l1543 05DF                       l1471 034B  
                     l1463 033C                       l1535 04A8                       l1527 0491  
                     l1519 0479                       l1553 0602                       l1545 05E2  
                     l1561 0616                       l1481 0361                       l1473 034D  
                     l1465 033E                       l1457 0332                       l1529 0498  
                     l1651 0749                       l1555 0608                       l1547 05E9  
                     l1539 05D7                       l1571 06E8                       l1491 0384  
                     l1483 0365                       l1475 0353                       l1467 0342  
                     l1459 0333                       l1821 066D                       l1397 07E2  
                     l1653 074C                       l1901 009F                       l1661 07DA  
                     l1557 0609                       l1549 05ED                       l1581 0707  
                     l1573 06EC                       l1565 06D8                       l1485 0376  
                     l1477 0356                       l1493 038A                       l1469 0347  
                     l1831 0690                       l1823 0674                       l1399 07E9  
                     l1655 0759                       l1903 00A5                       l1911 07EC  
                     l1559 0610                       l1575 06F0                       l1567 06DE  
                     l1583 070D                       l1495 038F                       l1487 037C  
                     l1479 035D                       l1591 041F                       l1833 0697  
                     l1825 067B                       l1817 065E                       l1841 079A  
                     l1657 075F                       l1761 061B                       l1905 00AA  
                     l1921 0783                       l1913 076E                       l1577 06FA  
                     l1569 06E1                       l1497 0394                       l1489 037D  
                     l1593 0426                       l1681 0715                       l1827 0682  
                     l1819 0662                       l1843 07A3                       l1835 078E  
                     l1771 0645                       l1763 0621                       l1907 00B5  
                     l1659 07D3                       l1923 0786                       l1915 0773  
                     l1851 07B4                       l1931 0576                       l1579 0700  
                     l1595 042D                       l1587 03FB                       l1691 0734  
                     l1683 0717                       l1829 0689                       l1837 0791  
                     l1773 064B                       l1765 0629                       l1917 0776  
                     l1853 07B9                       l1845 07A8                       l1925 054D  
                     l1861 052A                       l1941 039C                       l1933 0249  
                     l1589 041A                       l1693 0737                       l1685 072A  
                     l1839 0797                       l1775 0652                       l1767 062F  
                     l1871 0024                       l1919 077D                       l1847 07AB  
                     l1927 0552                       l1863 0533                       l1855 0505  
                     l1951 032C                       l1935 02AD                       l1599 0432  
                     l1695 073B                       l1687 072E                       l1679 0712  
                     l1961 04CE                       l1953 04AD                       l1777 0658  
                     l1769 0637                       l1881 0050                       l1873 0028  
                     l1849 07B1                       l1929 056E                       l1865 0544  
                     l1857 050F                       l1945 02BF                       l1937 02B4  
                     l1697 073C                       l1689 0731                       l1963 04D4  
                     l1955 04B0                       l1891 006C                       l1883 0058  
                     l1875 0039                       l1971 01A0                       l1859 0513  
                     l1947 0320                       l1939 02B9                       l1965 04F7  
                     l1957 04B6                       l1893 0075                       l1885 005B  
                     l1877 0044                       l1869 0021                       l1981 01BF  
                     l1973 01B7                       l1949 0327                       ?_map 0034  
                     l1959 04BF                       l1895 0087                       l1887 0064  
                     l1879 0048                       l1983 01C0                       l1975 01B8  
                     l1967 0142                       l1991 0223                       l1897 0095  
                     l1889 0068                       l1985 01C1                       l1977 01BB  
                     l1969 019C                       l1993 023A                       l1899 0096  
                     l1979 01BC                       l1995 023B                       l1987 01C5  
                     l1997 023E                       l1989 021F                       l1999 0241  
                     _ADFM 04FF                       ?_isr 0070                       _ADON 00F8  
                     STR_1 05C9                       STR_2 05BF                       STR_3 05A3  
                     STR_4 05D3                       _CREN 00C4                       u1100 038A  
                     u1020 0337                       u1101 0389                       u1021 0336  
                     u1110 038F                       u1030 0342                       u1111 038E  
                     u1031 0341                       u1040 0353                       u1200 04A3  
                     u1120 0459                       u1041 0352                       u1201 04A2  
                     u1121 0458                       u1210 05DF                       u1130 0464  
                     u1211 05DE                       u1131 0463                       u1300 06F0  
                     u1060 0365                       u1140 046F                       u1301 06EF  
                     u1061 0364                       u1141 046E                       u1230 05F1  
                     u1310 06FA                       u1231 05F0                       u1311 06F9  
                     u1055 0357                       u1080 0376                       u1160 0481  
                     u1225 05E3                       u1081 0375                       u1161 0480  
                     u1250 0602                       u1330 070D                       u1170 048B  
                     u1251 0601                       u1331 070C                       u1315 06F6  
                     u1075 0366                       u1171 048A                       u1155 0473  
                     u1340 0402                       _IOCB 0096                       u1245 05F2  
                     u1325 0701                       u1085 0372                       u1341 03FE  
                     u1270 0616                       u1190 049E                       u1271 0615  
                     u1255 05FE                       u1095 037E                       u1191 049D  
                     u1175 0487                       u1600 0690                       u1520 064B  
                     u1280 06DE                       u1360 040C                       u1601 068F  
                     u1521 064A                       u1265 060A                       u1281 06DD  
                     u1185 0492                       u1361 0408                       u1610 0697  
                     u1530 0658                       u1354 0405                       u1611 0696  
                     u1531 0657                       u1540 0662                       u1460 076C  
                     u1620 0513                       u1380 0416                       u1541 0661  
                     u1461 076B                       u1621 0512                       u1381 0412  
                     u1550 066D                       u1710 006C                       u1470 07DA  
                     u1374 040F                       u1551 066C                       u1711 006B  
                     u1471 07D9                       u1631 051C                       u1295 06E2  
                     u1560 0674                       u1800 0580                       u1632 0523  
                     u1561 0673                       u1705 005D                       u1633 052A  
                     u1570 067B                       u1730 0087                       u1810 0592  
                     u1394 0419                       u1571 067A                       u1731 0086  
                     u1811 0591                       u1580 0682                       u1660 0544  
                     u1581 0681                       u1725 006E                       u1661 0543  
                     u1645 052C                       u1821 03C6                       u1590 0689  
                     u1750 00A5                       u1670 0028                       u1830 0189  
                     u1822 03C7                       u1591 0688                       u1751 00A4  
                     u1735 0083                       u1671 0027                       u1831 018A  
                     u1655 0534                       u1823 03CC                       u1760 00AA  
                     u1680 0039                       u1840 01B1                       u1832 018F  
                     u1824 03CD                       u1761 00A9                       u1745 0097  
                     u1681 0038                       u1833 0190                       u1825 03D2  
                     u1690 0058                       u1850 020C                       u1770 0773  
                     u1826 03D3                       u1907 04D6                       u1691 0057  
                     u1851 020D                       u1771 0772                       u1860 0234  
                     u1852 0212                       u1780 0783                       u1917 04FD  
                     u1845 01AC                       u1853 0213                       u1781 0782  
                     u1790 055C                       u1927 079E                       u1865 022F  
                     _PEIE 005E                       u1877 07B6                       u1887 04BA  
                     _RBIE 005B                       u1897 04C9                       _RCIE 0465  
                     _RCIF 0065                       _UART 061B                       _SPEN 00C7  
                     _TXIE 0464                       _TXEN 04C5                       _TXIF 0064  
                     _SYNC 04C4                       _WPUB 0095          ?_Lcd_Write_String 0075  
                     _main 069B                       _prev 0047                       btemp 007E  
                     _volt 0049                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Lcd_Cmd 07A7           UART_write_char@c 0072                      ??_map 003B  
                    ??_isr 0070                      ?_UART 0070            __end_of___aldiv 00BE  
                    ?_main 0070            __end_of___awdiv 0399            __end_of___awmod 04AD  
                    _ANSEL 0188            ___awdiv@divisor 0072            __end_of___lwdiv 061B  
                    i1l205 07CC            __end_of___lwmod 0712                      i1l285 07F6  
          ___awdiv@counter 0076                      _VCFG0 04FC                      _VCFG1 04FD  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    u77_20 07C3                      u77_21 07C2                      _TXREG 0019  
      ___lmul@multiplicand 0076                      _nRBPU 040F                      _count 004C  
                    _setup 0712          ?_separar_digitos8 0020                      pclath 000A  
       ??_separar_digitos8 0021                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0505           __end_of_Lcd_Port 069B               __end_of_UART 065D  
          __initialization 000F               __end_of_main 06D8                     ??_UART 0076  
                   ??_main 007A                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0074                     ?_setup 0070                     _ANSELH 0189  
         __end_of_adc_init 0454           __end_of_adc_read 07E1                     i1l1321 07C3  
                   i1l1323 07C9                     i1l1319 07BD                     i1l1197 07F3  
                ??_Lcd_Cmd 0073                     _SPBRGH 009A         _UART_RX_config$966 003D  
                   ___lmul 0505                  ??___aldiv 002D                  ??___awdiv 0076  
                ??___awmod 0076                  ??___lwdiv 0076          _separar_digitos16 02BF  
                ??___lwmod 0076           ___awdiv@quotient 0078            ___awmod@divisor 0072  
       ?_separar_digitos16 0020            ___awmod@counter 0076                     map@val 0043  
          _UART_write_char 07E1  separar_digitos16@centenas 0025                     saved_w 007E  
      ??_separar_digitos16 0079            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0076  
  __end_of__initialization 001D           UART_RX_config@BR 0041          __end_of_Lcd_Clear 07F3  
__end_of_separar_digitos16 0332             __pcstackCOMMON 0070  separar_digitos16@unidades 0029  
            __end_of_setup 0748             _Lcd_Set_Cursor 076D                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0078                 __pbssBANK0 0045  
       _UART_TX_config$967 003D           UART_TX_config@BR 0041                 __pmaintext 069B  
                  ?___lmul 0072         UART_write_string@i 0073         UART_write_string@s 0075  
               __pintentry 0004    __end_of_UART_write_char 07EC             ___lmul@product 0021  
   __end_of_Lcd_Set_Cursor 078D                  ?_adc_init 0072                  ?_adc_read 0072  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                 __stringtab 0593  
           _Lcd_Write_Char 07A7                    _Lcd_Cmd 078D             _UART_RX_config 0142  
           _UART_TX_config 01C5                    ___aldiv 0021                    ___awdiv 0332  
                  ___awmod 0454                    ___lwdiv 05D7                    ___lwmod 06D8  
          ?_Lcd_Set_Cursor 0076                 ??_adc_init 0075                 ??_adc_read 0074  
                  __ptext1 0712                    __ptext2 03FA                    __ptext3 00BE  
                  __ptext4 0246                    __ptext5 0454                    __ptext6 0332  
                  __ptext7 02BF                    __ptext8 06D8                    __ptext9 05D7  
                  _counter 0048           ___awmod@dividend 0074           ___aldiv@dividend 0029  
                  _pot_val 007B                    map@max1 0035                    map@max2 0037  
                  map@min1 0034                    map@min2 0036     __end_of_Lcd_Write_Char 07BD  
     end_of_initialization 001D     __end_of_UART_RX_config 01C5     __end_of_UART_TX_config 0246  
         ___aldiv@quotient 0030                  Lcd_Port@a 0072           ?_UART_write_char 0070  
                _UART_read 007A    separar_digitos8@decenas 0025            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 0020            ?_UART_RX_config 0034  
               _output_LCD 00BE            ?_UART_TX_config 0034                  _Lcd_Clear 07EC  
   UART_RX_config@baudrate 0034             __end_of___lmul 054D             _UART_read_char 07F3  
         _Lcd_Write_String 054D        start_initialization 000F                __end_of_map 03FA  
              __end_of_isr 07D3                 ?_Lcd_Clear 0070                   ??___lmul 0020  
         _separar_digitos8 0246     __end_of_UART_read_char 07F7            adc_init@channel 0074  
          Lcd_Write_Char@a 0074                __pbssCOMMON 007A                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070              adc_init@clock 0073  
              ?_output_LCD 0070           ___lwdiv@dividend 0074                  adc_init@J 0077  
                adc_init@R 0072           ??_Lcd_Set_Cursor 0077                   ?___aldiv 0025  
          ?_UART_read_char 0070                   ?___awdiv 0072                   ?___awmod 0072  
                 ?___lwdiv 0072                   ?___lwmod 0072                  __pstrings 0593  
   separar_digitos16@dig16 0022           ___lwdiv@quotient 0076            ___aldiv@divisor 0025  
        interrupt_function 0004            ___aldiv@counter 002E                   Lcd_Cmd@a 0075  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 05A2  
         ??_Lcd_Write_Char 0073           ??_UART_RX_config 0038                   _Lcd_Init 04AD  
                 _Lcd_Port 065D           ??_UART_TX_config 0038          ___lmul@multiplier 0072  
 __end_of_Lcd_Write_String 0593   separar_digitos16@decenas 0027         __end_of__stringtab 05A3  
                 _adc_init 03FA                   _adc_read 07D3            ___lwdiv@divisor 0072  
          ___lwdiv@counter 0078                   __ptext10 0399                   __ptext11 0505  
                 __ptext20 061B                   __ptext12 054D                   __ptext21 0748  
                 __ptext13 07A7                   __ptext22 07E1                   __ptext14 076D  
                 __ptext23 04AD                   __ptext15 07EC                   __ptext24 078D  
                 __ptext16 07D3                   __ptext25 065D                   __ptext17 01C5  
                 __ptext26 07BD                   __ptext18 0142                   __ptext27 07F3  
                 __ptext19 0021   __end_of_separar_digitos8 02BF      separar_digitos16@div1 002B  
    separar_digitos16@div2 0023                   _pot_volt 0045     UART_TX_config@baudrate 0034  
                 intlevel1 0000           ___lwmod@dividend 0074               ??_output_LCD 007A  
        _UART_write_string 0748           ??_UART_read_char 0070       separar_digitos16@num 0020  
                stringcode 059D                 _OSCCONbits 008F         ?_UART_write_string 0070  
     separar_digitos8@dig8 0020       separar_digitos8@div1 0028       separar_digitos8@div2 0023  
       Lcd_Set_Cursor@temp 0078        ??_UART_write_string 0073            ___lwmod@divisor 0072  
          ___lwmod@counter 0076         __end_of_output_LCD 0142                   stringdir 059D  
                 stringtab 0593               ___aldiv@sign 002F        separar_digitos8@num 0027  
__end_of_UART_write_string 076D          ??_UART_write_char 0072  
